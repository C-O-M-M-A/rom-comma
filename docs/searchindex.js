Search.setIndex({"docnames": ["glossary", "index", "pages/package/reference", "pages/package/romcomma.base", "pages/package/romcomma.base.classes", "pages/package/romcomma.base.classes.Model", "pages/package/romcomma.base.classes.Parameters", "pages/package/romcomma.base.definitions", "pages/package/romcomma.base.definitions.FLOAT", "pages/package/romcomma.base.definitions.INT", "pages/package/romcomma.base.definitions.NP", "pages/package/romcomma.base.definitions.TF", "pages/package/romcomma.data", "pages/package/romcomma.data.storage", "pages/package/romcomma.data.storage.Fold", "pages/package/romcomma.data.storage.Frame", "pages/package/romcomma.data.storage.Normalization", "pages/package/romcomma.data.storage.Repository", "pages/package/romcomma.gpf", "pages/package/romcomma.gpf.base", "pages/package/romcomma.gpf.base.Variance", "pages/package/romcomma.gpf.kernels", "pages/package/romcomma.gpf.kernels.MOStationary", "pages/package/romcomma.gpf.kernels.RBF", "pages/package/romcomma.gpf.likelihoods", "pages/package/romcomma.gpf.likelihoods.MOGaussian", "pages/package/romcomma.gpf.mean_functions", "pages/package/romcomma.gpf.mean_functions.MOMeanFunction", "pages/package/romcomma.gpf.models", "pages/package/romcomma.gpf.models.MOGPR", "pages/package/romcomma.gpf.tests", "pages/package/romcomma.gpf.tests.covariance", "pages/package/romcomma.gpf.tests.increment", "pages/package/romcomma.gpf.tests.kernel", "pages/package/romcomma.gpf.tests.likelihood", "pages/package/romcomma.gpf.tests.regression_data", "pages/package/romcomma.gpr", "pages/package/romcomma.gpr.kernels", "pages/package/romcomma.gpr.kernels.Kernel", "pages/package/romcomma.gpr.kernels.RBF", "pages/package/romcomma.gpr.models", "pages/package/romcomma.gpr.models.MOGP", "pages/package/romcomma.gpr.models.GPR", "pages/package/romcomma.gpr.models.Likelihood", "pages/package/romcomma.gsa", "pages/package/romcomma.gsa.sobol", "pages/package/romcomma.gsa.sobol.ClosedSobol", "pages/package/romcomma.gsa.sobol.ClosedSobolWithError", "pages/package/romcomma.gsa.sobol.ClosedSobolWithRotation", "pages/package/romcomma.gsa.sobol.GaussianWithout2Pi", "pages/package/romcomma.gsa.sobol.det", "pages/package/romcomma.gsa.sobol.mean", "pages/package/romcomma.gsa.sobol.ms", "pages/package/romcomma.gsa.sobol.rms", "pages/package/romcomma.gsa.sobol.sos", "pages/package/romcomma.gsa.sobol.sym_check", "pages/package/romcomma.gsa.undertake", "pages/package/romcomma.gsa.undertake.GSA", "pages/package/romcomma.rom", "pages/package/romcomma.rom.old", "pages/package/romcomma.user", "pages/package/romcomma.user.context", "pages/package/romcomma.user.context.Setup", "pages/package/romcomma.user.context.Timer", "pages/package/romcomma.user.function", "pages/package/romcomma.user.function.ALL", "pages/package/romcomma.user.function.ISHIGAMI", "pages/package/romcomma.user.function.OAKLEY2004", "pages/package/romcomma.user.function.SOBOL_G", "pages/package/romcomma.user.function.Scalar", "pages/package/romcomma.user.function.Vector", "pages/package/romcomma.user.function.linspace", "pages/package/romcomma.user.results", "pages/package/romcomma.user.results.Collect", "pages/package/romcomma.user.results.copy", "pages/package/romcomma.user.run", "pages/package/romcomma.user.run.gpr", "pages/package/romcomma.user.run.gsa", "pages/package/romcomma.user.sample", "pages/package/romcomma.user.sample.DOE", "pages/package/romcomma.user.sample.Function", "pages/package/romcomma.user.sample.GaussianNoise", "pages/package/romcomma.user.scripts", "pages/package/romcomma.user.scripts.BASE_FOLDER", "pages/start"], "filenames": ["glossary.rst", "index.rst", "pages\\package\\reference.rst", "pages\\package\\romcomma.base.rst", "pages\\package\\romcomma.base.classes.rst", "pages\\package\\romcomma.base.classes.Model.rst", "pages\\package\\romcomma.base.classes.Parameters.rst", "pages\\package\\romcomma.base.definitions.rst", "pages\\package\\romcomma.base.definitions.FLOAT.rst", "pages\\package\\romcomma.base.definitions.INT.rst", "pages\\package\\romcomma.base.definitions.NP.rst", "pages\\package\\romcomma.base.definitions.TF.rst", "pages\\package\\romcomma.data.rst", "pages\\package\\romcomma.data.storage.rst", "pages\\package\\romcomma.data.storage.Fold.rst", "pages\\package\\romcomma.data.storage.Frame.rst", "pages\\package\\romcomma.data.storage.Normalization.rst", "pages\\package\\romcomma.data.storage.Repository.rst", "pages\\package\\romcomma.gpf.rst", "pages\\package\\romcomma.gpf.base.rst", "pages\\package\\romcomma.gpf.base.Variance.rst", "pages\\package\\romcomma.gpf.kernels.rst", "pages\\package\\romcomma.gpf.kernels.MOStationary.rst", "pages\\package\\romcomma.gpf.kernels.RBF.rst", "pages\\package\\romcomma.gpf.likelihoods.rst", "pages\\package\\romcomma.gpf.likelihoods.MOGaussian.rst", "pages\\package\\romcomma.gpf.mean_functions.rst", "pages\\package\\romcomma.gpf.mean_functions.MOMeanFunction.rst", "pages\\package\\romcomma.gpf.models.rst", "pages\\package\\romcomma.gpf.models.MOGPR.rst", "pages\\package\\romcomma.gpf.tests.rst", "pages\\package\\romcomma.gpf.tests.covariance.rst", "pages\\package\\romcomma.gpf.tests.increment.rst", "pages\\package\\romcomma.gpf.tests.kernel.rst", "pages\\package\\romcomma.gpf.tests.likelihood.rst", "pages\\package\\romcomma.gpf.tests.regression_data.rst", "pages\\package\\romcomma.gpr.rst", "pages\\package\\romcomma.gpr.kernels.rst", "pages\\package\\romcomma.gpr.kernels.Kernel.rst", "pages\\package\\romcomma.gpr.kernels.RBF.rst", "pages\\package\\romcomma.gpr.models.rst", "pages\\package\\romcomma.gpr.models.MOGP.rst", "pages\\package\\romcomma.gpr.models.GPR.rst", "pages\\package\\romcomma.gpr.models.Likelihood.rst", "pages\\package\\romcomma.gsa.rst", "pages\\package\\romcomma.gsa.sobol.rst", "pages\\package\\romcomma.gsa.sobol.ClosedSobol.rst", "pages\\package\\romcomma.gsa.sobol.ClosedSobolWithError.rst", "pages\\package\\romcomma.gsa.sobol.ClosedSobolWithRotation.rst", "pages\\package\\romcomma.gsa.sobol.GaussianWithout2Pi.rst", "pages\\package\\romcomma.gsa.sobol.det.rst", "pages\\package\\romcomma.gsa.sobol.mean.rst", "pages\\package\\romcomma.gsa.sobol.ms.rst", "pages\\package\\romcomma.gsa.sobol.rms.rst", "pages\\package\\romcomma.gsa.sobol.sos.rst", "pages\\package\\romcomma.gsa.sobol.sym_check.rst", "pages\\package\\romcomma.gsa.undertake.rst", "pages\\package\\romcomma.gsa.undertake.GSA.rst", "pages\\package\\romcomma.rom.rst", "pages\\package\\romcomma.rom.old.rst", "pages\\package\\romcomma.user.rst", "pages\\package\\romcomma.user.context.rst", "pages\\package\\romcomma.user.context.Setup.rst", "pages\\package\\romcomma.user.context.Timer.rst", "pages\\package\\romcomma.user.function.rst", "pages\\package\\romcomma.user.function.ALL.rst", "pages\\package\\romcomma.user.function.ISHIGAMI.rst", "pages\\package\\romcomma.user.function.OAKLEY2004.rst", "pages\\package\\romcomma.user.function.SOBOL_G.rst", "pages\\package\\romcomma.user.function.Scalar.rst", "pages\\package\\romcomma.user.function.Vector.rst", "pages\\package\\romcomma.user.function.linspace.rst", "pages\\package\\romcomma.user.results.rst", "pages\\package\\romcomma.user.results.Collect.rst", "pages\\package\\romcomma.user.results.copy.rst", "pages\\package\\romcomma.user.run.rst", "pages\\package\\romcomma.user.run.gpr.rst", "pages\\package\\romcomma.user.run.gsa.rst", "pages\\package\\romcomma.user.sample.rst", "pages\\package\\romcomma.user.sample.DOE.rst", "pages\\package\\romcomma.user.sample.Function.rst", "pages\\package\\romcomma.user.sample.GaussianNoise.rst", "pages\\package\\romcomma.user.scripts.rst", "pages\\package\\romcomma.user.scripts.BASE_FOLDER.rst", "pages\\start.rst"], "titles": ["Glossary", "rom-comma User Guide", "Module Reference", "romcomma.base", "romcomma.base.classes", "romcomma.base.classes.Model", "romcomma.base.classes.Parameters", "romcomma.base.definitions", "romcomma.base.definitions.FLOAT", "romcomma.base.definitions.INT", "romcomma.base.definitions.NP", "romcomma.base.definitions.TF", "romcomma.data", "romcomma.data.storage", "romcomma.data.storage.Fold", "romcomma.data.storage.Frame", "romcomma.data.storage.Normalization", "romcomma.data.storage.Repository", "romcomma.gpf", "romcomma.gpf.base", "romcomma.gpf.base.Variance", "romcomma.gpf.kernels", "romcomma.gpf.kernels.MOStationary", "romcomma.gpf.kernels.RBF", "romcomma.gpf.likelihoods", "romcomma.gpf.likelihoods.MOGaussian", "romcomma.gpf.mean_functions", "romcomma.gpf.mean_functions.MOMeanFunction", "romcomma.gpf.models", "romcomma.gpf.models.MOGPR", "romcomma.gpf.tests", "romcomma.gpf.tests.covariance", "romcomma.gpf.tests.increment", "romcomma.gpf.tests.kernel", "romcomma.gpf.tests.likelihood", "romcomma.gpf.tests.regression_data", "romcomma.gpr", "romcomma.gpr.kernels", "romcomma.gpr.kernels.Kernel", "romcomma.gpr.kernels.RBF", "romcomma.gpr.models", "romcomma.gpr.models.GP", "romcomma.gpr.models.GPInterface", "romcomma.gpr.models.Likelihood", "romcomma.gsa", "romcomma.gsa.sobol", "romcomma.gsa.sobol.ClosedIndex", "romcomma.gsa.sobol.ClosedIndexWithError", "romcomma.gsa.sobol.ClosedIndexWithRotation", "romcomma.gsa.sobol.Gaussian", "romcomma.gsa.sobol.det", "romcomma.gsa.sobol.mean", "romcomma.gsa.sobol.ms", "romcomma.gsa.sobol.rms", "romcomma.gsa.sobol.sos", "romcomma.gsa.sobol.sym_check", "romcomma.gsa.undertake", "romcomma.gsa.undertake.GSA", "romcomma.rom", "romcomma.rom.old", "romcomma.user", "romcomma.user.context", "romcomma.user.context.Setup", "romcomma.user.context.Timer", "romcomma.user.function", "romcomma.user.function.ALL", "romcomma.user.function.ISHIGAMI", "romcomma.user.function.OAKLEY2004", "romcomma.user.function.SOBOL_G", "romcomma.user.function.Scalar", "romcomma.user.function.Vector", "romcomma.user.function.linspace", "romcomma.user.results", "romcomma.user.results.Collect", "romcomma.user.results.copy", "romcomma.user.run", "romcomma.user.run.gpr", "romcomma.user.run.gsa", "romcomma.user.sample", "romcomma.user.sample.DOE", "romcomma.user.sample.Function", "romcomma.user.sample.GaussianNoise", "romcomma.user.scripts", "romcomma.user.scripts.BASE_FOLDER", "Getting Started"], "terms": {"reduc": [1, 14, 57, 77], "order": [1, 57, 70, 73, 84], "model": [1, 4, 6, 11, 38, 39, 47, 57, 77, 84], "via": [1, 46, 47, 48, 84], "global": [1, 17, 44, 84], "sensit": [1, 44, 84], "analysi": [1, 44, 84], "us": [1, 5, 6, 11, 14, 15, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 62, 76, 80, 81, 84], "gaussian": [1, 18, 25, 26, 29, 36, 40, 41, 42, 57, 81, 84], "process": [1, 18, 25, 29, 36, 40, 41, 42, 57, 72, 84], "regress": [1, 18, 29, 36, 40, 84], "robert": 1, "A": [1, 5, 11, 14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 69, 70, 71, 73, 74, 76, 77, 80], "milton": 1, "The": [1, 2, 5, 6, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 60, 62, 63, 65, 69, 70, 71, 73, 74, 76, 77, 79, 80, 83, 84], "univers": [1, 7], "sheffield": 1, "thi": [1, 5, 6, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 62, 63, 69, 70, 76, 77, 80, 81, 84], "document": [1, 83, 84], "i": [1, 5, 6, 11, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 62, 63, 70, 73, 74, 76, 77, 79, 80, 84], "current": [1, 11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 84], "under": [1, 7, 59, 80, 84], "construct": [1, 11, 20, 38, 39, 41, 42, 46, 47, 48, 57, 59, 70, 73, 76, 80, 81], "get": [0, 1, 11, 70], "start": [0, 1, 5, 11, 38, 39, 41, 42, 43, 47, 57, 71], "instal": 1, "packag": [0, 30, 84], "structur": 13, "refer": [0, 1, 11, 41, 84], "romcomma": [1, 84], "base": [1, 14, 15, 16, 17, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 69, 70, 73, 79, 80, 81, 83, 84], "data": [1, 11, 25, 27, 29, 41, 42, 70, 80, 81, 83, 84], "gpf": [1, 84], "gpr": [1, 29, 75, 84], "gsa": [1, 75, 84], "pd": [0, 2, 14, 15, 16, 17, 73], "alias": [], "panda": [0, 2, 11, 14, 15, 17], "code": [25, 38], "np": [0, 2, 5, 6, 11, 38, 39, 41, 42, 43, 57, 65, 66, 67, 68, 69, 71, 81], "numpi": [0, 2, 10, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49], "tf": [0, 2, 20, 22, 23, 25, 27, 29, 46, 47, 48, 49, 62], "tensorflow": [0, 2, 11, 20, 25, 29, 62], "gf": [0, 2, 25], "gpflow": [0, 2, 18, 19, 21, 24, 25, 27, 28, 29, 41, 42, 62], "ddev": [], "standard": [0, 2, 57, 65, 66], "deviat": [0, 2], "index": [0, 1, 5, 11, 14, 15, 17, 38, 39, 41, 42, 43, 45, 46, 47, 48, 57, 73, 77, 80], "modul": [0, 1, 3, 12, 18, 20, 22, 23, 25, 27, 29, 36, 44, 46, 47, 48, 58, 60, 64, 82], "search": [0, 1], "page": [0, 1], "rom": [2, 75, 84], "comma": [2, 84], "librari": [2, 3, 11, 18, 84], "class": [3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 56, 57, 64, 69, 70, 72, 73, 78, 79, 80, 81, 84], "definit": [3, 20, 22, 23, 25, 84], "underpin": [3, 6, 57], "entir": [3, 57], "contain": [4, 7, 11, 14, 17, 19, 21, 24, 28, 29, 30, 37, 40, 45, 70, 73, 74, 76, 77, 80], "paramet": [4, 5, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 32, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 79, 80, 81], "folder": [0, 2, 5, 6, 14, 17, 38, 39, 41, 42, 43, 57, 73, 74, 76, 77, 80, 83, 84], "read_paramet": [5, 38, 39, 43], "fals": [5, 14, 17, 22, 23, 29, 38, 39, 43, 57, 73, 76, 77, 79, 80, 81], "kwarg": [5, 6, 14, 15, 17, 25, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 62, 69, 70, 73, 76, 77, 80], "sourc": [5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 69, 70, 71, 73, 74, 76, 77, 79, 80, 81], "abc": [5, 6, 49], "abstract": [5, 6, 22, 38, 42], "ani": [5, 11, 15, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 73, 77, 79, 80, 81, 84], "implement": [5, 11, 22, 29, 38, 39, 40, 41, 42, 62, 76, 84], "gener": [5, 14, 15, 17, 29, 38, 39, 41, 57, 72, 81], "file": [5, 6, 7, 14, 15, 17, 38, 39, 41, 42, 43, 57, 73, 76, 77, 80], "storag": [5, 12, 70, 81, 84], "handl": [5, 14], "latter": 5, "dealt": 5, "each": [5, 11, 14, 17, 27, 29, 41, 42, 49, 70, 76, 77, 79, 80], "subclass": [5, 29, 43], "overrid": [5, 46, 47, 48, 57], "valu": [5, 6, 11, 14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 70, 71, 73, 80], "its": [5, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 46, 47, 48, 76, 79, 84], "own": [5, 20, 22, 23, 25, 27, 29, 46, 47, 48], "type": [5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 20, 22, 23, 25, 29, 32, 38, 39, 41, 42, 43, 46, 47, 48, 49, 55, 57, 65, 66, 67, 68, 70, 71, 73, 76, 77, 80], "namedtupl": [5, 6, 38, 39, 41, 42, 43, 47, 57], "defin": [5, 11, 14, 15, 17, 22, 23, 27, 29, 38, 39], "set": [5, 6, 11, 38, 39, 41, 42, 43, 57, 62, 70], "take": [5, 49], "matric": [5, 22, 23], "also": [5, 11, 22, 23, 27, 29], "mai": [5, 11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 84], "includ": [5, 11, 14, 17, 20, 22, 23, 25, 27, 29, 41, 42, 46, 47, 48, 70, 80, 84], "an": [5, 11, 14, 15, 17, 20, 22, 23, 27, 29, 38, 39, 41, 42, 43, 46, 49, 70, 73, 76, 79, 80, 81], "optim": [5, 11, 25, 29, 38, 39, 41, 42, 43, 76], "method": [5, 6, 10, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 69, 70, 73, 79, 80, 81], "option": [5, 6, 11, 14, 15, 16, 17, 38, 39, 41, 42, 43, 46, 47, 48, 57, 73, 77, 80], "store": [5, 14, 41, 42, 45], "json": [5, 14, 17], "which": [5, 11, 15, 16, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 46, 47, 48, 69, 70, 71, 74, 76, 77, 79, 80, 84], "default": [5, 6, 11, 14, 15, 17, 22, 23, 25, 29, 38, 39, 41, 42, 43, 46, 47, 57, 62, 63, 70, 76, 77, 79, 80], "cl": 5, "pathlik": [5, 6, 15, 17, 38, 39, 41, 42, 43, 57, 80], "bool": [5, 6, 14, 15, 17, 22, 23, 29, 38, 39, 41, 42, 43, 49, 57, 62, 63, 73, 76, 77, 79, 80, 81], "matrix": [5, 6, 10, 11, 14, 17, 20, 22, 23, 25, 29, 38, 39, 41, 42, 43, 57, 65, 66, 67, 68, 69, 79, 80, 81], "__init__": [5, 6, 10, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 69, 70, 73, 79, 80, 81], "constructor": [5, 6, 22, 23, 25, 41, 43, 57], "call": [5, 6, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 69, 84], "all": [5, 11, 14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 43, 46, 47, 48, 57, 70, 77, 80, 83], "matter": [5, 38, 39, 43], "prioriti": [5, 38, 39, 43], "str": [5, 6, 14, 15, 17, 20, 38, 39, 41, 42, 43, 46, 47, 48, 52, 53, 54, 57, 62, 63, 70, 73, 74, 76, 77, 80, 81], "path": [5, 6, 14, 15, 17, 38, 39, 41, 42, 43, 57, 73, 74, 77, 80], "locat": [5, 6, 14, 17, 29, 38, 39, 41, 42, 43, 57, 79], "If": [5, 6, 11, 14, 15, 16, 22, 23, 29, 38, 39, 41, 42, 43, 47, 49, 57, 62, 70, 74, 76, 77, 80], "true": [5, 6, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 63, 71, 76, 79], "ar": [5, 6, 11, 14, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 70, 76, 77, 84], "read": [5, 6, 14, 15, 17, 38, 39, 41, 42, 43, 57, 76], "from": [5, 6, 7, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 64, 70, 73, 76, 81, 84], "otherwis": [5, 15, 22, 23, 38, 39, 41, 42, 43, 62, 70, 76], "ndarrai": [5, 6, 10, 14, 22, 23, 25, 29, 38, 39, 41, 42, 43, 57, 69, 71, 79, 80, 81], "field": [5, 6, 38, 39, 41, 42, 43, 47, 57], "replac": [5, 38, 39, 41, 42, 43, 76], "after": [5, 20, 38, 39, 41, 42, 43, 76], "attribut": [5, 6, 10, 11, 14, 15, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 64, 69, 70, 73, 79, 80, 81, 82], "none": [5, 6, 11, 14, 16, 17, 22, 23, 29, 38, 39, 41, 42, 43, 57, 70, 73, 76, 77, 80], "placehold": [5, 11], "must": [5, 6, 11, 17, 29, 38, 39, 41, 42], "overridden": [5, 6], "notimpl": 5, "arrai": [5, 10, 11, 38, 39, 41, 42, 43, 57], "Not": [5, 49], "dtype": [5, 11, 20, 22, 23, 25, 27, 29, 41, 42, 46, 47, 48, 49, 57], "u15": 5, "alia": [5, 10, 11, 38, 39, 41, 42, 43, 47, 57, 79], "number": [5, 11, 14, 17, 25, 27, 29, 38, 39, 41, 42, 43, 47, 49, 57, 69, 79, 80, 81], "0": [5, 11, 14, 16, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 71, 77, 81], "count": [5, 38, 39, 41, 42, 43, 47, 49, 57], "return": [5, 6, 8, 9, 11, 14, 16, 17, 20, 22, 23, 25, 27, 29, 32, 38, 39, 41, 42, 43, 46, 47, 48, 49, 55, 57, 65, 66, 67, 68, 70, 71, 76, 77, 79, 80], "occurr": [5, 38, 39, 41, 42, 43, 47, 57], "stop": [5, 38, 39, 41, 42, 43, 47, 57, 71], "9223372036854775807": [5, 38, 39, 41, 42, 43, 47, 57], "first": [5, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 70], "rais": [5, 6, 11, 14, 17, 38, 39, 41, 42, 43, 47, 57, 70, 73, 74, 76, 77, 80], "valueerror": [5, 11, 38, 39, 41, 42, 43, 47, 57], "present": [5, 38, 39, 41, 42, 43, 47, 57, 70], "broadcast_valu": [5, 6, 38, 39, 41, 42, 43, 57], "model_nam": [5, 6, 38, 39, 41, 42, 43, 57], "target_shap": [5, 6, 38, 39, 41, 42, 43, 57], "is_diagon": [5, 6, 38, 39, 41, 42, 43, 57, 81], "broadcast": [5, 6, 20, 25, 27, 29, 38, 39, 41, 42, 43, 49, 57, 76, 77], "ordin": [5, 6, 29, 38, 39, 41, 42, 43, 49, 57, 79], "onli": [5, 6, 11, 14, 17, 20, 22, 23, 25, 38, 39, 41, 42, 43, 57, 77], "error": [5, 6, 11, 38, 39, 41, 42, 43, 47, 57, 77], "report": [5, 6, 38, 39, 41, 42, 43, 57, 63], "name": [5, 6, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 62, 63, 70, 73, 76, 77], "whose": [5, 6, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57], "we": [5, 6, 11, 20, 29, 38, 39, 41, 42, 43, 57, 84], "tupl": [5, 6, 11, 14, 17, 20, 22, 23, 25, 29, 38, 39, 41, 42, 43, 49, 57, 70], "int": [5, 6, 14, 17, 20, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 55, 57, 69, 71, 77, 79, 80, 81], "shape": [5, 6, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57, 71], "whether": [5, 6, 14, 17, 22, 23, 38, 39, 41, 42, 43, 57, 63, 73, 76, 77, 79, 80], "zero": [5, 6, 16, 27, 29, 38, 39, 41, 42, 43, 57, 81], "off": [5, 6, 38, 39, 41, 42, 43, 57], "diagon": [5, 6, 20, 22, 23, 25, 29, 38, 39, 41, 42, 43, 47, 49, 57, 77], "element": [5, 6, 11, 25, 38, 39, 41, 42, 43, 57], "squar": [5, 6, 23, 38, 39, 41, 42, 43, 57], "self": [5, 6, 14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 69, 70, 73, 80, 81], "chain": [5, 6, 38, 39, 41, 42, 43, 57], "indexerror": [5, 6, 14, 17, 38, 39, 41, 42, 43, 57, 80], "imposs": [5, 6, 38, 39, 41, 42, 43, 57], "csv": [5, 6, 14, 15, 17, 38, 39, 41, 42, 43, 57, 73, 80], "assertionerror": [5, 6, 38, 39, 41, 42, 43, 57], "write": [5, 6, 11, 15, 38, 39, 41, 42, 43, 57, 73], "chang": [5, 6, 11, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57], "unless": [5, 6, 14, 17, 38, 39, 41, 42, 43, 57, 77, 80], "properti": [5, 6, 11, 14, 15, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 70, 80, 81], "dict": [5, 14, 15, 17, 38, 39, 41, 42, 43, 46, 47, 48, 57, 70, 73, 76, 77, 80, 81], "param": [5, 38, 39, 41, 42, 43, 46, 47, 48, 49, 57], "shorthand": [5, 38, 39, 41, 42, 43, 57], "save": [5, 38, 39, 41, 42, 43, 57], "_paramet": [5, 38, 39, 41, 42, 43, 57], "essenti": [6, 38], "back": [6, 14, 15, 41, 42], "note": [6, 11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 62], "lazi": 6, "explicitli": [6, 11], "design": [6, 14, 17, 41, 42, 78, 80], "most": [6, 11], "simpl": 6, "wrapper": [6, 27], "annoyingli": 6, "underscor": 6, "shouldn": 6, "t": [6, 11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 57], "need": [6, 11, 29, 57, 77], "doe": [6, 11, 29, 70, 78, 80], "record": [6, 14, 17, 43, 57], "kei": [6, 11, 70, 73], "initi": [6, 11, 14, 15, 16, 38, 39, 81], "pair": [6, 25, 41, 42, 46, 47, 48, 70], "precis": 6, "It": [6, 11, 29], "caller": [6, 11], "": [6, 11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 57, 70], "respons": [6, 41, 42], "ensur": [6, 11], "everi": [6, 7, 14, 17], "miss": [6, 73], "receiv": 6, "so": [6, 20, 22, 23, 25, 27, 29, 46, 47, 48, 57, 77], "import": 7, "constant": [7, 11, 25], "hint": 7, "function": [7, 11, 23, 25, 26, 27, 29, 30, 36, 44, 45, 49, 61, 72, 75, 78, 79, 84], "object": [10, 11, 14, 15, 16, 17, 25, 27, 29, 38, 41, 42, 46, 47, 48, 57, 65, 66, 67, 68, 69, 70, 73, 79, 80, 81], "extend": [10, 11, 25], "tensor": [10, 11, 20, 22, 23, 25, 27, 29, 32, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "tensor1": [10, 11], "tensor2": [10, 11], "vector": [10, 11, 38, 39, 41, 42, 49, 80], "covector": [10, 11], "tensor3": [10, 11], "tensor4": [10, 11], "tensor5": [10, 11], "tensor6": [10, 11], "tensor7": [10, 11], "tensor8": [10, 11], "op": 11, "value_index": 11, "nativeobject": 11, "repres": [11, 25, 38, 39, 43], "multidimension": 11, "singl": [11, 29, 38, 39, 45, 57, 77], "known": [11, 27], "when": [11, 41, 42, 73, 76, 77], "program": 11, "main": 11, "manipul": 11, "pass": [11, 15, 20, 22, 23, 25, 27, 29, 41, 46, 47, 48, 62, 73, 76, 80], "around": 11, "ha": [11, 16, 22, 23, 29, 70, 77], "follow": [11, 16, 20, 22, 23, 25, 27, 29, 41, 46, 47, 48, 70, 77, 84], "float32": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 62], "int32": 11, "string": [11, 38, 39, 62, 63], "exampl": [11, 66, 67, 68, 82], "support": [11, 18, 29], "eager": [11, 62], "execut": 11, "graph": [11, 29], "In": [11, 70], "oper": [11, 62, 63], "evalu": [11, 22, 25], "immedi": 11, "comput": [11, 25, 29, 49], "later": 11, "below": [11, 84], "multipl": [11, 29], "result": [11, 20, 22, 23, 25, 27, 29, 41, 42, 46, 47, 48, 57, 76, 77, 80, 84], "calcul": [11, 16, 29, 45, 46, 47, 48, 49, 57, 77], "some": [11, 29, 84], "c": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 62, 83], "1": [11, 14, 16, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 46, 47, 48, 57, 71, 77, 80, 83], "2": [11, 20, 22, 23, 25, 27, 29, 38, 39, 46, 47, 48, 49, 57, 70, 77], "3": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 49, 57, 66, 67, 68, 77, 83], "4": 11, "d": [11, 22, 23, 29, 70], "e": [11, 22, 25, 26, 29, 41, 42, 70, 73, 77, 84], "matmul": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "print": [11, 62, 63], "7": [11, 67], "dure": [11, 22, 23, 25], "you": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 57, 77], "discov": 11, "your": [11, 84], "actual": 11, "eagertensor": 11, "intern": [11, 49], "detail": [11, 14, 15, 17, 84], "give": [11, 14, 17, 27, 41, 42, 49, 80], "access": 11, "common": 11, "wai": 11, "rank": [11, 29, 49], "size": [11, 29], "dimens": [11, 20, 22, 23, 25, 29, 38, 39, 41, 42, 49, 69, 79], "alwai": 11, "fulli": 11, "partial": 11, "produc": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "input": [11, 14, 17, 22, 23, 29, 38, 39, 41, 42, 43, 69, 79, 80], "case": [11, 70], "possibl": 11, "find": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "time": [11, 62, 63], "special": 11, "avail": [11, 76], "see": [11, 29, 41], "variabl": [11, 14, 20, 22, 23, 25, 27, 29, 46, 47, 48], "spars": [11, 29], "sparsetensor": 11, "raggedtensor": 11, "caution": 11, "datafram": [11, 14, 15, 16, 17], "underli": [11, 57], "buffer": 11, "re": [11, 29], "python": [0, 11, 62, 84], "b": [11, 20, 22, 23, 25, 27, 29, 41, 46, 47, 48], "int64": 11, "subject": [11, 84], "user": [11, 14, 41, 42, 56, 84], "should": [11, 22, 29, 41, 49], "reli": 11, "behaviour": [11, 22, 23], "For": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48, 57, 77], "more": [11, 29, 70], "guid": 11, "http": [11, 14, 15, 17, 29, 41, 62, 64], "org": [11, 14, 15, 17, 41, 62], "consum": 11, "list": [11, 14, 17, 20, 22, 23, 25, 27, 29, 46, 47, 48, 55, 76, 77, 84], "devic": [11, 62, 73], "eval": 11, "feed_dict": 11, "session": 11, "compat": 11, "v1": 11, "within": [11, 14, 17, 41, 74, 79], "do": [11, 41, 42], "preced": 11, "n": [11, 14, 16, 17, 20, 22, 23, 25, 29, 41, 42, 49, 79, 80, 81], "befor": [11, 14, 17, 49, 80], "invok": 11, "have": [11, 15, 22, 23, 25, 76, 77], "been": [11, 16, 25, 76, 77], "launch": 11, "either": [11, 70], "specifi": [11, 17, 22, 23, 38, 39, 41, 42, 57, 70, 76], "dictionari": [11, 46, 70], "map": 11, "feed": 11, "run": [11, 62, 84], "descript": 11, "valid": 11, "correspond": [11, 22, 70], "experimental_ref": 11, "deprec": 11, "remov": [11, 70], "futur": [11, 29], "version": [11, 25, 39, 71], "instruct": 11, "updat": [11, 14, 15, 17, 70, 77], "ref": 11, "instead": 11, "get_shap": 11, "tensorshap": 11, "5": [11, 38, 39], "6": 11, "equival": 11, "build": 11, "kera": 11, "unknown": 11, "10": 11, "batch": [11, 29, 49], "infer": [11, 41, 42], "regist": 11, "determin": [11, 20, 22, 23, 25, 27, 29, 45, 46, 47, 48], "without": [11, 45], "kernel": [11, 29, 41, 42, 76, 77, 84], "convert": [11, 38, 39], "debug": 11, "provid": [11, 41, 42, 70, 76, 81], "earli": 11, "trace": 11, "being": [11, 57, 62, 63, 76, 77], "concret": 11, "www": [11, 62], "concrete_funct": 11, "def": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "my_matmul": 11, "propag": 11, "extent": 11, "f": [11, 25, 27, 29, 41, 42, 70, 77], "get_concrete_funct": 11, "tensorspec": 11, "fail": 11, "missmatch": 11, "can": [11, 14, 22, 23, 25, 29], "detect": 11, "cf": 11, "traceback": 11, "recent": 11, "last": [11, 22, 25, 70], "equal": 11, "addit": 11, "inform": 11, "about": 11, "ensure_shap": 11, "set_shap": 11, "augment": 11, "my_fun": 11, "output": [11, 14, 17, 18, 22, 23, 29, 38, 39, 41, 42, 43, 49, 76, 77], "hashabl": 11, "primari": [11, 60], "api": [11, 64], "put": 11, "__hash__": 11, "longer": 11, "except": [11, 73, 76, 77], "x": [11, 14, 16, 17, 20, 22, 23, 25, 27, 29, 32, 38, 39, 41, 42, 46, 47, 48, 65, 66, 67, 68, 69, 70], "y": [11, 14, 16, 17, 25, 29, 38, 39, 41, 42], "z": [11, 41, 42, 49], "tensor_set": 11, "typeerror": [11, 14, 17], "unhash": 11, "tensor_dict": 11, "five": 11, "ten": 11, "deref": 11, "origin": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "recommend": 11, "becaus": 11, "better": 11, "check": [11, 22, 23, 25, 41, 42], "creat": [11, 14, 15, 17, 57, 70, 80], "guarante": 11, "compil": [11, 29], "With": 11, "assert": [11, 47], "here": [11, 29], "match": [11, 49, 81], "new": [11, 14, 17, 29, 38, 39, 70], "allow": 11, "axi": [11, 22, 25], "incompat": 11, "suppli": [11, 49], "merg": 11, "given": [11, 25, 29, 70], "merge_with": 11, "224": 11, "cannot": 11, "alon": 11, "know": 11, "imag": 11, "dataset": [11, 17], "28": 11, "load_imag": 11, "filenam": 11, "raw": 11, "io": [11, 64], "read_fil": 11, "decode_png": 11, "channel": 11, "final": [11, 25, 46, 47, 48, 57, 84], "similarli": 11, "parse_tensor": 11, "could": 11, "even": [11, 84], "serial": 11, "2d": 11, "my_pars": 11, "string_tensor": 11, "out_typ": 11, "concrete_pars": 11, "make": 11, "sure": [11, 57, 77], "work": [11, 25], "ones": [11, 20, 22, 23, 25, 27, 29, 46, 47, 48], "serialize_tensor": 11, "t2": 11, "appli": [11, 14, 16, 69, 80], "exist": [11, 14, 73, 80], "runtim": [11, 84], "incorrect": 11, "inconsist": 11, "between": [11, 14, 17, 23, 80], "static": [11, 29, 49, 79], "modifi": [11, 67, 68], "still": 11, "though": 11, "tensorshapeproto": 11, "thei": [11, 22, 23, 77, 84], "slice": [11, 22, 23, 46, 47, 48, 70], "pairofint": 11, "parent": [14, 20, 22, 23, 25, 27, 29, 41, 42, 43, 46, 47, 48, 84], "k": [14, 17, 23, 25, 41, 42, 47, 70, 73, 80], "repositori": [14, 73, 74, 76, 77, 80, 83], "meta": [14, 17, 70, 81], "equip": 14, "test_data": [14, 41, 42, 76], "addition": 14, "dimension": [14, 29, 38, 39, 41, 42, 71, 77, 80, 81], "m": [14, 17, 22, 23, 29, 38, 39, 41, 42, 46, 47, 48, 49, 57, 66, 67, 68, 69, 77, 79, 80], "creation": 14, "classmethod": [14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 46, 47, 48, 70], "from_df": [14, 17], "column": [14, 15, 17, 22, 23, 29, 73, 79, 80], "lt": [14, 17, 57], "test_x": 14, "head": [14, 17], "test_i": 14, "l": [14, 17, 20, 22, 23, 25, 27, 29, 38, 39, 41, 42, 43, 47, 49, 73, 80, 81], "x_rotat": 14, "rotat": [14, 48, 80], "__x_rotat": 14, "cumul": 14, "normal": [14, 17, 20, 22, 23, 25, 27, 29, 46, 47, 48, 49, 80], "train": [14, 17, 27, 29, 41, 42, 80], "test": [14, 17, 41, 42, 64, 76, 80, 84], "sampl": [14, 17, 25, 29, 41, 42, 84], "row": [14, 17, 22, 23, 29, 79, 80, 81], "y_split": [14, 17], "split": [14, 17, 25], "just": [14, 15, 17], "lth": [14, 17], "rang": [14, 17, 46, 47, 48, 57, 77, 80], "indic": [14, 17, 22, 23, 46, 47, 48, 77], "from_csv": [14, 17], "target": [14, 17], "metadata": [14, 17], "csv_option": [14, 15, 17], "pydata": [14, 15, 17], "doc": [14, 15, 17, 41], "stabl": [14, 15, 17], "read_csv": [14, 15, 17, 73], "html": [14, 15, 17, 41, 64], "df": [14, 15, 16, 17, 25], "into_k_fold": [14, 17, 80], "shuffle_before_fold": [14, 17, 80], "repo": [14, 17, 74, 76, 77, 80], "absolut": [14, 17, 80], "inclus": [14, 17, 80], "improp": [14, 17, 80], "both": [14, 17, 25, 29, 80], "To": [14, 17, 29, 80], "suppress": [14, 17, 80], "neg": [14, 17, 80], "integ": [14, 17, 29, 80], "shuffl": [14, 17, 80], "windowspath": [15, 83], "empti": [15, 46, 62, 63, 70], "encapsul": [15, 16, 48, 49, 57], "overwrit": [15, 80], "keyword": [15, 25], "argument": [15, 25], "relev": 15, "is_empti": 15, "accord": [15, 41, 42], "fold": [16, 17, 41, 42, 73, 74, 76, 77, 80], "assum": [16, 25, 29, 49], "uniform": 16, "distribut": [16, 25, 41, 42, 71], "u": [16, 48], "invers": 16, "probabl": [16, 25, 29, 49], "transform": 16, "mean": [16, 22, 23, 25, 26, 27, 29, 38, 39, 41, 42, 49, 81], "unit": [16, 22, 23], "varianc": [16, 22, 23, 25, 29, 38, 39, 41, 42, 43, 47, 49, 57, 77, 80, 81, 84], "alreadi": 16, "apply_to": 16, "undo_from": 16, "undo": 16, "unnorm": 16, "These": [17, 27], "analyz": [17, 46, 47, 48], "further": 17, "extens": [18, 19, 21, 24, 28, 73], "multi": [18, 38, 39, 41, 42, 71], "mutual": 18, "depend": [18, 22, 39, 41, 76, 77, 84], "cholesky_diagonal_lower_bound": 20, "001": 20, "non": [20, 22, 23, 25, 27, 29, 46, 47, 48], "float": [20, 29, 43, 62, 69, 71, 81], "covari": [20, 22, 23, 25, 29, 57, 81], "mutabl": 20, "through": 20, "cholesky_diagon": [20, 25], "cholesky_lower_triangl": 20, "symmetr": [20, 22, 23], "posit": [20, 22, 23, 25, 29], "express": [20, 25], "lower": [20, 25, 29, 49], "bound": [20, 25, 29], "choleski": [20, 25, 29, 41, 42, 49], "decomposit": [20, 25, 41, 42, 49], "triangular": [20, 49], "value_to_broadcast": 20, "readi": 20, "value_times_ey": 20, "cartesian": 20, "product": [20, 49], "ey": 20, "transpos": 20, "ident": [20, 80], "multipli": [20, 22, 23, 41, 42], "transposit": [20, 55], "ctor": [20, 22, 23, 25, 27, 29, 46, 47, 48], "same": [20, 22, 23, 25, 27, 29, 46, 47, 48], "name_scop": [20, 22, 23, 25, 27, 29, 46, 47, 48], "instanc": [20, 22, 23, 25, 27, 29, 46, 47, 48, 70], "non_trainable_vari": [20, 22, 23, 25, 27, 29, 46, 47, 48], "sequenc": [20, 22, 23, 25, 27, 29, 46, 47, 48, 69, 70, 71, 77, 81], "trainabl": [20, 22, 23, 25, 27, 29, 38, 39, 43, 46, 47, 48], "submodul": [20, 22, 23, 25, 27, 29, 46, 47, 48], "reflect": [20, 22, 23, 25, 27, 29, 46, 47, 48], "perform": [20, 22, 23, 25, 27, 29, 46, 47, 48, 57], "reason": [20, 22, 23, 25, 27, 29, 46, 47, 48], "wish": [20, 22, 23, 25, 27, 29, 46, 47, 48, 84], "cach": [20, 22, 23, 25, 27, 29, 46, 47, 48], "don": [20, 22, 23, 25, 27, 29, 46, 47, 48], "expect": [20, 22, 23, 25, 27, 29, 46, 47, 48], "sort": [20, 22, 23, 25, 27, 29, 46, 47, 48], "recurs": [20, 22, 23, 25, 27, 29, 46, 47, 48, 74, 76, 77], "breadth": [20, 22, 23, 25, 27, 29, 46, 47, 48], "sub": [20, 22, 23, 25, 27, 29, 46, 47, 48], "found": [20, 22, 23, 25, 27, 29, 46, 47, 48, 70, 77], "trainable_vari": [20, 22, 23, 25, 27, 29, 46, 47, 48], "with_name_scop": [20, 22, 23, 25, 27, 29, 46, 47, 48], "decor": [20, 22, 23, 25, 27, 29, 46, 47, 48], "automat": [20, 22, 23, 25, 27, 29, 46, 47, 48, 49, 62], "enter": [20, 22, 23, 25, 27, 29, 46, 47, 48], "scope": [20, 22, 23, 25, 27, 29, 46, 47, 48], "mymodul": [20, 22, 23, 25, 27, 29, 46, 47, 48], "__call__": [20, 22, 23, 25, 27, 29, 46, 47, 48], "hasattr": [20, 22, 23, 25, 27, 29, 46, 47, 48], "w": [20, 22, 23, 25, 27, 29, 46, 47, 48, 57], "random": [20, 22, 23, 25, 27, 29, 46, 47, 48], "abov": [20, 22, 23, 25, 27, 29, 46, 47, 48], "would": [20, 22, 23, 25, 27, 29, 46, 47, 48], "mod": [20, 22, 23, 25, 27, 29, 46, 47, 48], "my_modul": [20, 22, 23, 25, 27, 29, 46, 47, 48], "wrap": [20, 22, 23, 25, 27, 29, 46, 47, 48], "lengthscal": [22, 23, 29, 38, 39], "active_dim": [22, 23], "anisotropicstationari": 22, "stationari": 22, "deriv": 22, "k_d": [22, 23], "pairwis": 22, "differ": [22, 23], "scale": [22, 23, 41, 42, 69], "\u2113": [22, 23], "x2\u1d40": [22, 23], "signal": [22, 23], "is_lengthscales_train": [22, 23], "them": [22, 23], "lengthscales_neat": [22, 23], "k_diag": [22, 23], "k_unit_vari": [22, 23], "x2": [22, 23], "optimis": [22, 23], "where": [22, 23, 25, 29, 38, 39, 42], "k_d_unit_vari": [22, 23], "k_d_apply_vari": [22, 23], "reshap": [22, 23, 71], "ln": [22, 23, 25, 41, 42], "ard": [22, 23], "activ": [22, 23, 84], "on_separate_dim": [22, 23], "other": [22, 23, 38, 39, 49, 76, 77], "over": [22, 23, 29, 76, 80], "overlap": [22, 23], "separ": [22, 23], "scaled_difference_matrix": [22, 23], "correct": [22, 23], "slice_cov": [22, 23], "cov": [22, 23], "requir": [22, 23, 27, 29, 57, 66, 67, 68, 77], "turn": [22, 23, 27], "flatten": [22, 23], "full": [22, 23, 47, 79], "mostationari": [23, 29], "radial": 23, "basi": 23, "exponenti": [23, 49], "equat": 23, "\u03c3\u00b2": 23, "exp": 23, "\u00bd": 23, "r\u00b2": 23, "r": [23, 29, 73], "euclidean": 23, "distanc": 23, "point": [23, 29], "drawn": [23, 29], "gp": [23, 29, 38, 39, 40, 42, 43, 46, 47, 48, 56, 57, 76, 77], "infinit": 23, "differenti": 23, "quadraturelikelihood": 25, "multivari": [25, 81], "appropri": [25, 80], "uncertainti": 25, "associ": 25, "believ": 25, "veri": 25, "small": 25, "lead": 25, "numer": [25, 41], "instabl": 25, "1e": 25, "therefor": 25, "impos": 25, "symmetri": 25, "forward": 25, "concaten": [25, 65, 70, 73], "split_axis_shap": 25, "length": 25, "conditional_mean": 25, "condit": [25, 57], "y\u2081": 25, "y\u2096": 25, "observation_dim": 25, "latent_dim": 25, "conditional_vari": 25, "margin": [25, 29, 43, 46, 47, 48, 84], "var": 25, "log_prob": 25, "log": [25, 29, 43], "densiti": [25, 29, 49], "p": [25, 29], "observ": [25, 29], "pdf": [25, 49], "predict_log_dens": [25, 29], "fmu": 25, "fvar": 25, "latent": [25, 29], "datum": 25, "predict": [25, 26, 27, 29, 41, 42], "q": 25, "predict_mean_and_var": 25, "dy": 25, "y\u00b2": 25, "\u00b2": 25, "variational_expect": 25, "statist": 25, "prior": [26, 27, 29], "output_dim": [27, 29], "meanfunct": 27, "mogpr": 27, "basic": [27, 57], "one": 27, "constitut": 27, "absenc": 27, "union": 27, "mean_funct": [29, 84], "noise_vari": [29, 41, 42, 80], "gpmodel": 29, "internaldatatraininglossmixin": 29, "vanilla": 29, "likelihood": [29, 41, 42, 84], "treat": [29, 41, 42], "independ": [29, 39, 41, 42, 76, 77], "mathbf": 29, "mathcal": 29, "sigma_n": 29, "maximis": 29, "_marginal_": 29, "hyperparamet": 29, "theta": [29, 48], "integr": 29, "form": 29, "kxx": 29, "momeanfunct": 29, "inputdata": 29, "outputdata": 29, "well": 29, "necessari": [29, 76], "maximum_log_likelihood_object": 29, "maximum": 29, "estim": 29, "maxim": 29, "g": [29, 62, 68, 77, 84], "elbo": 29, "variat": 29, "log_marginal_likelihood": 29, "predict_f": 29, "xnew": 29, "full_cov": 29, "full_output_cov": 29, "noisi": [29, 41, 42], "regardless": 29, "avoid": 29, "ambigu": 29, "calc_num_latent_gp": 29, "nice": 29, "awar": 29, "specif": 29, "howev": [29, 62], "num_latent_gp": 29, "bit": 29, "broken": 29, "fix": 29, "There": 29, "slightli": 29, "problemat": 29, "assumpt": 29, "github": 29, "com": 29, "issu": 29, "1343": 29, "calc_num_latent_gps_from_data": 29, "log_posterior_dens": 29, "arg": 29, "posterior": 29, "respect": 29, "gpmc": 29, "sgpmc": 29, "sensibli": 29, "log_prior_dens": 29, "sum": 29, "constrain": 29, "predict_f_sampl": 29, "num_sampl": 29, "draw": 29, "extra": 29, "correl": 29, "dens": 29, "num_data": 29, "uncorrel": 29, "predict_i": 29, "held": 29, "out": [29, 70], "training_loss": 29, "loss": 29, "training_loss_closur": 29, "conveni": 29, "closur": 29, "itself": [29, 80], "minim": [29, 41, 49], "scipi": [29, 41, 62], "callabl": [29, 69, 79, 80], "interfac": [38, 42, 56, 60, 75], "contract": 38, "share": [38, 39], "anisotrop": [38, 39, 76, 77], "isotrop": [38, 39, 41, 42, 76, 77], "mere": [38, 39, 43], "type_identifi": [38, 39], "__module__": 38, "__name__": 38, "typefromidentifi": [38, 39], "typeidentifi": [38, 39, 41, 42], "_typeidentifi": [38, 39], "typefromparamet": [38, 39], "recogn": [38, 39], "across": [38, 39, 73, 74, 76, 77], "broadcast_paramet": [38, 39, 41, 42], "variance_shap": [38, 39], "higher": [38, 39, 41, 42], "shrinkag": [38, 39, 41, 42], "unchang": [38, 39, 41, 42], "silent": [38, 39, 41, 42], "nop": [38, 39], "expans": [38, 39], "straightforward": [38, 39], "per": [38, 39], "attempt": [38, 39], "made": [38, 39], "shrink": [38, 39], "implemented_in_": 39, "off_diagon": 39, "is_read": [41, 42, 76], "is_independ": [41, 42, 76, 77], "is_isotrop": [41, 42, 76, 77], "kernel_paramet": [41, 42, 76], "gpinterfac": [41, 43, 46, 47, 48, 57], "setup": 41, "hous": [41, 42, 73, 76, 77, 80, 83], "restrict": [41, 42], "read_from_fil": [41, 42], "mi": [41, 42], "hyper": [41, 42], "bfg": 41, "algorithm": 41, "format": 41, "y_instead_of_f": [41, 42], "o": [41, 42, 67], "nois": [41, 42, 43, 81], "std": [41, 42], "k_cho": [41, 42], "lnxln": [41, 42], "els": [41, 42, 70], "k_inv_i": [41, 42], "pre": [41, 42], "loxln": [41, 42], "lo": [41, 42], "chosolv": [41, 42], "check_k_inv_i": 41, "FOR": 41, "purpos": [41, 49], "toler": 41, "kernel_folder_nam": [41, 42], "identifi": [41, 42], "never": [41, 42], "extern": [41, 42], "desir": [41, 42], "noth": [41, 42], "_fold": [41, 42], "compris": [41, 42, 70], "three": [41, 42], "score": [41, 42], "frame": [41, 42], "test_result_csv": [41, 42], "up": [42, 62], "0001": 43, "log_margin": 43, "coeffici": 45, "close": [45, 46, 47, 48, 57, 77], "wide": [46, 47, 48], "collect": [46, 47, 48, 80], "especi": [46, 47, 48], "_calcul": [46, 47, 48], "everyth": [46, 47, 48], "closedindex": [47, 48], "is_t_parti": [47, 57], "forc": [47, 57], "mm": 47, "effect": [47, 70], "free": 47, "wmm": [47, 57], "rankequ": 47, "j": 47, "mix": 47, "instantiat": 49, "expon": 49, "variance_cho_diagon": 49, "log_pdf": 49, "variance_cho": 49, "is_variance_diagon": 49, "float64": 49, "lbunch": 49, "logarithm": 49, "un": [49, 80], "det": 49, "factor": 49, "effici": 49, "accuraci": 49, "ratio": 49, "popul": 49, "adequ": 49, "embrac": 49, "consecut": [49, 77], "insert": [49, 70, 73], "usual": 49, "sometim": 49, "ein": [52, 53, 54], "lijk": [52, 53, 54], "kind": [57, 77], "is_error_calcul": [57, 77], "sobol": [57, 68, 77, 84], "dispos": 57, "useless": 57, "onc": 57, "total": [57, 77], "le": 57, "outsid": [57, 77, 84], "memori": [57, 77], "intens": [57, 77], "leav": [57, 77], "flag": [57, 77], "v": [57, 70], "stddev": [0, 2, 57], "enum": 57, "manag": [61, 62, 63], "environ": 62, "undertak": [62, 76, 77, 84], "ed": [62, 63], "what": [62, 63], "undertaken": 62, "end": 62, "regex": 62, "pu": 62, "logic": 62, "alloc": 62, "straight": [62, 73, 76, 80], "inop": 62, "due": 62, "config": 62, "run_functions_eagerli": 62, "api_doc": 62, "_": [62, 64], "is_inlin": 63, "inlin": 63, "linebreak": 63, "top": 63, "tail": 63, "paragraph": [63, 84], "taken": 64, "salib": 64, "readthedoc": 64, "en": 64, "latest": 64, "test_funct": 64, "ishigami": 65, "balanc": [65, 66], "scalar": [65, 66, 67, 68, 70], "sin": [65, 66], "oakley2004": 65, "balanced_quad7": [65, 67], "lin7": [65, 67], "quad7": [65, 67], "sobol_g": 65, "strong5_2": [65, 68], "strong5_4": [65, 68], "weak5_2": [65, 68], "oaklei": 67, "hagan": 67, "2004": 67, "loc": 69, "vectorlik": 69, "offset": 69, "functon": 70, "littl": 70, "than": 70, "item": [70, 84], "concat": 70, "subvector": 70, "pseudo": 70, "clear": 70, "copi": 70, "shallow": 70, "fromkei": 70, "iter": 70, "like": [70, 80], "view": 70, "pop": 70, "keyerror": 70, "popitem": 70, "lifo": 70, "setdefault": 70, "lack": 70, "throughout": 71, "prod": 71, "endpoint": 71, "newshap": 71, "ignore_miss": 73, "minu": 73, "to_csv": 73, "write_opt": 73, "float_format": 73, "6f": 73, "from_fold": 73, "dst": [73, 74], "is_existing_delet": 73, "destin": 73, "delet": 73, "recreat": 73, "src": 74, "rel": [74, 77], "filenotfounderror": [74, 76, 77], "ignore_except": [76, 77], "nearest": 76, "ancestor": 76, "isotropi": 76, "hierarchi": [1, 76], "continu": 76, "throw": 76, "aggreg": 76, "first_ord": 77, "furthermor": 77, "ignor": 77, "encount": 77, "halt": 77, "experi": 78, "signatur": 79, "latin_hypercub": 79, "is_cent": 79, "latin": 79, "hypercub": 79, "boolean": 79, "centr": 79, "cell": 79, "randomli": 79, "full_factori": 79, "factori": 79, "base_fold": 80, "function_vector": 80, "overwrite_exist": 80, "gaussiannois": 80, "sit": 80, "experiment": 80, "noise_magnitud": 80, "homoskedast": [80, 81], "sub_fold": 80, "extra_column": 80, "stochastic_rot": 80, "stochast": 80, "rotate_fold": 80, "uniformli": 80, "un_rotate_fold": 80, "matrixlik": 81, "co": 81, "magnitud": 81, "is_stochast": 81, "artifici": 81, "label": 81, "scheme": 81, "suitabl": 81, "__format__": 81, "cannib": 82, "fc1ram": 83, "research": 83, "dat": 83, "softwaretest": 83, "welcom": 84, "reduct": 84, "novel": 84, "approach": 84, "subspac": 84, "AS": 84, "those": 84, "unfamiliar": 84, "hyperlink": 84, "semin": 84, "mathemat": 84, "behind": 84, "softwar": 84, "cover": 84, "paper": 84, "peer": 84, "review": 84, "public": 84, "simpli": 84, "place": 84, "pythonpath": 84, "site": 84, "installation_test": 84, "anywher": 84, "pyproject": 84, "toml": 84, "organ": 84, "modular": 84, "old": 84, "context": 84, "script": 84, "No": 84, "tabl": 84, "expos": 84, "task": [], "highli": [], "advanc": 84, "achiev": [], "directori": [0, 2], "mathsf": 81, "mathtt": [], "ymbj": [], "abbr": [], "ymca": [], "glossari": [1, 2], "technic": 84, "direct": 84, "regard": 84, "bespok": 84}, "objects": {"": [[2, 0, 0, "-", "romcomma"]], "romcomma": [[3, 0, 0, "-", "base"], [12, 0, 0, "-", "data"], [18, 0, 0, "-", "gpf"], [36, 0, 0, "-", "gpr"], [44, 0, 0, "-", "gsa"], [58, 0, 0, "-", "rom"], [60, 0, 0, "-", "user"]], "romcomma.base": [[4, 0, 0, "-", "classes"], [7, 0, 0, "-", "definitions"]], "romcomma.base.classes": [[5, 1, 1, "", "Model"], [6, 1, 1, "", "Parameters"]], "romcomma.base.classes.Model": [[5, 2, 1, "", "OPTIONS"], [5, 1, 1, "", "Parameters"], [5, 4, 1, "", "__init__"], [5, 2, 1, "", "params"]], "romcomma.base.classes.Model.Parameters": [[5, 1, 1, "", "Values"], [5, 4, 1, "", "broadcast_value"], [5, 4, 1, "", "read"], [5, 4, 1, "", "write"]], "romcomma.base.classes.Model.Parameters.Values": [[5, 3, 1, "", "NotImplemented"], [5, 4, 1, "", "count"], [5, 4, 1, "", "index"]], "romcomma.base.classes.Parameters": [[6, 2, 1, "", "Values"], [6, 4, 1, "", "__init__"], [6, 4, 1, "", "broadcast_value"], [6, 4, 1, "", "read"], [6, 4, 1, "", "write"]], "romcomma.base.definitions": [[8, 5, 1, "", "FLOAT"], [9, 5, 1, "", "INT"], [10, 1, 1, "", "NP"], [11, 1, 1, "", "TF"]], "romcomma.base.definitions.NP": [[10, 3, 1, "", "Array"], [10, 3, 1, "", "Covector"], [10, 3, 1, "", "Matrix"], [10, 3, 1, "", "Tensor"], [10, 3, 1, "", "Tensor1"], [10, 3, 1, "", "Tensor2"], [10, 3, 1, "", "Tensor3"], [10, 3, 1, "", "Tensor4"], [10, 3, 1, "", "Tensor5"], [10, 3, 1, "", "Tensor6"], [10, 3, 1, "", "Tensor7"], [10, 3, 1, "", "Tensor8"], [10, 3, 1, "", "Vector"], [10, 4, 1, "", "__init__"]], "romcomma.base.definitions.TF": [[11, 3, 1, "", "Array"], [11, 3, 1, "", "Covector"], [11, 3, 1, "", "Matrix"], [11, 3, 1, "", "PairOfInts"], [11, 3, 1, "", "Slice"], [11, 1, 1, "", "Tensor"], [11, 3, 1, "", "Tensor1"], [11, 3, 1, "", "Tensor2"], [11, 3, 1, "", "Tensor3"], [11, 3, 1, "", "Tensor4"], [11, 3, 1, "", "Tensor5"], [11, 3, 1, "", "Tensor6"], [11, 3, 1, "", "Tensor7"], [11, 3, 1, "", "Tensor8"], [11, 3, 1, "", "Vector"], [11, 4, 1, "", "__init__"]], "romcomma.base.definitions.TF.Tensor": [[11, 4, 1, "", "consumers"], [11, 2, 1, "", "device"], [11, 2, 1, "", "dtype"], [11, 4, 1, "", "eval"], [11, 4, 1, "", "experimental_ref"], [11, 4, 1, "", "get_shape"], [11, 2, 1, "", "graph"], [11, 2, 1, "", "name"], [11, 2, 1, "", "op"], [11, 4, 1, "", "ref"], [11, 4, 1, "", "set_shape"], [11, 2, 1, "", "shape"], [11, 2, 1, "", "value_index"]], "romcomma.data": [[13, 0, 0, "-", "storage"]], "romcomma.data.storage": [[14, 1, 1, "", "Fold"], [15, 1, 1, "", "Frame"], [16, 1, 1, "", "Normalization"], [17, 1, 1, "", "Repository"]], "romcomma.data.storage.Fold": [[14, 2, 1, "", "K"], [14, 2, 1, "", "L"], [14, 2, 1, "", "M"], [14, 2, 1, "", "N"], [14, 2, 1, "", "X"], [14, 2, 1, "", "X_rotation"], [14, 2, 1, "", "Y"], [14, 4, 1, "", "Y_split"], [14, 2, 1, "", "Y_splits"], [14, 4, 1, "", "__init__"], [14, 2, 1, "", "folds"], [14, 4, 1, "", "from_csv"], [14, 4, 1, "", "from_df"], [14, 4, 1, "", "from_dfs"], [14, 4, 1, "", "into_K_folds"], [14, 2, 1, "", "test_x"], [14, 2, 1, "", "test_y"]], "romcomma.data.storage.Frame": [[15, 2, 1, "", "CSV_OPTIONS"], [15, 4, 1, "", "__init__"], [15, 2, 1, "", "is_empty"], [15, 4, 1, "", "write"]], "romcomma.data.storage.Normalization": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "apply_to"], [16, 4, 1, "", "undo_from"]], "romcomma.data.storage.Repository": [[17, 2, 1, "", "K"], [17, 2, 1, "", "L"], [17, 2, 1, "", "M"], [17, 2, 1, "", "N"], [17, 2, 1, "", "X"], [17, 2, 1, "", "Y"], [17, 4, 1, "", "Y_split"], [17, 2, 1, "", "Y_splits"], [17, 4, 1, "", "__init__"], [17, 2, 1, "", "folds"], [17, 4, 1, "", "from_csv"], [17, 4, 1, "", "from_df"], [17, 4, 1, "", "into_K_folds"]], "romcomma.gpf": [[19, 0, 0, "-", "base"], [21, 0, 0, "-", "kernels"], [24, 0, 0, "-", "likelihoods"], [26, 0, 0, "-", "mean_functions"], [28, 0, 0, "-", "models"], [30, 0, 0, "-", "tests"]], "romcomma.gpf.base": [[20, 1, 1, "", "Variance"]], "romcomma.gpf.base.Variance": [[20, 4, 1, "", "__init__"], [20, 2, 1, "", "cholesky"], [20, 2, 1, "", "name"], [20, 2, 1, "", "name_scope"], [20, 2, 1, "", "non_trainable_variables"], [20, 2, 1, "", "shape"], [20, 2, 1, "", "submodules"], [20, 2, 1, "", "trainable_variables"], [20, 2, 1, "", "value"], [20, 4, 1, "", "value_times_eye"], [20, 2, 1, "", "value_to_broadcast"], [20, 2, 1, "", "variables"], [20, 4, 1, "", "with_name_scope"]], "romcomma.gpf.kernels": [[22, 1, 1, "", "MOStationary"], [23, 1, 1, "", "RBF"]], "romcomma.gpf.kernels.MOStationary": [[22, 4, 1, "", "K_d"], [22, 4, 1, "", "K_d_apply_variance"], [22, 4, 1, "", "K_d_unit_variance"], [22, 4, 1, "", "K_diag"], [22, 4, 1, "", "K_unit_variance"], [22, 4, 1, "", "__init__"], [22, 2, 1, "", "ard"], [22, 2, 1, "", "lengthscales_neat"], [22, 2, 1, "", "name"], [22, 2, 1, "", "name_scope"], [22, 2, 1, "", "non_trainable_variables"], [22, 4, 1, "", "on_separate_dims"], [22, 4, 1, "", "scaled_difference_matrix"], [22, 4, 1, "", "slice"], [22, 4, 1, "", "slice_cov"], [22, 2, 1, "", "submodules"], [22, 2, 1, "", "trainable_variables"], [22, 2, 1, "", "variables"], [22, 4, 1, "", "with_name_scope"]], "romcomma.gpf.kernels.RBF": [[23, 4, 1, "", "K_d"], [23, 4, 1, "", "K_d_apply_variance"], [23, 4, 1, "", "K_d_unit_variance"], [23, 4, 1, "", "K_diag"], [23, 4, 1, "", "K_unit_variance"], [23, 4, 1, "", "__init__"], [23, 2, 1, "", "ard"], [23, 2, 1, "", "lengthscales_neat"], [23, 2, 1, "", "name"], [23, 2, 1, "", "name_scope"], [23, 2, 1, "", "non_trainable_variables"], [23, 4, 1, "", "on_separate_dims"], [23, 4, 1, "", "scaled_difference_matrix"], [23, 4, 1, "", "slice"], [23, 4, 1, "", "slice_cov"], [23, 2, 1, "", "submodules"], [23, 2, 1, "", "trainable_variables"], [23, 2, 1, "", "variables"], [23, 4, 1, "", "with_name_scope"]], "romcomma.gpf.likelihoods": [[25, 1, 1, "", "MOGaussian"]], "romcomma.gpf.likelihoods.MOGaussian": [[25, 4, 1, "", "N"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "conditional_mean"], [25, 4, 1, "", "conditional_variance"], [25, 4, 1, "", "log_prob"], [25, 2, 1, "", "name"], [25, 2, 1, "", "name_scope"], [25, 2, 1, "", "non_trainable_variables"], [25, 4, 1, "", "predict_log_density"], [25, 4, 1, "", "predict_mean_and_var"], [25, 4, 1, "", "split_axis_shape"], [25, 2, 1, "", "submodules"], [25, 2, 1, "", "trainable_variables"], [25, 2, 1, "", "variables"], [25, 4, 1, "", "variational_expectations"], [25, 4, 1, "", "with_name_scope"]], "romcomma.gpf.mean_functions": [[27, 1, 1, "", "MOMeanFunction"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[27, 4, 1, "", "__init__"], [27, 2, 1, "", "functions"], [27, 2, 1, "", "name"], [27, 2, 1, "", "name_scope"], [27, 2, 1, "", "non_trainable_variables"], [27, 2, 1, "", "output_dim"], [27, 2, 1, "", "submodules"], [27, 2, 1, "", "trainable_variables"], [27, 2, 1, "", "variables"], [27, 4, 1, "", "with_name_scope"]], "romcomma.gpf.models": [[29, 1, 1, "", "MOGPR"]], "romcomma.gpf.models.MOGPR": [[29, 2, 1, "", "L"], [29, 2, 1, "", "M"], [29, 4, 1, "", "__init__"], [29, 4, 1, "", "calc_num_latent_gps"], [29, 4, 1, "", "calc_num_latent_gps_from_data"], [29, 4, 1, "", "log_marginal_likelihood"], [29, 4, 1, "", "log_posterior_density"], [29, 4, 1, "", "log_prior_density"], [29, 4, 1, "", "maximum_log_likelihood_objective"], [29, 2, 1, "", "name"], [29, 2, 1, "", "name_scope"], [29, 2, 1, "", "non_trainable_variables"], [29, 4, 1, "", "predict_f"], [29, 4, 1, "", "predict_f_samples"], [29, 4, 1, "", "predict_log_density"], [29, 4, 1, "", "predict_y"], [29, 2, 1, "", "submodules"], [29, 2, 1, "", "trainable_variables"], [29, 4, 1, "", "training_loss"], [29, 4, 1, "", "training_loss_closure"], [29, 2, 1, "", "variables"], [29, 4, 1, "", "with_name_scope"]], "romcomma.gpf.tests": [[31, 5, 1, "", "covariance"], [32, 5, 1, "", "increment"], [33, 5, 1, "", "kernel"], [34, 5, 1, "", "likelihood"], [35, 5, 1, "", "regression_data"]], "romcomma.gpr": [[37, 0, 0, "-", "kernels"], [40, 0, 0, "-", "models"]], "romcomma.gpr.kernels": [[38, 1, 1, "", "Kernel"], [39, 1, 1, "", "RBF"]], "romcomma.gpr.kernels.Kernel": [[38, 2, 1, "", "L"], [38, 2, 1, "", "M"], [38, 2, 1, "", "OPTIONS"], [38, 1, 1, "", "Parameters"], [38, 2, 1, "", "TYPE_IDENTIFIER"], [38, 4, 1, "", "TypeFromIdentifier"], [38, 4, 1, "", "TypeFromParameters"], [38, 4, 1, "", "__init__"], [38, 4, 1, "", "broadcast_parameters"], [38, 2, 1, "", "implementation"], [38, 4, 1, "", "optimize"], [38, 2, 1, "", "params"]], "romcomma.gpr.kernels.Kernel.Parameters": [[38, 1, 1, "", "Values"], [38, 4, 1, "", "broadcast_value"], [38, 4, 1, "", "read"], [38, 4, 1, "", "write"]], "romcomma.gpr.kernels.Kernel.Parameters.Values": [[38, 4, 1, "", "count"], [38, 4, 1, "", "index"], [38, 3, 1, "id0", "lengthscales"], [38, 3, 1, "id1", "variance"]], "romcomma.gpr.kernels.RBF": [[39, 2, 1, "", "L"], [39, 2, 1, "", "M"], [39, 3, 1, "", "OPTIONS"], [39, 1, 1, "", "Parameters"], [39, 3, 1, "", "TYPE_IDENTIFIER"], [39, 4, 1, "", "TypeFromIdentifier"], [39, 4, 1, "", "TypeFromParameters"], [39, 4, 1, "", "__init__"], [39, 4, 1, "", "broadcast_parameters"], [39, 2, 1, "", "implementation"], [39, 4, 1, "", "optimize"], [39, 2, 1, "", "params"]], "romcomma.gpr.kernels.RBF.Parameters": [[39, 1, 1, "", "Values"], [39, 4, 1, "", "broadcast_value"], [39, 4, 1, "", "read"], [39, 4, 1, "", "write"]], "romcomma.gpr.kernels.RBF.Parameters.Values": [[39, 4, 1, "", "count"], [39, 4, 1, "", "index"], [39, 3, 1, "id0", "lengthscales"], [39, 3, 1, "id1", "variance"]], "romcomma.gpr.models": [[41, 1, 1, "", "MOGP"], [42, 1, 1, "", "GPR"], [43, 1, 1, "", "Likelihood"]], "romcomma.gpr.models.GP": [[41, 3, 1, "", "KERNEL_FOLDER_NAME"], [41, 2, 1, "", "K_cho"], [41, 2, 1, "", "K_inv_Y"], [41, 2, 1, "", "L"], [41, 2, 1, "", "M"], [41, 2, 1, "", "N"], [41, 2, 1, "", "OPTIONS"], [41, 1, 1, "", "Parameters"], [41, 2, 1, "", "X"], [41, 2, 1, "", "Y"], [41, 4, 1, "", "__init__"], [41, 4, 1, "", "broadcast_parameters"], [41, 4, 1, "", "check_K_inv_Y"], [41, 2, 1, "", "fold"], [41, 2, 1, "", "implementation"], [41, 4, 1, "", "optimize"], [41, 2, 1, "", "params"], [41, 4, 1, "", "predict"], [41, 4, 1, "", "test"]], "romcomma.gpr.models.GP.Parameters": [[41, 1, 1, "", "Values"], [41, 4, 1, "", "broadcast_value"], [41, 4, 1, "", "read"], [41, 4, 1, "", "write"]], "romcomma.gpr.models.GP.Parameters.Values": [[41, 4, 1, "", "count"], [41, 4, 1, "", "index"], [41, 3, 1, "id0", "kernel"]], "romcomma.gpr.models.GPInterface": [[42, 2, 1, "", "KERNEL_FOLDER_NAME"], [42, 2, 1, "", "K_cho"], [42, 2, 1, "", "K_inv_Y"], [42, 2, 1, "", "L"], [42, 2, 1, "", "M"], [42, 2, 1, "", "N"], [42, 2, 1, "", "OPTIONS"], [42, 1, 1, "", "Parameters"], [42, 2, 1, "", "X"], [42, 2, 1, "", "Y"], [42, 4, 1, "", "__init__"], [42, 4, 1, "", "broadcast_parameters"], [42, 2, 1, "", "fold"], [42, 2, 1, "", "implementation"], [42, 2, 1, "", "params"], [42, 4, 1, "", "predict"], [42, 4, 1, "", "test"]], "romcomma.gpr.models.GPInterface.Parameters": [[42, 1, 1, "", "Values"], [42, 4, 1, "", "broadcast_value"], [42, 4, 1, "", "read"], [42, 4, 1, "", "write"]], "romcomma.gpr.models.GPInterface.Parameters.Values": [[42, 4, 1, "", "count"], [42, 4, 1, "", "index"], [42, 3, 1, "id0", "kernel"]], "romcomma.gpr.models.Likelihood": [[43, 2, 1, "", "OPTIONS"], [43, 1, 1, "", "Parameters"], [43, 4, 1, "", "__init__"], [43, 4, 1, "", "optimize"], [43, 2, 1, "", "params"]], "romcomma.gpr.models.Likelihood.Parameters": [[43, 1, 1, "", "Values"], [43, 4, 1, "", "broadcast_value"], [43, 4, 1, "", "read"], [43, 4, 1, "", "write"]], "romcomma.gpr.models.Likelihood.Parameters.Values": [[43, 4, 1, "", "count"], [43, 4, 1, "", "index"], [43, 3, 1, "id0", "log_marginal"], [43, 3, 1, "id1", "variance"]], "romcomma.gsa": [[45, 0, 0, "-", "sobol"], [56, 0, 0, "-", "undertake"]], "romcomma.gsa.sobol": [[46, 1, 1, "", "Index"], [47, 1, 1, "", "ClosedSobolWithError"], [48, 1, 1, "", "ClosedSobolWithRotation"], [49, 1, 1, "", "GaussianWithout2Pi"], [50, 5, 1, "", "det"], [51, 5, 1, "", "mean"], [52, 5, 1, "", "ms"], [53, 5, 1, "", "rms"], [54, 5, 1, "", "sos"], [55, 5, 1, "", "sym_check"]], "romcomma.gsa.sobol.ClosedIndex": [[46, 2, 1, "", "OPTIONS"], [46, 4, 1, "", "__init__"], [46, 4, 1, "", "marginalize"], [46, 2, 1, "", "name"], [46, 2, 1, "", "name_scope"], [46, 2, 1, "", "non_trainable_variables"], [46, 2, 1, "", "submodules"], [46, 2, 1, "", "trainable_variables"], [46, 2, 1, "", "variables"], [46, 4, 1, "", "with_name_scope"]], "romcomma.gsa.sobol.ClosedIndexWithError": [[47, 2, 1, "", "OPTIONS"], [47, 1, 1, "", "RankEquation"], [47, 1, 1, "", "RankEquations"], [47, 4, 1, "", "__init__"], [47, 4, 1, "", "marginalize"], [47, 2, 1, "", "name"], [47, 2, 1, "", "name_scope"], [47, 2, 1, "", "non_trainable_variables"], [47, 2, 1, "", "submodules"], [47, 2, 1, "", "trainable_variables"], [47, 2, 1, "", "variables"], [47, 4, 1, "", "with_name_scope"]], "romcomma.gsa.sobol.ClosedIndexWithError.RankEquation": [[47, 4, 1, "", "count"], [47, 3, 1, "", "i"], [47, 4, 1, "", "index"], [47, 3, 1, "", "j"], [47, 3, 1, "", "k"], [47, 3, 1, "", "l"]], "romcomma.gsa.sobol.ClosedIndexWithError.RankEquations": [[47, 3, 1, "", "DIAGONAL"], [47, 3, 1, "", "MIXED"], [47, 4, 1, "", "count"], [47, 4, 1, "", "index"]], "romcomma.gsa.sobol.ClosedIndexWithRotation": [[48, 3, 1, "", "OPTIONS"], [48, 4, 1, "", "__init__"], [48, 4, 1, "", "marginalize"], [48, 2, 1, "", "name"], [48, 2, 1, "", "name_scope"], [48, 2, 1, "", "non_trainable_variables"], [48, 2, 1, "", "submodules"], [48, 2, 1, "", "trainable_variables"], [48, 2, 1, "", "variables"], [48, 4, 1, "", "with_name_scope"]], "romcomma.gsa.sobol.Gaussian": [[49, 4, 1, "", "__init__"], [49, 4, 1, "", "log_pdf"], [49, 4, 1, "", "pdf"]], "romcomma.gsa.undertake": [[57, 1, 1, "", "GSA"]], "romcomma.gsa.undertake.GSA": [[57, 1, 1, "", "Kind"], [57, 2, 1, "", "OPTIONS"], [57, 1, 1, "", "Parameters"], [57, 4, 1, "", "__init__"], [57, 2, 1, "", "params"]], "romcomma.gsa.undertake.GSA.Parameters": [[57, 1, 1, "", "Values"], [57, 4, 1, "", "broadcast_value"], [57, 4, 1, "", "read"], [57, 4, 1, "", "write"]], "romcomma.gsa.undertake.GSA.Parameters.Values": [[57, 3, 1, "id0", "S"], [57, 3, 1, "id1", "T"], [57, 3, 1, "id2", "V"], [57, 3, 1, "id3", "W"], [57, 4, 1, "", "count"], [57, 4, 1, "", "index"]], "romcomma.rom": [[59, 0, 0, "-", "old"]], "romcomma.user": [[61, 0, 0, "-", "context"], [64, 0, 0, "-", "function"], [72, 0, 0, "-", "results"], [75, 0, 0, "-", "run"], [78, 0, 0, "-", "sample"], [82, 0, 0, "-", "scripts"]], "romcomma.user.context": [[62, 5, 1, "", "Setup"], [63, 5, 1, "", "Timer"]], "romcomma.user.function": [[65, 6, 1, "", "ALL"], [66, 6, 1, "", "ISHIGAMI"], [67, 6, 1, "", "OAKLEY2004"], [68, 6, 1, "", "SOBOL_G"], [69, 1, 1, "", "Scalar"], [70, 1, 1, "", "Vector"], [71, 5, 1, "", "linspace"]], "romcomma.user.function.Scalar": [[69, 4, 1, "", "__init__"]], "romcomma.user.function.Vector": [[70, 4, 1, "", "__init__"], [70, 4, 1, "", "clear"], [70, 4, 1, "", "concat"], [70, 4, 1, "", "copy"], [70, 4, 1, "", "fromkeys"], [70, 4, 1, "", "get"], [70, 4, 1, "", "items"], [70, 4, 1, "", "keys"], [70, 2, 1, "", "meta"], [70, 4, 1, "", "pop"], [70, 4, 1, "", "popitem"], [70, 4, 1, "", "setdefault"], [70, 4, 1, "", "subVector"], [70, 4, 1, "", "update"], [70, 4, 1, "", "values"]], "romcomma.user.results": [[73, 1, 1, "", "Collect"], [74, 5, 1, "", "copy"]], "romcomma.user.results.Collect": [[73, 4, 1, "", "__init__"], [73, 3, 1, "", "csvs"], [73, 3, 1, "", "folders"], [73, 4, 1, "", "from_folders"], [73, 4, 1, "", "from_folds"], [73, 3, 1, "", "ignore_missing"], [73, 3, 1, "", "write_options"]], "romcomma.user.run": [[76, 5, 1, "", "gpr"], [77, 5, 1, "", "gsa"]], "romcomma.user.sample": [[79, 1, 1, "", "DOE"], [80, 1, 1, "", "Function"], [81, 1, 1, "", "GaussianNoise"]], "romcomma.user.sample.DOE": [[79, 3, 1, "", "Method"], [79, 4, 1, "", "__init__"], [79, 4, 1, "", "full_factorial"], [79, 4, 1, "", "latin_hypercube"]], "romcomma.user.sample.Function": [[80, 4, 1, "", "__init__"], [80, 4, 1, "", "collection"], [80, 4, 1, "", "into_K_folds"], [80, 2, 1, "", "repo"], [80, 4, 1, "", "rotate_folds"], [80, 4, 1, "", "stochastic_rotation"], [80, 4, 1, "", "un_rotate_folds"]], "romcomma.user.sample.GaussianNoise": [[81, 1, 1, "", "Variance"], [81, 4, 1, "", "__init__"]], "romcomma.user.sample.GaussianNoise.Variance": [[81, 2, 1, "", "matrix"], [81, 2, 1, "", "meta"]], "romcomma.user.scripts": [[83, 6, 1, "", "BASE_FOLDER"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:attribute", "4": "py:method", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"rom": [1, 58, 59], "comma": 1, "user": [1, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "guid": 1, "content": 1, "indic": [0, 1], "tabl": [0, 1], "packag": [], "refer": 2, "romcomma": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20], "class": [4, 5, 6], "model": [5, 28, 29, 40, 41, 42, 43], "paramet": 6, "definit": [7, 8, 9, 10, 11], "float": 8, "int": 9, "np": 10, "tf": 11, "data": [12, 13, 14, 15, 16, 17], "storag": [13, 14, 15, 16, 17], "fold": 14, "frame": 15, "normal": 16, "repositori": 17, "gpf": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "varianc": 20, "kernel": [21, 22, 23, 33, 37, 38, 39], "mostationari": 22, "rbf": [23, 39], "likelihood": [24, 25, 34, 43], "mogaussian": 25, "mean_funct": [26, 27], "momeanfunct": 27, "mogpr": 29, "test": [30, 31, 32, 33, 34, 35], "covari": 31, "increment": 32, "regression_data": 35, "gpr": [36, 37, 38, 39, 40, 41, 42, 43, 76], "gp": 41, "gpinterfac": 42, "gsa": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 77], "sobol": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "closedindex": 46, "closedindexwitherror": 47, "closedindexwithrot": 48, "gaussian": 49, "det": 50, "mean": 51, "m": 52, "rm": 53, "so": 54, "sym_check": 55, "undertak": [56, 57], "old": 59, "context": [61, 62, 63], "setup": 62, "timer": 63, "function": [64, 65, 66, 67, 68, 69, 70, 71, 80], "all": 65, "ishigami": 66, "oakley2004": 67, "sobol_g": 68, "scalar": 69, "vector": 70, "linspac": 71, "result": [72, 73, 74], "collect": 73, "copi": 74, "run": [75, 76, 77], "sampl": [78, 79, 80, 81], "doe": 79, "gaussiannois": 81, "script": [82, 83], "base_fold": 83, "get": 84, "start": 84, "instal": 84, "structur": [], "glossari": [0, 84], "abbrevi": [], "modul": [2, 84], "hierarchi": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Glossary": [[0, "glossary"], [84, "glossary"]], "Indices and Tables": [[0, "indices-and-tables"], [1, "indices-and-tables"]], "rom-comma User Guide": [[1, "rom-comma-user-guide"]], "Contents": [[1, "contents"]], "Module Reference": [[2, "module-romcomma"]], "romcomma.base": [[3, "module-romcomma.base"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "romcomma.base.classes.Model": [[5, "romcomma-base-classes-model"]], "romcomma.base.classes.Parameters": [[6, "romcomma-base-classes-parameters"]], "romcomma.base.definitions": [[7, "module-romcomma.base.definitions"]], "romcomma.base.definitions.FLOAT": [[8, "romcomma-base-definitions-float"]], "romcomma.base.definitions.INT": [[9, "romcomma-base-definitions-int"]], "romcomma.base.definitions.NP": [[10, "romcomma-base-definitions-np"]], "romcomma.base.definitions.TF": [[11, "romcomma-base-definitions-tf"]], "romcomma.data": [[12, "module-romcomma.data"]], "romcomma.data.storage": [[13, "module-romcomma.data.storage"]], "romcomma.data.storage.Fold": [[14, "romcomma-data-storage-fold"]], "romcomma.data.storage.Frame": [[15, "romcomma-data-storage-frame"]], "romcomma.data.storage.Normalization": [[16, "romcomma-data-storage-normalization"]], "romcomma.data.storage.Repository": [[17, "romcomma-data-storage-repository"]], "romcomma.gpf": [[18, "module-romcomma.gpf"]], "romcomma.gpf.base": [[19, "module-romcomma.gpf.base"]], "romcomma.gpf.base.Variance": [[20, "romcomma-gpf-base-variance"]], "romcomma.gpf.kernels": [[21, "module-romcomma.gpf.kernels"]], "romcomma.gpf.kernels.MOStationary": [[22, "romcomma-gpf-kernels-mostationary"]], "romcomma.gpf.kernels.RBF": [[23, "romcomma-gpf-kernels-rbf"]], "romcomma.gpf.likelihoods": [[24, "module-romcomma.gpf.likelihoods"]], "romcomma.gpf.likelihoods.MOGaussian": [[25, "romcomma-gpf-likelihoods-mogaussian"]], "romcomma.gpf.mean_functions": [[26, "module-romcomma.gpf.mean_functions"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[27, "romcomma-gpf-mean-functions-momeanfunction"]], "romcomma.gpf.models": [[28, "module-romcomma.gpf.models"]], "romcomma.gpf.models.MOGPR": [[29, "romcomma-gpf-models-mogpr"]], "romcomma.gpf.tests": [[30, "module-romcomma.gpf.tests"]], "romcomma.gpf.tests.covariance": [[31, "romcomma-gpf-tests-covariance"]], "romcomma.gpf.tests.increment": [[32, "romcomma-gpf-tests-increment"]], "romcomma.gpf.tests.kernel": [[33, "romcomma-gpf-tests-kernel"]], "romcomma.gpf.tests.likelihood": [[34, "romcomma-gpf-tests-likelihood"]], "romcomma.gpf.tests.regression_data": [[35, "romcomma-gpf-tests-regression-data"]], "romcomma.gpr": [[36, "module-romcomma.gpr"]], "romcomma.gpr.kernels": [[37, "module-romcomma.gpr.kernels"]], "romcomma.gpr.kernels.Kernel": [[38, "romcomma-gpr-kernels-kernel"]], "romcomma.gpr.kernels.RBF": [[39, "romcomma-gpr-kernels-rbf"]], "romcomma.gpr.models": [[40, "module-romcomma.gpr.models"]], "romcomma.gpr.models.GP": [[41, "romcomma-gpr-models-gp"]], "romcomma.gpr.models.GPInterface": [[42, "romcomma-gpr-models-gpinterface"]], "romcomma.gpr.models.Likelihood": [[43, "romcomma-gpr-models-likelihood"]], "romcomma.gsa": [[44, "module-romcomma.gsa"]], "romcomma.gsa.sobol": [[45, "module-romcomma.gsa.sobol"]], "romcomma.gsa.sobol.ClosedIndex": [[46, "romcomma-gsa-sobol-closedindex"]], "romcomma.gsa.sobol.ClosedIndexWithError": [[47, "romcomma-gsa-sobol-closedindexwitherror"]], "romcomma.gsa.sobol.ClosedIndexWithRotation": [[48, "romcomma-gsa-sobol-closedindexwithrotation"]], "romcomma.gsa.sobol.Gaussian": [[49, "romcomma-gsa-sobol-gaussian"]], "romcomma.gsa.sobol.det": [[50, "romcomma-gsa-sobol-det"]], "romcomma.gsa.sobol.mean": [[51, "romcomma-gsa-sobol-mean"]], "romcomma.gsa.sobol.ms": [[52, "romcomma-gsa-sobol-ms"]], "romcomma.gsa.sobol.rms": [[53, "romcomma-gsa-sobol-rms"]], "romcomma.gsa.sobol.sos": [[54, "romcomma-gsa-sobol-sos"]], "romcomma.gsa.sobol.sym_check": [[55, "romcomma-gsa-sobol-sym-check"]], "romcomma.gsa.undertake": [[56, "module-romcomma.gsa.undertake"]], "romcomma.gsa.undertake.GSA": [[57, "romcomma-gsa-undertake-gsa"]], "romcomma.rom": [[58, "module-romcomma.rom"]], "romcomma.rom.old": [[59, "module-romcomma.rom.old"]], "romcomma.user": [[60, "module-romcomma.user"]], "romcomma.user.context": [[61, "module-romcomma.user.context"]], "romcomma.user.context.Setup": [[62, "romcomma-user-context-setup"]], "romcomma.user.context.Timer": [[63, "romcomma-user-context-timer"]], "romcomma.user.function": [[64, "module-romcomma.user.function"]], "romcomma.user.function.ALL": [[65, "romcomma-user-function-all"]], "romcomma.user.function.ISHIGAMI": [[66, "romcomma-user-function-ishigami"]], "romcomma.user.function.OAKLEY2004": [[67, "romcomma-user-function-oakley2004"]], "romcomma.user.function.SOBOL_G": [[68, "romcomma-user-function-sobol-g"]], "romcomma.user.function.Scalar": [[69, "romcomma-user-function-scalar"]], "romcomma.user.function.Vector": [[70, "romcomma-user-function-vector"]], "romcomma.user.function.linspace": [[71, "romcomma-user-function-linspace"]], "romcomma.user.results": [[72, "module-romcomma.user.results"]], "romcomma.user.results.Collect": [[73, "romcomma-user-results-collect"]], "romcomma.user.results.copy": [[74, "romcomma-user-results-copy"]], "romcomma.user.run": [[75, "module-romcomma.user.run"]], "romcomma.user.run.gpr": [[76, "romcomma-user-run-gpr"]], "romcomma.user.run.gsa": [[77, "romcomma-user-run-gsa"]], "romcomma.user.sample": [[78, "module-romcomma.user.sample"]], "romcomma.user.sample.DOE": [[79, "romcomma-user-sample-doe"]], "romcomma.user.sample.Function": [[80, "romcomma-user-sample-function"]], "romcomma.user.sample.GaussianNoise": [[81, "romcomma-user-sample-gaussiannoise"]], "romcomma.user.scripts": [[82, "module-romcomma.user.scripts"]], "romcomma.user.scripts.BASE_FOLDER": [[83, "romcomma-user-scripts-base-folder"]], "Getting Started": [[84, "getting-started"]], "Installation": [[84, "installation"]], "Module Hierarchy": [[84, "module-hierarchy"]]}, "indexentries": {"stddev": [[0, "term-StdDev"], [2, "term-StdDev"]], "folder": [[0, "term-folder"], [2, "term-folder"]], "gf": [[0, "term-gf"], [2, "term-gf"]], "np": [[0, "term-np"], [2, "term-np"]], "pd": [[0, "term-pd"], [2, "term-pd"]], "tf": [[0, "term-tf"], [2, "term-tf"]], "module": [[2, "module-romcomma"], [3, "module-romcomma.base"], [4, "module-romcomma.base.classes"], [7, "module-romcomma.base.definitions"], [12, "module-romcomma.data"], [13, "module-romcomma.data.storage"], [18, "module-romcomma.gpf"], [19, "module-romcomma.gpf.base"], [21, "module-romcomma.gpf.kernels"], [24, "module-romcomma.gpf.likelihoods"], [26, "module-romcomma.gpf.mean_functions"], [28, "module-romcomma.gpf.models"], [30, "module-romcomma.gpf.tests"], [36, "module-romcomma.gpr"], [37, "module-romcomma.gpr.kernels"], [40, "module-romcomma.gpr.models"], [44, "module-romcomma.gsa"], [45, "module-romcomma.gsa.sobol"], [56, "module-romcomma.gsa.undertake"], [58, "module-romcomma.rom"], [59, "module-romcomma.rom.old"], [60, "module-romcomma.user"], [61, "module-romcomma.user.context"], [64, "module-romcomma.user.function"], [72, "module-romcomma.user.results"], [75, "module-romcomma.user.run"], [78, "module-romcomma.user.sample"], [82, "module-romcomma.user.scripts"]], "romcomma": [[2, "module-romcomma"]], "romcomma.base": [[3, "module-romcomma.base"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "model (class in romcomma.base.classes)": [[5, "romcomma.base.classes.Model"]], "model.parameters (class in romcomma.base.classes)": [[5, "romcomma.base.classes.Model.Parameters"]], "model.parameters.values (class in romcomma.base.classes)": [[5, "romcomma.base.classes.Model.Parameters.Values"]], "notimplemented (model.parameters.values attribute)": [[5, "romcomma.base.classes.Model.Parameters.Values.NotImplemented"]], "options (model property)": [[5, "romcomma.base.classes.Model.OPTIONS"]], "__init__() (model method)": [[5, "romcomma.base.classes.Model.__init__"]], "broadcast_value() (model.parameters method)": [[5, "romcomma.base.classes.Model.Parameters.broadcast_value"]], "count() (model.parameters.values method)": [[5, "romcomma.base.classes.Model.Parameters.Values.count"]], "index() (model.parameters.values method)": [[5, "romcomma.base.classes.Model.Parameters.Values.index"]], "params (model property)": [[5, "romcomma.base.classes.Model.params"]], "read() (model.parameters method)": [[5, "romcomma.base.classes.Model.Parameters.read"]], "write() (model.parameters method)": [[5, "romcomma.base.classes.Model.Parameters.write"]], "parameters (class in romcomma.base.classes)": [[6, "romcomma.base.classes.Parameters"]], "values (parameters property)": [[6, "romcomma.base.classes.Parameters.Values"]], "__init__() (parameters method)": [[6, "romcomma.base.classes.Parameters.__init__"]], "broadcast_value() (parameters method)": [[6, "romcomma.base.classes.Parameters.broadcast_value"]], "read() (parameters method)": [[6, "romcomma.base.classes.Parameters.read"]], "write() (parameters method)": [[6, "romcomma.base.classes.Parameters.write"]], "romcomma.base.definitions": [[7, "module-romcomma.base.definitions"]], "float() (in module romcomma.base.definitions)": [[8, "romcomma.base.definitions.FLOAT"]], "int() (in module romcomma.base.definitions)": [[9, "romcomma.base.definitions.INT"]], "array (np attribute)": [[10, "romcomma.base.definitions.NP.Array"]], "covector (np attribute)": [[10, "romcomma.base.definitions.NP.Covector"]], "matrix (np attribute)": [[10, "romcomma.base.definitions.NP.Matrix"]], "np (class in romcomma.base.definitions)": [[10, "romcomma.base.definitions.NP"]], "tensor (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor"]], "tensor1 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor1"]], "tensor2 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor2"]], "tensor3 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor3"]], "tensor4 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor4"]], "tensor5 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor5"]], "tensor6 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor6"]], "tensor7 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor7"]], "tensor8 (np attribute)": [[10, "romcomma.base.definitions.NP.Tensor8"]], "vector (np attribute)": [[10, "romcomma.base.definitions.NP.Vector"]], "__init__() (np method)": [[10, "romcomma.base.definitions.NP.__init__"]], "array (tf attribute)": [[11, "romcomma.base.definitions.TF.Array"]], "covector (tf attribute)": [[11, "romcomma.base.definitions.TF.Covector"]], "matrix (tf attribute)": [[11, "romcomma.base.definitions.TF.Matrix"]], "pairofints (tf attribute)": [[11, "romcomma.base.definitions.TF.PairOfInts"]], "slice (tf attribute)": [[11, "romcomma.base.definitions.TF.Slice"]], "tf (class in romcomma.base.definitions)": [[11, "romcomma.base.definitions.TF"]], "tf.tensor (class in romcomma.base.definitions)": [[11, "romcomma.base.definitions.TF.Tensor"]], "tensor1 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor1"]], "tensor2 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor2"]], "tensor3 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor3"]], "tensor4 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor4"]], "tensor5 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor5"]], "tensor6 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor6"]], "tensor7 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor7"]], "tensor8 (tf attribute)": [[11, "romcomma.base.definitions.TF.Tensor8"]], "vector (tf attribute)": [[11, "romcomma.base.definitions.TF.Vector"]], "__init__() (tf method)": [[11, "romcomma.base.definitions.TF.__init__"]], "consumers() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.consumers"]], "device (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.device"]], "dtype (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.dtype"]], "eval() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.eval"]], "experimental_ref() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.experimental_ref"]], "get_shape() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.get_shape"]], "graph (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.graph"]], "name (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.name"]], "op (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.op"]], "ref() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.ref"]], "set_shape() (tf.tensor method)": [[11, "romcomma.base.definitions.TF.Tensor.set_shape"]], "shape (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.shape"]], "value_index (tf.tensor property)": [[11, "romcomma.base.definitions.TF.Tensor.value_index"]], "romcomma.data": [[12, "module-romcomma.data"]], "romcomma.data.storage": [[13, "module-romcomma.data.storage"]], "fold (class in romcomma.data.storage)": [[14, "romcomma.data.storage.Fold"]], "k (fold property)": [[14, "romcomma.data.storage.Fold.K"]], "l (fold property)": [[14, "romcomma.data.storage.Fold.L"]], "m (fold property)": [[14, "romcomma.data.storage.Fold.M"]], "n (fold property)": [[14, "romcomma.data.storage.Fold.N"]], "x (fold property)": [[14, "romcomma.data.storage.Fold.X"]], "x_rotation (fold property)": [[14, "romcomma.data.storage.Fold.X_rotation"]], "y (fold property)": [[14, "romcomma.data.storage.Fold.Y"]], "y_split() (fold method)": [[14, "romcomma.data.storage.Fold.Y_split"]], "y_splits (fold property)": [[14, "romcomma.data.storage.Fold.Y_splits"]], "__init__() (fold method)": [[14, "romcomma.data.storage.Fold.__init__"]], "folds (fold property)": [[14, "romcomma.data.storage.Fold.folds"]], "from_csv() (fold class method)": [[14, "romcomma.data.storage.Fold.from_csv"]], "from_df() (fold class method)": [[14, "romcomma.data.storage.Fold.from_df"]], "from_dfs() (fold class method)": [[14, "romcomma.data.storage.Fold.from_dfs"]], "into_k_folds() (fold method)": [[14, "romcomma.data.storage.Fold.into_K_folds"]], "test_x (fold property)": [[14, "romcomma.data.storage.Fold.test_x"]], "test_y (fold property)": [[14, "romcomma.data.storage.Fold.test_y"]], "csv_options (frame property)": [[15, "romcomma.data.storage.Frame.CSV_OPTIONS"]], "frame (class in romcomma.data.storage)": [[15, "romcomma.data.storage.Frame"]], "__init__() (frame method)": [[15, "romcomma.data.storage.Frame.__init__"]], "is_empty (frame property)": [[15, "romcomma.data.storage.Frame.is_empty"]], "write() (frame method)": [[15, "romcomma.data.storage.Frame.write"]], "normalization (class in romcomma.data.storage)": [[16, "romcomma.data.storage.Normalization"]], "__init__() (normalization method)": [[16, "romcomma.data.storage.Normalization.__init__"]], "apply_to() (normalization method)": [[16, "romcomma.data.storage.Normalization.apply_to"]], "undo_from() (normalization method)": [[16, "romcomma.data.storage.Normalization.undo_from"]], "k (repository property)": [[17, "romcomma.data.storage.Repository.K"]], "l (repository property)": [[17, "romcomma.data.storage.Repository.L"]], "m (repository property)": [[17, "romcomma.data.storage.Repository.M"]], "n (repository property)": [[17, "romcomma.data.storage.Repository.N"]], "repository (class in romcomma.data.storage)": [[17, "romcomma.data.storage.Repository"]], "x (repository property)": [[17, "romcomma.data.storage.Repository.X"]], "y (repository property)": [[17, "romcomma.data.storage.Repository.Y"]], "y_split() (repository method)": [[17, "romcomma.data.storage.Repository.Y_split"]], "y_splits (repository property)": [[17, "romcomma.data.storage.Repository.Y_splits"]], "__init__() (repository method)": [[17, "romcomma.data.storage.Repository.__init__"]], "folds (repository property)": [[17, "romcomma.data.storage.Repository.folds"]], "from_csv() (repository class method)": [[17, "romcomma.data.storage.Repository.from_csv"]], "from_df() (repository class method)": [[17, "romcomma.data.storage.Repository.from_df"]], "into_k_folds() (repository method)": [[17, "romcomma.data.storage.Repository.into_K_folds"]], "romcomma.gpf": [[18, "module-romcomma.gpf"]], "romcomma.gpf.base": [[19, "module-romcomma.gpf.base"]], "variance (class in romcomma.gpf.base)": [[20, "romcomma.gpf.base.Variance"]], "__init__() (variance method)": [[20, "romcomma.gpf.base.Variance.__init__"]], "cholesky (variance property)": [[20, "romcomma.gpf.base.Variance.cholesky"]], "name (variance property)": [[20, "romcomma.gpf.base.Variance.name"]], "name_scope (variance property)": [[20, "romcomma.gpf.base.Variance.name_scope"]], "non_trainable_variables (variance property)": [[20, "romcomma.gpf.base.Variance.non_trainable_variables"]], "shape (variance property)": [[20, "romcomma.gpf.base.Variance.shape"]], "submodules (variance property)": [[20, "romcomma.gpf.base.Variance.submodules"]], "trainable_variables (variance property)": [[20, "romcomma.gpf.base.Variance.trainable_variables"]], "value (variance property)": [[20, "romcomma.gpf.base.Variance.value"]], "value_times_eye() (variance method)": [[20, "romcomma.gpf.base.Variance.value_times_eye"]], "value_to_broadcast (variance property)": [[20, "romcomma.gpf.base.Variance.value_to_broadcast"]], "variables (variance property)": [[20, "romcomma.gpf.base.Variance.variables"]], "with_name_scope() (variance class method)": [[20, "romcomma.gpf.base.Variance.with_name_scope"]], "romcomma.gpf.kernels": [[21, "module-romcomma.gpf.kernels"]], "k_d() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.K_d"]], "k_d_apply_variance() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.K_d_apply_variance"]], "k_d_unit_variance() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.K_d_unit_variance"]], "k_diag() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.K_diag"]], "k_unit_variance() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.K_unit_variance"]], "mostationary (class in romcomma.gpf.kernels)": [[22, "romcomma.gpf.kernels.MOStationary"]], "__init__() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.__init__"]], "ard (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.ard"]], "lengthscales_neat (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.lengthscales_neat"]], "name (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.name"]], "name_scope (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.name_scope"]], "non_trainable_variables (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.non_trainable_variables"]], "on_separate_dims() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.on_separate_dims"]], "scaled_difference_matrix() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.scaled_difference_matrix"]], "slice() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.slice"]], "slice_cov() (mostationary method)": [[22, "romcomma.gpf.kernels.MOStationary.slice_cov"]], "submodules (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.submodules"]], "trainable_variables (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.trainable_variables"]], "variables (mostationary property)": [[22, "romcomma.gpf.kernels.MOStationary.variables"]], "with_name_scope() (mostationary class method)": [[22, "romcomma.gpf.kernels.MOStationary.with_name_scope"]], "k_d() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.K_d"]], "k_d_apply_variance() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.K_d_apply_variance"]], "k_d_unit_variance() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.K_d_unit_variance"]], "k_diag() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.K_diag"]], "k_unit_variance() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.K_unit_variance"]], "rbf (class in romcomma.gpf.kernels)": [[23, "romcomma.gpf.kernels.RBF"]], "__init__() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.__init__"], [39, "romcomma.gpr.kernels.RBF.__init__"]], "ard (rbf property)": [[23, "romcomma.gpf.kernels.RBF.ard"]], "lengthscales_neat (rbf property)": [[23, "romcomma.gpf.kernels.RBF.lengthscales_neat"]], "name (rbf property)": [[23, "romcomma.gpf.kernels.RBF.name"]], "name_scope (rbf property)": [[23, "romcomma.gpf.kernels.RBF.name_scope"]], "non_trainable_variables (rbf property)": [[23, "romcomma.gpf.kernels.RBF.non_trainable_variables"]], "on_separate_dims() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.on_separate_dims"]], "scaled_difference_matrix() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.scaled_difference_matrix"]], "slice() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.slice"]], "slice_cov() (rbf method)": [[23, "romcomma.gpf.kernels.RBF.slice_cov"]], "submodules (rbf property)": [[23, "romcomma.gpf.kernels.RBF.submodules"]], "trainable_variables (rbf property)": [[23, "romcomma.gpf.kernels.RBF.trainable_variables"]], "variables (rbf property)": [[23, "romcomma.gpf.kernels.RBF.variables"]], "with_name_scope() (rbf class method)": [[23, "romcomma.gpf.kernels.RBF.with_name_scope"]], "romcomma.gpf.likelihoods": [[24, "module-romcomma.gpf.likelihoods"]], "mogaussian (class in romcomma.gpf.likelihoods)": [[25, "romcomma.gpf.likelihoods.MOGaussian"]], "n() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.N"]], "__init__() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.__init__"]], "conditional_mean() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.conditional_mean"]], "conditional_variance() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.conditional_variance"]], "log_prob() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.log_prob"]], "name (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.name"]], "name_scope (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.name_scope"]], "non_trainable_variables (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.non_trainable_variables"]], "predict_log_density() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.predict_log_density"]], "predict_mean_and_var() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.predict_mean_and_var"]], "split_axis_shape() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.split_axis_shape"]], "submodules (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.submodules"]], "trainable_variables (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.trainable_variables"]], "variables (mogaussian property)": [[25, "romcomma.gpf.likelihoods.MOGaussian.variables"]], "variational_expectations() (mogaussian method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.variational_expectations"]], "with_name_scope() (mogaussian class method)": [[25, "romcomma.gpf.likelihoods.MOGaussian.with_name_scope"]], "romcomma.gpf.mean_functions": [[26, "module-romcomma.gpf.mean_functions"]], "momeanfunction (class in romcomma.gpf.mean_functions)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction"]], "__init__() (momeanfunction method)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.__init__"]], "functions (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.functions"]], "name (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.name"]], "name_scope (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.name_scope"]], "non_trainable_variables (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.non_trainable_variables"]], "output_dim (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.output_dim"]], "submodules (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.submodules"]], "trainable_variables (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.trainable_variables"]], "variables (momeanfunction property)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.variables"]], "with_name_scope() (momeanfunction class method)": [[27, "romcomma.gpf.mean_functions.MOMeanFunction.with_name_scope"]], "romcomma.gpf.models": [[28, "module-romcomma.gpf.models"]], "l (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.L"]], "m (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.M"]], "mogpr (class in romcomma.gpf.models)": [[29, "romcomma.gpf.models.MOGPR"]], "__init__() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.__init__"]], "calc_num_latent_gps() (mogpr static method)": [[29, "romcomma.gpf.models.MOGPR.calc_num_latent_gps"]], "calc_num_latent_gps_from_data() (mogpr static method)": [[29, "romcomma.gpf.models.MOGPR.calc_num_latent_gps_from_data"]], "log_marginal_likelihood() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.log_marginal_likelihood"]], "log_posterior_density() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.log_posterior_density"]], "log_prior_density() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.log_prior_density"]], "maximum_log_likelihood_objective() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.maximum_log_likelihood_objective"]], "name (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.name"]], "name_scope (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.name_scope"]], "non_trainable_variables (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.non_trainable_variables"]], "predict_f() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.predict_f"]], "predict_f_samples() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.predict_f_samples"]], "predict_log_density() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.predict_log_density"]], "predict_y() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.predict_y"]], "submodules (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.submodules"]], "trainable_variables (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.trainable_variables"]], "training_loss() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.training_loss"]], "training_loss_closure() (mogpr method)": [[29, "romcomma.gpf.models.MOGPR.training_loss_closure"]], "variables (mogpr property)": [[29, "romcomma.gpf.models.MOGPR.variables"]], "with_name_scope() (mogpr class method)": [[29, "romcomma.gpf.models.MOGPR.with_name_scope"]], "romcomma.gpf.tests": [[30, "module-romcomma.gpf.tests"]], "covariance() (in module romcomma.gpf.tests)": [[31, "romcomma.gpf.tests.covariance"]], "increment() (in module romcomma.gpf.tests)": [[32, "romcomma.gpf.tests.increment"]], "kernel() (in module romcomma.gpf.tests)": [[33, "romcomma.gpf.tests.kernel"]], "likelihood() (in module romcomma.gpf.tests)": [[34, "romcomma.gpf.tests.likelihood"]], "regression_data() (in module romcomma.gpf.tests)": [[35, "romcomma.gpf.tests.regression_data"]], "romcomma.gpr": [[36, "module-romcomma.gpr"]], "romcomma.gpr.kernels": [[37, "module-romcomma.gpr.kernels"]], "kernel (class in romcomma.gpr.kernels)": [[38, "romcomma.gpr.kernels.Kernel"]], "kernel.parameters (class in romcomma.gpr.kernels)": [[38, "romcomma.gpr.kernels.Kernel.Parameters"]], "kernel.parameters.values (class in romcomma.gpr.kernels)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.Values"]], "l (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.L"]], "m (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.M"]], "options (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.OPTIONS"]], "type_identifier (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.TYPE_IDENTIFIER"]], "typefromidentifier() (kernel class method)": [[38, "romcomma.gpr.kernels.Kernel.TypeFromIdentifier"]], "typefromparameters() (kernel class method)": [[38, "romcomma.gpr.kernels.Kernel.TypeFromParameters"]], "__init__() (kernel method)": [[38, "romcomma.gpr.kernels.Kernel.__init__"]], "broadcast_parameters() (kernel method)": [[38, "romcomma.gpr.kernels.Kernel.broadcast_parameters"]], "broadcast_value() (kernel.parameters method)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.broadcast_value"]], "count() (kernel.parameters.values method)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.Values.count"]], "implementation (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.implementation"]], "index() (kernel.parameters.values method)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.Values.index"]], "lengthscales (kernel.parameters.values attribute)": [[38, "id0"], [38, "romcomma.gpr.kernels.Kernel.Parameters.Values.lengthscales"]], "optimize() (kernel method)": [[38, "romcomma.gpr.kernels.Kernel.optimize"]], "params (kernel property)": [[38, "romcomma.gpr.kernels.Kernel.params"]], "read() (kernel.parameters method)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.read"]], "variance (kernel.parameters.values attribute)": [[38, "id1"], [38, "romcomma.gpr.kernels.Kernel.Parameters.Values.variance"]], "write() (kernel.parameters method)": [[38, "romcomma.gpr.kernels.Kernel.Parameters.write"]], "l (rbf property)": [[39, "romcomma.gpr.kernels.RBF.L"]], "m (rbf property)": [[39, "romcomma.gpr.kernels.RBF.M"]], "options (rbf attribute)": [[39, "romcomma.gpr.kernels.RBF.OPTIONS"]], "rbf (class in romcomma.gpr.kernels)": [[39, "romcomma.gpr.kernels.RBF"]], "rbf.parameters (class in romcomma.gpr.kernels)": [[39, "romcomma.gpr.kernels.RBF.Parameters"]], "rbf.parameters.values (class in romcomma.gpr.kernels)": [[39, "romcomma.gpr.kernels.RBF.Parameters.Values"]], "type_identifier (rbf attribute)": [[39, "romcomma.gpr.kernels.RBF.TYPE_IDENTIFIER"]], "typefromidentifier() (rbf class method)": [[39, "romcomma.gpr.kernels.RBF.TypeFromIdentifier"]], "typefromparameters() (rbf class method)": [[39, "romcomma.gpr.kernels.RBF.TypeFromParameters"]], "broadcast_parameters() (rbf method)": [[39, "romcomma.gpr.kernels.RBF.broadcast_parameters"]], "broadcast_value() (rbf.parameters method)": [[39, "romcomma.gpr.kernels.RBF.Parameters.broadcast_value"]], "count() (rbf.parameters.values method)": [[39, "romcomma.gpr.kernels.RBF.Parameters.Values.count"]], "implementation (rbf property)": [[39, "romcomma.gpr.kernels.RBF.implementation"]], "index() (rbf.parameters.values method)": [[39, "romcomma.gpr.kernels.RBF.Parameters.Values.index"]], "lengthscales (rbf.parameters.values attribute)": [[39, "id0"], [39, "romcomma.gpr.kernels.RBF.Parameters.Values.lengthscales"]], "optimize() (rbf method)": [[39, "romcomma.gpr.kernels.RBF.optimize"]], "params (rbf property)": [[39, "romcomma.gpr.kernels.RBF.params"]], "read() (rbf.parameters method)": [[39, "romcomma.gpr.kernels.RBF.Parameters.read"]], "variance (rbf.parameters.values attribute)": [[39, "id1"], [39, "romcomma.gpr.kernels.RBF.Parameters.Values.variance"]], "write() (rbf.parameters method)": [[39, "romcomma.gpr.kernels.RBF.Parameters.write"]], "romcomma.gpr.models": [[40, "module-romcomma.gpr.models"]], "gp (class in romcomma.gpr.models)": [[41, "romcomma.gpr.models.GP"]], "gp.parameters (class in romcomma.gpr.models)": [[41, "romcomma.gpr.models.GP.Parameters"]], "gp.parameters.values (class in romcomma.gpr.models)": [[41, "romcomma.gpr.models.GP.Parameters.Values"]], "kernel_folder_name (gp attribute)": [[41, "romcomma.gpr.models.MOGP.KERNEL_FOLDER_NAME"]], "k_cho (gp property)": [[41, "romcomma.gpr.models.MOGP.K_cho"]], "k_inv_y (gp property)": [[41, "romcomma.gpr.models.MOGP.K_inv_Y"]], "l (gp property)": [[41, "romcomma.gpr.models.MOGP.L"]], "m (gp property)": [[41, "romcomma.gpr.models.MOGP.M"]], "n (gp property)": [[41, "romcomma.gpr.models.MOGP.N"]], "options (gp property)": [[41, "romcomma.gpr.models.MOGP.OPTIONS"]], "x (gp property)": [[41, "romcomma.gpr.models.MOGP.X"]], "y (gp property)": [[41, "romcomma.gpr.models.MOGP.Y"]], "__init__() (gp method)": [[41, "romcomma.gpr.models.MOGP.__init__"]], "broadcast_parameters() (gp method)": [[41, "romcomma.gpr.models.MOGP.broadcast_parameters"]], "broadcast_value() (gp.parameters method)": [[41, "romcomma.gpr.models.MOGP.Parameters.broadcast_value"]], "check_k_inv_y() (gp method)": [[41, "romcomma.gpr.models.MOGP.check_K_inv_Y"]], "count() (gp.parameters.values method)": [[41, "romcomma.gpr.models.MOGP.Parameters.Values.count"]], "fold (gp property)": [[41, "romcomma.gpr.models.MOGP.fold"]], "implementation (gp property)": [[41, "romcomma.gpr.models.MOGP.implementation"]], "index() (gp.parameters.values method)": [[41, "romcomma.gpr.models.MOGP.Parameters.Values.index"]], "kernel (gp.parameters.values attribute)": [[41, "id0"], [41, "romcomma.gpr.models.MOGP.Parameters.Values.kernel"]], "optimize() (gp method)": [[41, "romcomma.gpr.models.MOGP.optimize"]], "params (gp property)": [[41, "romcomma.gpr.models.MOGP.params"]], "predict() (gp method)": [[41, "romcomma.gpr.models.MOGP.predict"]], "read() (gp.parameters method)": [[41, "romcomma.gpr.models.MOGP.Parameters.read"]], "test() (gp method)": [[41, "romcomma.gpr.models.MOGP.test"]], "write() (gp.parameters method)": [[41, "romcomma.gpr.models.MOGP.Parameters.write"]], "gpinterface (class in romcomma.gpr.models)": [[42, "romcomma.gpr.models.GPInterface"]], "gpinterface.parameters (class in romcomma.gpr.models)": [[42, "romcomma.gpr.models.GPInterface.Parameters"]], "gpinterface.parameters.values (class in romcomma.gpr.models)": [[42, "romcomma.gpr.models.GPInterface.Parameters.Values"]], "kernel_folder_name (gpinterface property)": [[42, "romcomma.gpr.models.GPR.KERNEL_FOLDER_NAME"]], "k_cho (gpinterface property)": [[42, "romcomma.gpr.models.GPR.K_cho"]], "k_inv_y (gpinterface property)": [[42, "romcomma.gpr.models.GPR.K_inv_Y"]], "l (gpinterface property)": [[42, "romcomma.gpr.models.GPR.L"]], "m (gpinterface property)": [[42, "romcomma.gpr.models.GPR.M"]], "n (gpinterface property)": [[42, "romcomma.gpr.models.GPR.N"]], "options (gpinterface property)": [[42, "romcomma.gpr.models.GPR.OPTIONS"]], "x (gpinterface property)": [[42, "romcomma.gpr.models.GPR.X"]], "y (gpinterface property)": [[42, "romcomma.gpr.models.GPR.Y"]], "__init__() (gpinterface method)": [[42, "romcomma.gpr.models.GPR.__init__"]], "broadcast_parameters() (gpinterface method)": [[42, "romcomma.gpr.models.GPR.broadcast_parameters"]], "broadcast_value() (gpinterface.parameters method)": [[42, "romcomma.gpr.models.GPR.Parameters.broadcast_value"]], "count() (gpinterface.parameters.values method)": [[42, "romcomma.gpr.models.GPR.Parameters.Values.count"]], "fold (gpinterface property)": [[42, "romcomma.gpr.models.GPR.fold"]], "implementation (gpinterface property)": [[42, "romcomma.gpr.models.GPR.implementation"]], "index() (gpinterface.parameters.values method)": [[42, "romcomma.gpr.models.GPR.Parameters.Values.index"]], "kernel (gpinterface.parameters.values attribute)": [[42, "id0"], [42, "romcomma.gpr.models.GPR.Parameters.Values.kernel"]], "params (gpinterface property)": [[42, "romcomma.gpr.models.GPR.params"]], "predict() (gpinterface method)": [[42, "romcomma.gpr.models.GPR.predict"]], "read() (gpinterface.parameters method)": [[42, "romcomma.gpr.models.GPR.Parameters.read"]], "test() (gpinterface method)": [[42, "romcomma.gpr.models.GPR.test"]], "write() (gpinterface.parameters method)": [[42, "romcomma.gpr.models.GPR.Parameters.write"]], "likelihood (class in romcomma.gpr.models)": [[43, "romcomma.gpr.models.Likelihood"]], "likelihood.parameters (class in romcomma.gpr.models)": [[43, "romcomma.gpr.models.Likelihood.Parameters"]], "likelihood.parameters.values (class in romcomma.gpr.models)": [[43, "romcomma.gpr.models.Likelihood.Parameters.Values"]], "options (likelihood property)": [[43, "romcomma.gpr.models.Likelihood.OPTIONS"]], "__init__() (likelihood method)": [[43, "romcomma.gpr.models.Likelihood.__init__"]], "broadcast_value() (likelihood.parameters method)": [[43, "romcomma.gpr.models.Likelihood.Parameters.broadcast_value"]], "count() (likelihood.parameters.values method)": [[43, "romcomma.gpr.models.Likelihood.Parameters.Values.count"]], "index() (likelihood.parameters.values method)": [[43, "romcomma.gpr.models.Likelihood.Parameters.Values.index"]], "log_marginal (likelihood.parameters.values attribute)": [[43, "id0"], [43, "romcomma.gpr.models.Likelihood.Parameters.Values.log_marginal"]], "optimize() (likelihood method)": [[43, "romcomma.gpr.models.Likelihood.optimize"]], "params (likelihood property)": [[43, "romcomma.gpr.models.Likelihood.params"]], "read() (likelihood.parameters method)": [[43, "romcomma.gpr.models.Likelihood.Parameters.read"]], "variance (likelihood.parameters.values attribute)": [[43, "id1"], [43, "romcomma.gpr.models.Likelihood.Parameters.Values.variance"]], "write() (likelihood.parameters method)": [[43, "romcomma.gpr.models.Likelihood.Parameters.write"]], "romcomma.gsa": [[44, "module-romcomma.gsa"]], "romcomma.gsa.sobol": [[45, "module-romcomma.gsa.sobol"]], "closedindex (class in romcomma.gsa.sobol)": [[46, "romcomma.gsa.sobol.ClosedIndex"]], "options (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.OPTIONS"]], "__init__() (closedindex method)": [[46, "romcomma.gsa.sobol.ClosedSobol.__init__"]], "marginalize() (closedindex method)": [[46, "romcomma.gsa.sobol.ClosedSobol.marginalize"]], "name (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.name"]], "name_scope (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.name_scope"]], "non_trainable_variables (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.non_trainable_variables"]], "submodules (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.submodules"]], "trainable_variables (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.trainable_variables"]], "variables (closedindex property)": [[46, "romcomma.gsa.sobol.ClosedSobol.variables"]], "with_name_scope() (closedindex class method)": [[46, "romcomma.gsa.sobol.ClosedSobol.with_name_scope"]], "closedindexwitherror (class in romcomma.gsa.sobol)": [[47, "romcomma.gsa.sobol.ClosedIndexWithError"]], "closedindexwitherror.rankequation (class in romcomma.gsa.sobol)": [[47, "romcomma.gsa.sobol.ClosedIndexWithError.RankEquation"]], "closedindexwitherror.rankequations (class in romcomma.gsa.sobol)": [[47, "romcomma.gsa.sobol.ClosedIndexWithError.RankEquations"]], "diagonal (closedindexwitherror.rankequations attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquations.DIAGONAL"]], "mixed (closedindexwitherror.rankequations attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquations.MIXED"]], "options (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.OPTIONS"]], "__init__() (closedindexwitherror method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.__init__"]], "count() (closedindexwitherror.rankequation method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.count"]], "count() (closedindexwitherror.rankequations method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquations.count"]], "i (closedindexwitherror.rankequation attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.i"]], "index() (closedindexwitherror.rankequation method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.index"]], "index() (closedindexwitherror.rankequations method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquations.index"]], "j (closedindexwitherror.rankequation attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.j"]], "k (closedindexwitherror.rankequation attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.k"]], "l (closedindexwitherror.rankequation attribute)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.RankEquation.l"]], "marginalize() (closedindexwitherror method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.marginalize"]], "name (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.name"]], "name_scope (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.name_scope"]], "non_trainable_variables (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.non_trainable_variables"]], "submodules (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.submodules"]], "trainable_variables (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.trainable_variables"]], "variables (closedindexwitherror property)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.variables"]], "with_name_scope() (closedindexwitherror class method)": [[47, "romcomma.gsa.sobol.ClosedSobolWithError.with_name_scope"]], "closedindexwithrotation (class in romcomma.gsa.sobol)": [[48, "romcomma.gsa.sobol.ClosedIndexWithRotation"]], "options (closedindexwithrotation attribute)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.OPTIONS"]], "__init__() (closedindexwithrotation method)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.__init__"]], "marginalize() (closedindexwithrotation method)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.marginalize"]], "name (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.name"]], "name_scope (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.name_scope"]], "non_trainable_variables (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.non_trainable_variables"]], "submodules (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.submodules"]], "trainable_variables (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.trainable_variables"]], "variables (closedindexwithrotation property)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.variables"]], "with_name_scope() (closedindexwithrotation class method)": [[48, "romcomma.gsa.sobol.ClosedSobolWithRotation.with_name_scope"]], "gaussian (class in romcomma.gsa.sobol)": [[49, "romcomma.gsa.sobol.Gaussian"]], "__init__() (gaussian method)": [[49, "romcomma.gsa.sobol.GaussianWithout2Pi.__init__"]], "log_pdf() (gaussian static method)": [[49, "romcomma.gsa.sobol.GaussianWithout2Pi.log_pdf"]], "pdf() (gaussian static method)": [[49, "romcomma.gsa.sobol.GaussianWithout2Pi.pdf"]], "det() (in module romcomma.gsa.sobol)": [[50, "romcomma.gsa.sobol.det"]], "mean() (in module romcomma.gsa.sobol)": [[51, "romcomma.gsa.sobol.mean"]], "ms() (in module romcomma.gsa.sobol)": [[52, "romcomma.gsa.sobol.ms"]], "rms() (in module romcomma.gsa.sobol)": [[53, "romcomma.gsa.sobol.rms"]], "sos() (in module romcomma.gsa.sobol)": [[54, "romcomma.gsa.sobol.sos"]], "sym_check() (in module romcomma.gsa.sobol)": [[55, "romcomma.gsa.sobol.sym_check"]], "romcomma.gsa.undertake": [[56, "module-romcomma.gsa.undertake"]], "gsa (class in romcomma.gsa.undertake)": [[57, "romcomma.gsa.undertake.GSA"]], "gsa.kind (class in romcomma.gsa.undertake)": [[57, "romcomma.gsa.undertake.GSA.Kind"]], "gsa.parameters (class in romcomma.gsa.undertake)": [[57, "romcomma.gsa.undertake.GSA.Parameters"]], "gsa.parameters.values (class in romcomma.gsa.undertake)": [[57, "romcomma.gsa.undertake.GSA.Parameters.Values"]], "options (gsa property)": [[57, "romcomma.gsa.undertake.GSA.OPTIONS"]], "s (gsa.parameters.values attribute)": [[57, "id0"], [57, "romcomma.gsa.undertake.GSA.Parameters.Values.S"]], "t (gsa.parameters.values attribute)": [[57, "id1"], [57, "romcomma.gsa.undertake.GSA.Parameters.Values.T"]], "v (gsa.parameters.values attribute)": [[57, "id2"], [57, "romcomma.gsa.undertake.GSA.Parameters.Values.V"]], "w (gsa.parameters.values attribute)": [[57, "id3"], [57, "romcomma.gsa.undertake.GSA.Parameters.Values.W"]], "__init__() (gsa method)": [[57, "romcomma.gsa.undertake.GSA.__init__"]], "broadcast_value() (gsa.parameters method)": [[57, "romcomma.gsa.undertake.GSA.Parameters.broadcast_value"]], "count() (gsa.parameters.values method)": [[57, "romcomma.gsa.undertake.GSA.Parameters.Values.count"]], "index() (gsa.parameters.values method)": [[57, "romcomma.gsa.undertake.GSA.Parameters.Values.index"]], "params (gsa property)": [[57, "romcomma.gsa.undertake.GSA.params"]], "read() (gsa.parameters method)": [[57, "romcomma.gsa.undertake.GSA.Parameters.read"]], "write() (gsa.parameters method)": [[57, "romcomma.gsa.undertake.GSA.Parameters.write"]], "romcomma.rom": [[58, "module-romcomma.rom"]], "romcomma.rom.old": [[59, "module-romcomma.rom.old"]], "romcomma.user": [[60, "module-romcomma.user"]], "romcomma.user.context": [[61, "module-romcomma.user.context"]], "setup() (in module romcomma.user.context)": [[62, "romcomma.user.context.Setup"]], "timer() (in module romcomma.user.context)": [[63, "romcomma.user.context.Timer"]], "romcomma.user.function": [[64, "module-romcomma.user.function"]], "all (in module romcomma.user.function)": [[65, "romcomma.user.function.ALL"]], "ishigami (in module romcomma.user.function)": [[66, "romcomma.user.function.ISHIGAMI"]], "oakley2004 (in module romcomma.user.function)": [[67, "romcomma.user.function.OAKLEY2004"]], "sobol_g (in module romcomma.user.function)": [[68, "romcomma.user.function.SOBOL_G"]], "scalar (class in romcomma.user.function)": [[69, "romcomma.user.function.Scalar"]], "__init__() (scalar method)": [[69, "romcomma.user.function.Scalar.__init__"]], "vector (class in romcomma.user.function)": [[70, "romcomma.user.function.Vector"]], "__init__() (vector method)": [[70, "romcomma.user.function.Vector.__init__"]], "clear() (vector method)": [[70, "romcomma.user.function.Vector.clear"]], "concat() (vector class method)": [[70, "romcomma.user.function.Vector.concat"]], "copy() (vector method)": [[70, "romcomma.user.function.Vector.copy"]], "fromkeys() (vector method)": [[70, "romcomma.user.function.Vector.fromkeys"]], "get() (vector method)": [[70, "romcomma.user.function.Vector.get"]], "items() (vector method)": [[70, "romcomma.user.function.Vector.items"]], "keys() (vector method)": [[70, "romcomma.user.function.Vector.keys"]], "meta (vector property)": [[70, "romcomma.user.function.Vector.meta"]], "pop() (vector method)": [[70, "romcomma.user.function.Vector.pop"]], "popitem() (vector method)": [[70, "romcomma.user.function.Vector.popitem"]], "setdefault() (vector method)": [[70, "romcomma.user.function.Vector.setdefault"]], "subvector() (vector method)": [[70, "romcomma.user.function.Vector.subVector"]], "update() (vector method)": [[70, "romcomma.user.function.Vector.update"]], "values() (vector method)": [[70, "romcomma.user.function.Vector.values"]], "linspace() (in module romcomma.user.function)": [[71, "romcomma.user.function.linspace"]], "romcomma.user.results": [[72, "module-romcomma.user.results"]], "collect (class in romcomma.user.results)": [[73, "romcomma.user.results.Collect"]], "__init__() (collect method)": [[73, "romcomma.user.results.Collect.__init__"]], "csvs (collect attribute)": [[73, "romcomma.user.results.Collect.csvs"]], "folders (collect attribute)": [[73, "romcomma.user.results.Collect.folders"]], "from_folders() (collect method)": [[73, "romcomma.user.results.Collect.from_folders"]], "from_folds() (collect method)": [[73, "romcomma.user.results.Collect.from_folds"]], "ignore_missing (collect attribute)": [[73, "romcomma.user.results.Collect.ignore_missing"]], "write_options (collect attribute)": [[73, "romcomma.user.results.Collect.write_options"]], "copy() (in module romcomma.user.results)": [[74, "romcomma.user.results.copy"]], "romcomma.user.run": [[75, "module-romcomma.user.run"]], "gpr() (in module romcomma.user.run)": [[76, "romcomma.user.run.gpr"]], "gsa() (in module romcomma.user.run)": [[77, "romcomma.user.run.gsa"]], "romcomma.user.sample": [[78, "module-romcomma.user.sample"]], "doe (class in romcomma.user.sample)": [[79, "romcomma.user.sample.DOE"]], "method (doe attribute)": [[79, "romcomma.user.sample.DOE.Method"]], "__init__() (doe method)": [[79, "romcomma.user.sample.DOE.__init__"]], "full_factorial() (doe static method)": [[79, "romcomma.user.sample.DOE.full_factorial"]], "latin_hypercube() (doe static method)": [[79, "romcomma.user.sample.DOE.latin_hypercube"]], "function (class in romcomma.user.sample)": [[80, "romcomma.user.sample.Function"]], "__init__() (function method)": [[80, "romcomma.user.sample.Function.__init__"]], "collection() (function method)": [[80, "romcomma.user.sample.Function.collection"]], "into_k_folds() (function method)": [[80, "romcomma.user.sample.Function.into_K_folds"]], "repo (function property)": [[80, "romcomma.user.sample.Function.repo"]], "rotate_folds() (function method)": [[80, "romcomma.user.sample.Function.rotate_folds"]], "stochastic_rotation() (function method)": [[80, "romcomma.user.sample.Function.stochastic_rotation"]], "un_rotate_folds() (function method)": [[80, "romcomma.user.sample.Function.un_rotate_folds"]], "gaussiannoise (class in romcomma.user.sample)": [[81, "romcomma.user.sample.GaussianNoise"]], "gaussiannoise.variance (class in romcomma.user.sample)": [[81, "romcomma.user.sample.GaussianNoise.Variance"]], "__init__() (gaussiannoise method)": [[81, "romcomma.user.sample.GaussianNoise.__init__"]], "matrix (gaussiannoise.variance property)": [[81, "romcomma.user.sample.GaussianNoise.Variance.matrix"]], "meta (gaussiannoise.variance property)": [[81, "romcomma.user.sample.GaussianNoise.Variance.meta"]], "romcomma.user.scripts": [[82, "module-romcomma.user.scripts"]], "root (in module romcomma.user.scripts)": [[83, "romcomma.user.scripts.BASE_FOLDER"]]}})