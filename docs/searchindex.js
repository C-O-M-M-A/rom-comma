Search.setIndex({"docnames": ["glossary", "index", "pages/package/reference", "pages/package/romcomma.base", "pages/package/romcomma.base.classes", "pages/package/romcomma.base.classes.Data", "pages/package/romcomma.base.classes.Frame", "pages/package/romcomma.base.classes.Model", "pages/package/romcomma.base.classes.Parameters", "pages/package/romcomma.base.definitions", "pages/package/romcomma.base.definitions.EFFECTIVELY_ZERO", "pages/package/romcomma.base.definitions.FLOAT", "pages/package/romcomma.base.definitions.INT", "pages/package/romcomma.base.definitions.NP", "pages/package/romcomma.base.definitions.TF", "pages/package/romcomma.data", "pages/package/romcomma.data.storage", "pages/package/romcomma.data.storage.Fold", "pages/package/romcomma.data.storage.Frame", "pages/package/romcomma.data.storage.Normalization", "pages/package/romcomma.data.storage.Repository", "pages/package/romcomma.gpf", "pages/package/romcomma.gpf.base", "pages/package/romcomma.gpf.base.Variance", "pages/package/romcomma.gpf.kernels", "pages/package/romcomma.gpf.kernels.MOStationary", "pages/package/romcomma.gpf.kernels.RBF", "pages/package/romcomma.gpf.likelihoods", "pages/package/romcomma.gpf.likelihoods.MOGaussian", "pages/package/romcomma.gpf.mean_functions", "pages/package/romcomma.gpf.mean_functions.MOMeanFunction", "pages/package/romcomma.gpf.models", "pages/package/romcomma.gpf.models.MOGPR", "pages/package/romcomma.gpf.tests", "pages/package/romcomma.gpf.tests.covariance", "pages/package/romcomma.gpf.tests.increment", "pages/package/romcomma.gpf.tests.kernel", "pages/package/romcomma.gpf.tests.likelihood", "pages/package/romcomma.gpf.tests.regression_data", "pages/package/romcomma.gpr", "pages/package/romcomma.gpr.kernels", "pages/package/romcomma.gpr.kernels.Kernel", "pages/package/romcomma.gpr.kernels.RBF", "pages/package/romcomma.gpr.models", "pages/package/romcomma.gpr.models.GPR", "pages/package/romcomma.gpr.models.Likelihood", "pages/package/romcomma.gpr.models.MOGP", "pages/package/romcomma.gsa", "pages/package/romcomma.gsa.base", "pages/package/romcomma.gsa.base.Calculator", "pages/package/romcomma.gsa.base.Gaussian", "pages/package/romcomma.gsa.base.GaussianWithout2Pi", "pages/package/romcomma.gsa.base.det", "pages/package/romcomma.gsa.base.mean", "pages/package/romcomma.gsa.base.ms", "pages/package/romcomma.gsa.base.rms", "pages/package/romcomma.gsa.base.sos", "pages/package/romcomma.gsa.base.sym_check", "pages/package/romcomma.gsa.calculators", "pages/package/romcomma.gsa.calculators.ClosedSobol", "pages/package/romcomma.gsa.calculators.ClosedSobolWithError", "pages/package/romcomma.gsa.calculators.ClosedSobolWithRotation", "pages/package/romcomma.gsa.models", "pages/package/romcomma.gsa.models.GSA", "pages/package/romcomma.gsa.models.Sobol", "pages/package/romcomma.rom", "pages/package/romcomma.rom.old", "pages/package/romcomma.run", "pages/package/romcomma.run.context", "pages/package/romcomma.run.context.Environment", "pages/package/romcomma.run.context.Timer", "pages/package/romcomma.run.function", "pages/package/romcomma.run.function.ALL", "pages/package/romcomma.run.function.ISHIGAMI", "pages/package/romcomma.run.function.OAKLEY2004", "pages/package/romcomma.run.function.SOBOL_G", "pages/package/romcomma.run.function.Scalar", "pages/package/romcomma.run.function.Vector", "pages/package/romcomma.run.function.linspace", "pages/package/romcomma.run.results", "pages/package/romcomma.run.results.Collect", "pages/package/romcomma.run.results.copy", "pages/package/romcomma.run.sample", "pages/package/romcomma.run.sample.DOE", "pages/package/romcomma.run.sample.Function", "pages/package/romcomma.run.sample.GaussianNoise", "pages/package/romcomma.run.summarised", "pages/package/romcomma.run.summarised.gpr", "pages/package/romcomma.run.summarised.gsa", "pages/package/romcomma.user", "pages/package/romcomma.user.benchmark_gsa", "pages/package/romcomma.user.benchmark_gsa.BASE_FOLDER", "pages/package/romcomma.user.gpr_from_function", "pages/package/romcomma.user.gpr_from_function.DOE", "pages/package/romcomma.user.gpr_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gpr_from_function.IS_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gpr_from_function.IS_READ", "pages/package/romcomma.user.gpr_from_function.K", "pages/package/romcomma.user.gpr_from_function.Ms", "pages/package/romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gpr_from_function.Ns", "pages/package/romcomma.user.gpr_from_function.READ", "pages/package/romcomma.user.gpr_from_function.ROOT", "pages/package/romcomma.user.gpr_from_function.ROTATIONS", "pages/package/romcomma.user.gsa_from_function", "pages/package/romcomma.user.gsa_from_function.DOE", "pages/package/romcomma.user.gsa_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gsa_from_function.IS_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gsa_from_function.IS_READ", "pages/package/romcomma.user.gsa_from_function.K", "pages/package/romcomma.user.gsa_from_function.KINDS", "pages/package/romcomma.user.gsa_from_function.Ms", "pages/package/romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gsa_from_function.Ns", "pages/package/romcomma.user.gsa_from_function.READ", "pages/package/romcomma.user.gsa_from_function.ROOT", "pages/package/romcomma.user.gsa_from_function.ROTATIONS", "pages/package/romcomma.user.repo_from_csv", "pages/package/romcomma.user.repo_from_csv.ADD_NOISE", "pages/package/romcomma.user.repo_from_csv.CSV", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_csv.K", "pages/package/romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_csv.ROOT", "pages/package/romcomma.user.repo_from_function", "pages/package/romcomma.user.repo_from_function.DOE", "pages/package/romcomma.user.repo_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_function.K", "pages/package/romcomma.user.repo_from_function.Ms", "pages/package/romcomma.user.repo_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_function.Ns", "pages/package/romcomma.user.repo_from_function.READ", "pages/package/romcomma.user.repo_from_function.ROOT", "pages/package/romcomma.user.repo_from_function.ROTATIONS", "pages/package/romcomma.user.toy", "pages/package/romcomma.user.toy.ROOT", "pages/start"], "filenames": ["glossary.rst", "index.rst", "pages\\package\\reference.rst", "pages\\package\\romcomma.base.rst", "pages\\package\\romcomma.base.classes.rst", "pages\\package\\romcomma.base.classes.Data.rst", "pages\\package\\romcomma.base.classes.Frame.rst", "pages\\package\\romcomma.base.classes.Model.rst", "pages\\package\\romcomma.base.classes.Parameters.rst", "pages\\package\\romcomma.base.definitions.rst", "pages\\package\\romcomma.base.definitions.EFFECTIVELY_ZERO.rst", "pages\\package\\romcomma.base.definitions.FLOAT.rst", "pages\\package\\romcomma.base.definitions.INT.rst", "pages\\package\\romcomma.base.definitions.NP.rst", "pages\\package\\romcomma.base.definitions.TF.rst", "pages\\package\\romcomma.data.rst", "pages\\package\\romcomma.data.storage.rst", "pages\\package\\romcomma.data.storage.Fold.rst", "pages\\package\\romcomma.data.storage.Frame.rst", "pages\\package\\romcomma.data.storage.Normalization.rst", "pages\\package\\romcomma.data.storage.Repository.rst", "pages\\package\\romcomma.gpf.rst", "pages\\package\\romcomma.gpf.base.rst", "pages\\package\\romcomma.gpf.base.Variance.rst", "pages\\package\\romcomma.gpf.kernels.rst", "pages\\package\\romcomma.gpf.kernels.MOStationary.rst", "pages\\package\\romcomma.gpf.kernels.RBF.rst", "pages\\package\\romcomma.gpf.likelihoods.rst", "pages\\package\\romcomma.gpf.likelihoods.MOGaussian.rst", "pages\\package\\romcomma.gpf.mean_functions.rst", "pages\\package\\romcomma.gpf.mean_functions.MOMeanFunction.rst", "pages\\package\\romcomma.gpf.models.rst", "pages\\package\\romcomma.gpf.models.MOGPR.rst", "pages\\package\\romcomma.gpf.tests.rst", "pages\\package\\romcomma.gpf.tests.covariance.rst", "pages\\package\\romcomma.gpf.tests.increment.rst", "pages\\package\\romcomma.gpf.tests.kernel.rst", "pages\\package\\romcomma.gpf.tests.likelihood.rst", "pages\\package\\romcomma.gpf.tests.regression_data.rst", "pages\\package\\romcomma.gpr.rst", "pages\\package\\romcomma.gpr.kernels.rst", "pages\\package\\romcomma.gpr.kernels.Kernel.rst", "pages\\package\\romcomma.gpr.kernels.RBF.rst", "pages\\package\\romcomma.gpr.models.rst", "pages\\package\\romcomma.gpr.models.GPR.rst", "pages\\package\\romcomma.gpr.models.Likelihood.rst", "pages\\package\\romcomma.gpr.models.MOGP.rst", "pages\\package\\romcomma.gsa.rst", "pages\\package\\romcomma.gsa.base.rst", "pages\\package\\romcomma.gsa.base.Calculator.rst", "pages\\package\\romcomma.gsa.base.Gaussian.rst", "pages\\package\\romcomma.gsa.base.GaussianWithout2Pi.rst", "pages\\package\\romcomma.gsa.base.det.rst", "pages\\package\\romcomma.gsa.base.mean.rst", "pages\\package\\romcomma.gsa.base.ms.rst", "pages\\package\\romcomma.gsa.base.rms.rst", "pages\\package\\romcomma.gsa.base.sos.rst", "pages\\package\\romcomma.gsa.base.sym_check.rst", "pages\\package\\romcomma.gsa.calculators.rst", "pages\\package\\romcomma.gsa.calculators.ClosedSobol.rst", "pages\\package\\romcomma.gsa.calculators.ClosedSobolWithError.rst", "pages\\package\\romcomma.gsa.calculators.ClosedSobolWithRotation.rst", "pages\\package\\romcomma.gsa.models.rst", "pages\\package\\romcomma.gsa.models.GSA.rst", "pages\\package\\romcomma.gsa.models.Sobol.rst", "pages\\package\\romcomma.rom.rst", "pages\\package\\romcomma.rom.old.rst", "pages\\package\\romcomma.run.rst", "pages\\package\\romcomma.run.context.rst", "pages\\package\\romcomma.run.context.Environment.rst", "pages\\package\\romcomma.run.context.Timer.rst", "pages\\package\\romcomma.run.function.rst", "pages\\package\\romcomma.run.function.ALL.rst", "pages\\package\\romcomma.run.function.ISHIGAMI.rst", "pages\\package\\romcomma.run.function.OAKLEY2004.rst", "pages\\package\\romcomma.run.function.SOBOL_G.rst", "pages\\package\\romcomma.run.function.Scalar.rst", "pages\\package\\romcomma.run.function.Vector.rst", "pages\\package\\romcomma.run.function.linspace.rst", "pages\\package\\romcomma.run.results.rst", "pages\\package\\romcomma.run.results.Collect.rst", "pages\\package\\romcomma.run.results.copy.rst", "pages\\package\\romcomma.run.sample.rst", "pages\\package\\romcomma.run.sample.DOE.rst", "pages\\package\\romcomma.run.sample.Function.rst", "pages\\package\\romcomma.run.sample.GaussianNoise.rst", "pages\\package\\romcomma.run.summarised.rst", "pages\\package\\romcomma.run.summarised.gpr.rst", "pages\\package\\romcomma.run.summarised.gsa.rst", "pages\\package\\romcomma.user.rst", "pages\\package\\romcomma.user.benchmark_gsa.rst", "pages\\package\\romcomma.user.benchmark_gsa.BASE_FOLDER.rst", "pages\\package\\romcomma.user.gpr_from_function.rst", "pages\\package\\romcomma.user.gpr_from_function.DOE.rst", "pages\\package\\romcomma.user.gpr_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gpr_from_function.K.rst", "pages\\package\\romcomma.user.gpr_from_function.Ms.rst", "pages\\package\\romcomma.user.gpr_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gpr_from_function.Ns.rst", "pages\\package\\romcomma.user.gpr_from_function.READ.rst", "pages\\package\\romcomma.user.gpr_from_function.ROOT.rst", "pages\\package\\romcomma.user.gpr_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.rst", "pages\\package\\romcomma.user.gsa_from_function.DOE.rst", "pages\\package\\romcomma.user.gsa_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gsa_from_function.K.rst", "pages\\package\\romcomma.user.gsa_from_function.KINDS.rst", "pages\\package\\romcomma.user.gsa_from_function.Ms.rst", "pages\\package\\romcomma.user.gsa_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gsa_from_function.Ns.rst", "pages\\package\\romcomma.user.gsa_from_function.READ.rst", "pages\\package\\romcomma.user.gsa_from_function.ROOT.rst", "pages\\package\\romcomma.user.gsa_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.repo_from_csv.rst", "pages\\package\\romcomma.user.repo_from_csv.ADD_NOISE.rst", "pages\\package\\romcomma.user.repo_from_csv.CSV.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_csv.K.rst", "pages\\package\\romcomma.user.repo_from_csv.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_csv.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.rst", "pages\\package\\romcomma.user.repo_from_function.DOE.rst", "pages\\package\\romcomma.user.repo_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_function.K.rst", "pages\\package\\romcomma.user.repo_from_function.Ms.rst", "pages\\package\\romcomma.user.repo_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_function.Ns.rst", "pages\\package\\romcomma.user.repo_from_function.READ.rst", "pages\\package\\romcomma.user.repo_from_function.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.toy.rst", "pages\\package\\romcomma.user.toy.ROOT.rst", "pages\\start.rst"], "titles": ["Glossary", "rom-comma User Guide", "Module Reference", "romcomma.base", "romcomma.base.classes", "romcomma.base.classes.Data", "romcomma.base.classes.Frame", "romcomma.base.classes.Model", "romcomma.base.classes.Data", "romcomma.base.definitions", "romcomma.base.definitions.EFFECTIVELY_ZERO", "romcomma.base.definitions.FLOAT", "romcomma.base.definitions.INT", "romcomma.base.definitions.NP", "romcomma.base.definitions.TF", "romcomma.data", "romcomma.data.storage", "romcomma.data.storage.Fold", "romcomma.data.storage.Frame", "romcomma.data.storage.Normalization", "romcomma.data.storage.Repository", "romcomma.gpf", "romcomma.gpf.base", "romcomma.gpf.base.Variance", "romcomma.gpf.kernels", "romcomma.gpf.kernels.MOStationary", "romcomma.gpf.kernels.RBF", "romcomma.gpf.likelihoods", "romcomma.gpf.likelihoods.MOGaussian", "romcomma.gpf.mean_functions", "romcomma.gpf.mean_functions.MOMeanFunction", "romcomma.gpf.models", "romcomma.gpf.models.MOGPR", "romcomma.gpf.tests", "romcomma.gpf.tests.covariance", "romcomma.gpf.tests.increment", "romcomma.gpf.tests.kernel", "romcomma.gpf.tests.likelihood", "romcomma.gpf.tests.regression_data", "romcomma.gpr", "romcomma.gpr.kernels", "romcomma.gpr.kernels.Kernel", "romcomma.gpr.kernels.RBF", "romcomma.gpr.models", "romcomma.gpr.models.GPR", "romcomma.gpr.models.Likelihood", "romcomma.gpr.models.MOGP", "romcomma.gsa", "romcomma.gsa.base", "romcomma.gsa.base.Calculator", "romcomma.gsa.base.Gaussian", "romcomma.gsa.base.Gaussian", "romcomma.gsa.base.det", "romcomma.gsa.base.mean", "romcomma.gsa.base.ms", "romcomma.gsa.base.rms", "romcomma.gsa.base.sos", "romcomma.gsa.base.sym_check", "romcomma.gsa.calculators", "romcomma.gsa.calculators.ClosedSobol", "romcomma.gsa.calculators.ClosedSobolWithError", "romcomma.gsa.calculators.ClosedSobolWithRotation", "romcomma.gsa.models", "romcomma.gsa.models.GSA", "romcomma.gsa.models.Sobol", "romcomma.rom", "romcomma.rom.old", "romcomma.run", "romcomma.run.context", "romcomma.run.context.Setup", "romcomma.run.context.Timer", "romcomma.run.function", "romcomma.run.function.ALL", "romcomma.run.function.ISHIGAMI", "romcomma.run.function.OAKLEY2004", "romcomma.run.function.SOBOL_G", "romcomma.run.function.Scalar", "romcomma.run.function.Vector", "romcomma.run.function.linspace", "romcomma.run.results", "romcomma.run.results.Collect", "romcomma.run.results.copy", "romcomma.run.sample", "romcomma.run.sample.DOE", "romcomma.run.sample.Function", "romcomma.run.sample.GaussianNoise", "romcomma.run.summarised", "romcomma.run.summarised.gpr", "romcomma.run.summarised.gsa", "romcomma.user", "romcomma.user.benchmark_gsa", "romcomma.user.benchmark_gsa.BASE_FOLDER", "romcomma.user.gpr_from_function", "romcomma.user.gpr_from_function.DOE", "romcomma.user.gpr_from_function.FUNCTION_VECTOR", "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gpr_from_function.IS_COVARIANT", "romcomma.user.gpr_from_function.IS_ISOTROPIC", "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gpr_from_function.IS_READ", "romcomma.user.gpr_from_function.K", "romcomma.user.gpr_from_function.Ms", "romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "romcomma.user.gpr_from_function.Ns", "romcomma.user.gpr_from_function.READ", "romcomma.user.gpr_from_function.ROOT", "romcomma.user.gpr_from_function.ROTATIONS", "romcomma.user.gsa_from_function", "romcomma.user.gsa_from_function.DOE", "romcomma.user.gsa_from_function.FUNCTION_VECTOR", "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gsa_from_function.IS_COVARIANT", "romcomma.user.gsa_from_function.IS_ISOTROPIC", "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gsa_from_function.IS_READ", "romcomma.user.gsa_from_function.K", "romcomma.user.gsa_from_function.KINDS", "romcomma.user.gsa_from_function.Ms", "romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "romcomma.user.gsa_from_function.Ns", "romcomma.user.gsa_from_function.READ", "romcomma.user.gsa_from_function.ROOT", "romcomma.user.gsa_from_function.ROTATIONS", "romcomma.user.repo_from_csv", "romcomma.user.repo_from_csv.ADD_NOISE", "romcomma.user.repo_from_csv.CSV", "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_csv.K", "romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "romcomma.user.repo_from_csv.ROOT", "romcomma.user.repo_from_function", "romcomma.user.repo_from_function.DOE", "romcomma.user.repo_from_function.FUNCTION_VECTOR", "romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_function.K", "romcomma.user.repo_from_function.Ms", "romcomma.user.repo_from_function.NOISE_MAGNITUDES", "romcomma.user.repo_from_function.Ns", "romcomma.user.repo_from_function.READ", "romcomma.user.repo_from_function.ROOT", "romcomma.user.repo_from_function.ROTATIONS", "romcomma.user.toy", "romcomma.user.toy.ROOT", "Getting Started"], "terms": {"reduc": [1, 17, 63, 64, 88], "order": [0, 1, 63, 64, 77, 80, 147], "model": [1, 4, 5, 8, 14, 41, 42, 60, 88, 100, 116, 147], "via": [1, 59, 60, 61, 147], "global": [0, 1, 20, 47, 147], "sensit": [0, 1, 47, 147], "analysi": [0, 1, 47, 147], "us": [0, 1, 7, 14, 17, 18, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 69, 84, 85, 87, 147], "gaussian": [0, 1, 21, 28, 29, 32, 39, 43, 44, 46, 63, 64, 85, 98, 114, 125, 126, 128, 136, 147], "process": [0, 1, 21, 28, 32, 39, 43, 44, 46, 63, 64, 79, 147], "regress": [0, 1, 21, 32, 39, 43, 147], "robert": 1, "A": [0, 1, 5, 7, 8, 14, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 46, 59, 60, 61, 63, 76, 77, 78, 80, 81, 84, 87, 88, 118, 147], "milton": [0, 1, 147], "The": [1, 2, 5, 6, 7, 8, 11, 12, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 67, 69, 70, 72, 76, 77, 78, 80, 81, 83, 84, 87, 88, 91, 93, 94, 101, 102, 103, 104, 106, 109, 110, 117, 119, 120, 121, 123, 127, 130, 131, 132, 134, 135, 138, 139, 140, 141, 143, 146, 147], "univers": 1, "sheffield": 1, "thi": [0, 1, 5, 6, 7, 8, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 69, 70, 76, 77, 84, 85, 87, 88, 147], "document": [1, 91, 106, 123, 127, 132, 143, 146, 147], "i": [0, 1, 5, 6, 7, 8, 14, 17, 18, 19, 20, 23, 25, 26, 28, 29, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 69, 70, 77, 80, 81, 83, 84, 87, 88, 93, 96, 97, 98, 99, 103, 109, 112, 113, 114, 115, 120, 128, 129, 131, 134, 136, 137, 140, 147], "current": [1, 14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 147], "under": [1, 66, 84, 147], "construct": [1, 6, 14, 23, 41, 42, 59, 60, 61, 63, 64, 66, 77, 80, 84, 85, 87], "get": [0, 1, 14, 77], "start": [0, 1, 5, 7, 8, 14, 60, 63, 78], "instal": 1, "packag": [0, 33, 147], "structur": 16, "refer": [0, 1, 14, 46, 147], "romcomma": [1, 147], "base": [0, 1, 17, 18, 19, 20, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85, 91, 147], "data": [1, 6, 7, 14, 28, 30, 32, 41, 42, 44, 45, 46, 63, 64, 76, 77, 84, 85, 87, 91, 106, 123, 127, 132, 143, 146, 147], "gpf": [1, 147], "gpr": [0, 1, 32, 59, 60, 61, 63, 64, 86, 95, 96, 97, 100, 111, 112, 113, 116, 147], "gsa": [0, 1, 86, 118, 147], "pd": [0, 2, 6, 17, 18, 19, 20, 80], "alias": [], "panda": [0, 2, 6, 14, 17, 18, 20], "code": [28, 41], "np": [0, 2, 6, 7, 14, 41, 42, 44, 45, 46, 72, 73, 74, 75, 76, 78, 85, 94, 110, 135], "numpi": [0, 2, 13, 14, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61], "tf": [0, 2, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 69], "tensorflow": [0, 2, 14, 23, 28, 32], "gf": [0, 2, 28], "gpflow": [0, 2, 21, 22, 24, 27, 28, 30, 31, 32, 44, 46, 69], "ddev": [], "standard": [0, 2, 63, 64, 72, 73, 94, 110, 135], "deviat": [0, 2], "index": [0, 1, 5, 6, 7, 8, 14, 17, 18, 20, 58, 60, 63, 64, 80, 84, 88, 147], "modul": [0, 1, 3, 9, 15, 21, 23, 25, 26, 28, 30, 32, 39, 47, 59, 60, 61, 65, 67, 71, 89, 90, 92, 108, 125, 133, 145], "search": 1, "page": [1, 147], "rom": [0, 2, 86, 147], "comma": [0, 2, 147], "librari": [2, 3, 14, 21], "class": [3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 71, 76, 77, 79, 80, 82, 83, 84, 85, 147], "definit": [3, 23, 25, 26, 28, 147], "underpin": [3, 48, 63, 64], "entir": [3, 63, 64], "contain": [14, 17, 20, 22, 24, 27, 31, 32, 33, 40, 43, 58, 77, 80, 81, 84, 87, 88], "paramet": [5, 6, 7, 8, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 35, 41, 42, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 93, 94, 109, 110, 134, 135], "folder": [0, 2, 5, 7, 8, 17, 20, 41, 42, 44, 45, 46, 63, 64, 80, 81, 84, 87, 88, 91, 106, 123, 132, 143, 146, 147], "read_paramet": [7, 41, 42, 45], "fals": [7, 17, 20, 25, 26, 32, 41, 42, 45, 63, 64, 80, 83, 84, 85, 87, 88, 93, 95, 98, 99, 105, 109, 111, 114, 115, 126, 128, 129, 134, 136, 137, 142], "kwarg": [5, 6, 7, 8, 17, 18, 20, 28, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 69, 76, 77, 80, 84, 87, 88], "sourc": [5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 69, 70, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 93, 109, 134], "abc": [5, 7, 8, 49, 50, 51], "abstract": [5, 7, 8, 25, 41, 44], "ani": [5, 6, 7, 8, 14, 18, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 80, 83, 84, 85, 88, 147], "implement": [7, 14, 25, 32, 41, 42, 43, 44, 46, 63, 69, 87, 147], "gener": [0, 7, 17, 18, 20, 32, 41, 42, 46, 63, 64, 79, 84, 85, 94, 110, 135, 147], "file": [6, 7, 17, 18, 20, 41, 42, 44, 45, 46, 80, 84, 88, 100, 116, 125, 127], "storag": [7, 15, 77, 85, 147], "handl": [7, 17], "latter": 7, "dealt": 7, "each": [7, 14, 17, 20, 30, 32, 44, 46, 50, 51, 77, 83, 84, 87, 88, 93, 109, 134], "subclass": [7, 32, 45], "overrid": [7, 59, 60, 61, 63, 64], "valu": [5, 7, 8, 14, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 77, 78, 80, 84], "its": [0, 7, 14, 23, 25, 26, 28, 30, 32, 41, 42, 59, 60, 61, 83, 87, 93, 109, 134, 147], "own": [7, 23, 25, 26, 28, 30, 32, 59, 60, 61], "type": [5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 20, 23, 25, 26, 28, 32, 35, 41, 42, 44, 45, 46, 50, 51, 57, 59, 60, 61, 63, 64, 72, 73, 74, 75, 77, 78, 80, 84, 87, 88, 94, 110, 135], "namedtupl": [5, 7, 8, 41, 42, 44, 45, 46, 60, 63, 64], "defin": [7, 14, 17, 18, 20, 25, 26, 30, 32, 41, 42], "set": [5, 7, 8, 14, 41, 42, 44, 45, 46, 64, 69, 77], "take": [7, 50, 51], "matric": [7, 25, 26], "also": [7, 14, 25, 26, 30, 32], "mai": [7, 14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 147], "includ": [7, 14, 17, 20, 23, 25, 26, 28, 30, 32, 44, 46, 50, 51, 59, 60, 61, 77, 84, 147], "an": [0, 5, 7, 8, 14, 17, 18, 20, 23, 25, 26, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 63, 64, 77, 80, 83, 84, 85, 87, 93, 105, 109, 122, 134, 142, 147], "optim": [7, 14, 28, 32, 41, 42, 44, 45, 46, 87], "method": [0, 5, 6, 7, 8, 13, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 49, 50, 51, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85, 147], "option": [6, 7, 14, 17, 18, 19, 20, 41, 44, 45, 46, 59, 60, 61, 63, 64, 80, 84, 88, 92, 108, 125, 133], "store": [5, 6, 7, 8, 17, 41, 42, 44, 45, 46, 58, 63, 64], "json": [7, 17, 20], "which": [7, 14, 18, 19, 23, 25, 26, 28, 30, 32, 41, 42, 44, 46, 59, 60, 61, 63, 76, 77, 78, 81, 83, 84, 87, 88, 93, 103, 109, 120, 131, 134, 140, 147], "default": [5, 7, 8, 14, 17, 18, 20, 25, 26, 28, 32, 41, 42, 44, 45, 46, 59, 60, 63, 64, 69, 70, 77, 83, 84, 87, 88, 93, 109, 134], "cl": 7, "pathlik": [], "bool": [6, 7, 17, 18, 20, 25, 26, 32, 41, 42, 44, 45, 46, 50, 51, 63, 64, 69, 70, 80, 83, 84, 85, 87, 88, 93, 95, 96, 97, 98, 99, 100, 105, 109, 111, 112, 113, 114, 115, 116, 122, 126, 128, 129, 134, 136, 137, 142], "matrix": [5, 7, 8, 13, 14, 17, 20, 23, 25, 26, 28, 32, 41, 42, 44, 45, 46, 50, 51, 63, 64, 72, 73, 74, 75, 76, 83, 84, 85, 93, 94, 109, 110, 134, 135], "__init__": [5, 6, 7, 8, 13, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 49, 50, 51, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85], "constructor": [5, 7, 8, 25, 26, 28, 45, 63, 64], "call": [5, 6, 7, 8, 14, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 76, 147], "all": [7, 14, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 45, 59, 60, 61, 63, 64, 77, 84, 88, 91, 106, 123, 127, 132, 143, 146], "matter": [7, 41, 42, 45], "prioriti": [7, 41, 42, 45], "str": [5, 6, 7, 8, 17, 18, 20, 23, 41, 42, 44, 45, 46, 54, 55, 56, 59, 60, 61, 63, 64, 69, 70, 77, 80, 81, 84, 85, 87, 88], "path": [5, 6, 7, 8, 17, 18, 20, 41, 42, 44, 45, 46, 63, 64, 80, 81, 84, 88, 106, 123, 127, 132, 143, 146], "locat": [0, 7, 17, 20, 32, 41, 42, 44, 45, 46, 83, 93, 109, 134, 147], "If": [5, 6, 7, 8, 14, 17, 18, 19, 25, 26, 32, 41, 42, 44, 45, 46, 50, 51, 60, 63, 64, 69, 77, 81, 84, 87, 88], "true": [7, 14, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 70, 78, 83, 87, 93, 109, 122, 134], "ar": [5, 7, 8, 14, 17, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 77, 87, 88, 147], "read": [5, 6, 7, 8, 17, 18, 20, 41, 42, 44, 45, 46, 63, 64, 87, 100, 116, 126, 127], "from": [5, 6, 7, 8, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 71, 77, 80, 85, 87, 100, 116, 125, 147], "otherwis": [6, 7, 18, 25, 26, 41, 42, 44, 45, 46, 69, 77, 87], "ndarrai": [5, 6, 7, 8, 13, 17, 25, 26, 28, 32, 41, 42, 44, 45, 46, 63, 76, 78, 83, 84, 85, 87], "field": [5, 7, 8, 41, 42, 44, 45, 46, 60, 63, 64], "replac": [7, 41, 42, 44, 45, 46, 87], "after": [7, 23, 41, 42, 45, 107, 124, 144], "attribut": [5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 50, 51, 59, 60, 61, 63, 64, 71, 76, 77, 80, 83, 84, 85, 90, 92, 108, 125, 133, 145], "none": [6, 14, 17, 19, 20, 25, 26, 32, 41, 42, 44, 46, 63, 77, 80, 84, 87, 88, 96, 97, 100, 107, 112, 113, 116, 124], "placehold": [7, 14, 63], "must": [5, 7, 8, 14, 20, 32, 41, 42, 44, 45, 46, 63, 64], "overridden": [5, 7, 8, 63], "notimpl": [5, 7, 8, 63], "arrai": [5, 6, 7, 8, 13, 14, 41, 42, 63, 144], "Not": [], "dtype": [5, 6, 7, 8, 11, 12, 14, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 63], "u15": [], "alia": [13, 14, 41, 42, 44, 45, 46, 60, 64, 83], "number": [5, 7, 8, 14, 17, 20, 28, 30, 32, 41, 42, 44, 46, 50, 51, 60, 63, 76, 83, 84, 85, 93, 101, 102, 104, 109, 117, 119, 121, 130, 134, 138, 139, 141], "0": [5, 7, 8, 14, 17, 19, 23, 25, 26, 28, 30, 32, 46, 50, 51, 59, 60, 61, 63, 64, 78, 85, 88, 103, 120, 127, 131, 140, 143, 144, 146], "count": [5, 7, 8, 50, 51, 60, 63], "return": [5, 6, 7, 8, 11, 12, 14, 17, 19, 20, 23, 25, 26, 28, 30, 32, 35, 41, 42, 44, 45, 46, 50, 51, 57, 59, 60, 61, 63, 64, 72, 73, 74, 75, 77, 78, 83, 84, 87, 88, 93, 94, 109, 110, 134, 135], "occurr": [5, 7, 8, 60, 63], "stop": [5, 7, 8, 60, 63, 78], "9223372036854775807": [5, 7, 8, 60, 63], "first": [0, 5, 7, 8, 23, 25, 26, 28, 30, 32, 59, 60, 61, 63, 64, 77, 147], "rais": [5, 7, 8, 14, 17, 20, 41, 42, 44, 46, 60, 63, 77, 80, 81, 84, 87, 88], "valueerror": [5, 7, 8, 14, 60, 63], "present": [5, 7, 8, 60, 63, 77], "broadcast_valu": [], "model_nam": [], "target_shap": [], "is_diagon": [], "broadcast": [23, 28, 30, 32, 41, 42, 44, 46, 50, 51, 87, 88], "ordin": [5, 7, 8, 32, 41, 42, 44, 45, 46, 50, 51, 63, 64, 83, 93, 109, 134], "onli": [14, 17, 20, 23, 25, 26, 28, 46, 88], "error": [14, 41, 42, 44, 46, 60, 63, 64, 88], "report": 70, "name": [14, 23, 25, 26, 28, 30, 32, 44, 46, 59, 60, 61, 69, 70, 77, 80, 84, 87, 88], "whose": [23, 25, 26, 28, 30, 32, 59, 60, 61, 63, 64], "we": [14, 23, 32, 147], "tupl": [14, 17, 20, 23, 25, 26, 28, 32, 41, 42, 44, 46, 77, 98, 99, 102, 103, 104, 114, 115, 119, 120, 121, 128, 129, 131, 136, 137, 139, 140, 141], "int": [6, 17, 20, 23, 28, 30, 32, 41, 42, 44, 46, 50, 51, 57, 59, 60, 61, 63, 64, 76, 78, 83, 84, 85, 88, 93, 101, 102, 104, 109, 117, 119, 121, 130, 134, 138, 139, 141], "shape": [14, 23, 25, 26, 28, 30, 32, 41, 42, 44, 46, 50, 51, 59, 60, 61, 78], "whether": [17, 20, 25, 26, 41, 42, 44, 46, 63, 64, 70, 80, 83, 84, 87, 88, 93, 95, 96, 97, 98, 99, 100, 105, 109, 111, 112, 113, 114, 115, 116, 122, 126, 128, 129, 134, 136, 137, 142], "zero": [19, 30, 32, 46, 85], "off": [], "diagon": [23, 25, 26, 28, 32, 41, 42, 50, 51, 60, 88], "element": [14, 28], "squar": [0, 26, 41, 42, 147], "self": [5, 6, 7, 8, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 76, 77, 80, 84, 85], "chain": [5, 6, 7, 8, 17, 20, 41, 42, 44, 45, 46, 63, 64], "indexerror": [17, 20, 41, 42, 44, 46, 84], "imposs": [], "csv": [6, 17, 18, 20, 80, 84, 125], "assertionerror": [], "write": [6, 14, 18, 80], "chang": [6, 14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "unless": [17, 20, 63, 64, 84, 88], "properti": [7, 14, 17, 18, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 64, 77, 84, 85], "dict": [6, 7, 17, 18, 20, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 77, 80, 84, 85, 87, 88], "param": [41, 42, 50, 51, 59, 60, 61, 63, 64], "shorthand": [], "save": [], "_paramet": [], "essenti": [5, 8, 41], "back": [6, 17, 18, 44, 46], "note": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 69], "lazi": [], "explicitli": 14, "design": [17, 20, 44, 46, 82, 84], "most": [5, 8, 14, 147], "simpl": [5, 8], "wrapper": [5, 8, 30], "annoyingli": [5, 8], "underscor": [5, 8], "shouldn": [], "t": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "need": [14, 32, 63, 64, 88], "doe": [14, 32, 77, 82, 84, 94, 110, 135], "record": [5, 7, 8, 17, 20, 41, 42, 44, 45, 46, 63, 64], "kei": [5, 7, 8, 14, 41, 42, 44, 45, 46, 63, 64, 77, 80], "initi": [5, 7, 8, 14, 17, 18, 19, 41, 42, 44, 45, 46, 63, 64, 85], "pair": [5, 7, 8, 28, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 77], "precis": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "It": [14, 32], "caller": 14, "": [0, 14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 77, 147], "respons": [44, 46], "ensur": 14, "everi": [17, 20], "miss": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64, 80], "receiv": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "so": [5, 7, 8, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 88], "import": [], "constant": [9, 14, 28], "hint": [], "function": [0, 9, 14, 26, 28, 29, 30, 32, 33, 39, 47, 48, 50, 51, 68, 79, 82, 83, 86, 92, 94, 103, 107, 108, 110, 120, 124, 131, 133, 135, 140, 144, 147], "object": [6, 13, 14, 18, 19, 20, 28, 30, 32, 41, 59, 60, 61, 63, 64, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 94, 110, 135], "extend": [0, 13, 14, 28, 147], "tensor": [5, 7, 8, 13, 14, 23, 25, 26, 28, 30, 32, 35, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63], "tensor1": [13, 14], "tensor2": [13, 14], "vector": [0, 13, 14, 44, 46, 50, 51, 84, 94, 107, 110, 124, 135, 144, 147], "covector": [13, 14], "tensor3": [13, 14], "tensor4": [13, 14], "tensor5": [13, 14], "tensor6": [13, 14], "tensor7": [13, 14], "tensor8": [13, 14], "op": 14, "value_index": 14, "nativeobject": 14, "repres": [0, 14, 28, 147], "multidimension": 14, "singl": [14, 32, 41, 42, 58, 63, 64, 88], "known": [14, 30], "when": [10, 14, 80, 87, 88], "program": 14, "main": [0, 14, 147], "manipul": 14, "pass": [6, 14, 18, 23, 25, 26, 28, 30, 32, 46, 59, 60, 61, 63, 64, 69, 80, 84, 87], "around": 14, "ha": [0, 14, 19, 25, 26, 32, 77, 84, 88, 107, 124, 144, 147], "follow": [14, 19, 23, 25, 26, 28, 30, 32, 46, 59, 60, 61, 77, 88, 147], "float32": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 69], "int32": 14, "string": [14, 41, 42, 69, 70], "exampl": [14, 73, 74, 75, 89, 90], "support": [14, 21, 32], "eager": [14, 69], "execut": 14, "graph": [14, 32], "In": [0, 14, 77, 147], "oper": [14, 69, 70], "evalu": [14, 25, 28], "immedi": 14, "comput": [14, 28, 32, 50, 51], "later": 14, "below": [14, 147], "multipl": [14, 32], "result": [14, 23, 25, 26, 28, 30, 32, 44, 46, 59, 60, 61, 63, 64, 84, 87, 88, 147], "calcul": [14, 19, 32, 50, 51, 63, 64, 88, 147], "some": [14, 32, 147], "c": [0, 14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 69, 91, 106, 123, 127, 132, 143, 146, 147], "1": [14, 17, 19, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 46, 50, 51, 59, 60, 61, 63, 64, 78, 84, 88, 91, 118, 143], "2": [14, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 77, 88, 101, 106, 117, 118, 123, 127, 138, 143], "3": [14, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 73, 74, 75, 88, 91, 106, 118, 123], "4": 14, "d": [14, 25, 26, 32, 77], "e": [14, 25, 28, 29, 32, 44, 46, 77, 80, 88, 147], "matmul": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "print": [14, 69, 70], "7": [14, 74, 127, 139], "dure": [14, 25, 26, 28], "you": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61, 63, 64, 88], "discov": 14, "your": [14, 147], "actual": 14, "eagertensor": 14, "intern": [14, 50, 51], "detail": [0, 14, 17, 18, 20, 147], "give": [14, 17, 20, 30, 44, 46, 50, 51, 84], "access": 14, "common": 14, "wai": 14, "rank": [0, 14, 32, 50, 51, 147], "size": [14, 32], "dimens": [14, 23, 25, 26, 28, 32, 41, 42, 44, 46, 50, 51, 76, 83, 84, 93, 109, 134], "alwai": 14, "fulli": 14, "partial": 14, "produc": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "input": [0, 14, 17, 20, 25, 26, 32, 41, 42, 44, 46, 76, 83, 84, 92, 93, 94, 102, 107, 108, 109, 110, 119, 124, 133, 134, 135, 139, 144, 147], "case": [14, 77], "possibl": 14, "find": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "time": [14, 69, 70], "special": 14, "avail": [14, 87], "see": [6, 14, 32, 46], "variabl": [14, 17, 23, 25, 26, 28, 30, 32, 59, 60, 61], "spars": [14, 32], "sparsetensor": 14, "raggedtensor": 14, "caution": 14, "datafram": [5, 6, 7, 8, 14, 17, 18, 19, 20, 63, 125], "underli": [14, 63, 64], "buffer": 14, "re": [14, 32], "python": [0, 14, 147], "b": [14, 23, 25, 26, 28, 30, 32, 46, 59, 60, 61], "int64": 14, "subject": 14, "user": [14, 62, 67, 84, 86, 87, 147], "should": [14, 25, 32, 46, 50, 51], "reli": 14, "behaviour": [14, 25, 26], "For": [14, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 63, 64, 88], "more": [14, 32, 77], "guid": [14, 147], "http": [0, 14, 17, 18, 20, 32, 46, 71, 147], "org": [14, 17, 18, 20, 46], "consum": 14, "list": [14, 17, 20, 23, 25, 26, 28, 30, 32, 57, 59, 60, 61, 87, 88, 118, 147], "devic": [14, 69, 80], "eval": 14, "feed_dict": 14, "session": 14, "compat": 14, "v1": 14, "within": [14, 17, 20, 46, 81, 83, 93, 109, 134], "do": [14, 44, 46, 63, 64, 118], "preced": 14, "n": [14, 17, 19, 20, 23, 25, 26, 28, 32, 44, 46, 50, 51, 83, 84, 85, 93, 109, 127, 134], "befor": [14, 17, 20, 50, 51, 84], "invok": 14, "have": [5, 7, 8, 14, 18, 25, 26, 28, 63, 87, 88], "been": [0, 14, 19, 28, 87, 88, 107, 124, 144, 147], "launch": 14, "either": [14, 77], "specifi": [14, 20, 25, 26, 41, 42, 44, 46, 63, 64, 77, 87], "dictionari": [14, 59, 77], "map": 14, "feed": 14, "run": [1, 11, 12, 14, 94, 110, 135, 147], "descript": 14, "valid": 14, "correspond": [14, 25, 77], "experimental_ref": 14, "deprec": 14, "remov": [14, 77], "futur": [14, 32], "version": [14, 28, 42, 78], "instruct": 14, "updat": [14, 17, 18, 20, 77, 88], "ref": 14, "instead": [14, 44, 46, 84], "get_shap": 14, "tensorshap": 14, "5": [14, 102, 119, 130], "6": 14, "equival": 14, "build": 14, "kera": 14, "unknown": 14, "10": 14, "batch": [14, 32, 50, 51], "infer": 14, "regist": 14, "determin": [14, 23, 25, 26, 28, 30, 32, 58, 59, 60, 61], "without": [6, 14, 58], "kernel": [14, 32, 44, 46, 87, 88, 97, 113, 147], "convert": [14, 41, 42], "debug": 14, "provid": [14, 77, 85, 87], "earli": 14, "trace": 14, "being": [14, 63, 64, 69, 70, 88, 126], "concret": 14, "www": 14, "concrete_funct": 14, "def": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "my_matmul": 14, "propag": 14, "extent": 14, "f": [14, 28, 30, 32, 44, 46, 77, 88], "get_concrete_funct": 14, "tensorspec": 14, "fail": [14, 95, 111], "missmatch": 14, "can": [5, 7, 8, 14, 17, 25, 26, 28, 32, 63], "detect": 14, "cf": 14, "traceback": 14, "recent": 14, "last": [14, 25, 28, 77], "equal": [10, 14, 103, 120, 131, 140], "addit": 14, "inform": 14, "about": 14, "ensure_shap": 14, "set_shap": 14, "augment": 14, "my_fun": 14, "output": [0, 14, 17, 20, 21, 25, 26, 32, 41, 42, 44, 46, 50, 51, 87, 88, 98, 103, 114, 120, 125, 126, 128, 131, 136, 140, 147], "hashabl": 14, "primari": [14, 67], "api": [14, 71], "put": 14, "__hash__": 14, "longer": 14, "except": [14, 80, 87, 88, 95, 111], "x": [14, 17, 19, 20, 23, 25, 26, 28, 30, 32, 35, 41, 42, 44, 46, 59, 60, 61, 72, 73, 74, 75, 76, 77, 94, 110, 135], "y": [14, 17, 19, 20, 28, 32, 41, 42, 44, 46], "z": [14, 44, 46, 50, 51], "tensor_set": 14, "typeerror": [14, 17, 20], "unhash": 14, "tensor_dict": 14, "five": 14, "ten": 14, "deref": 14, "origin": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "recommend": 14, "becaus": 14, "better": 14, "check": [14, 25, 26, 28, 44, 46], "creat": [14, 17, 18, 20, 63, 64, 77, 84, 92, 105, 108, 122, 125, 133, 142], "guarante": 14, "compil": [14, 32], "With": 14, "assert": [14, 60], "here": [14, 32], "match": [14, 50, 51, 85], "new": [14, 17, 20, 32, 41, 42, 77, 101, 105, 117, 122, 130, 138, 142], "allow": 14, "axi": [14, 25, 28], "incompat": 14, "suppli": [14, 50, 51, 84], "merg": 14, "given": [14, 28, 32, 77], "merge_with": 14, "224": 14, "cannot": 14, "alon": 14, "know": 14, "imag": 14, "dataset": [0, 14, 20, 147], "28": 14, "load_imag": 14, "filenam": 14, "raw": 14, "io": [14, 71], "read_fil": 14, "decode_png": 14, "channel": 14, "final": [14, 28, 59, 60, 61, 63, 64], "similarli": 14, "parse_tensor": 14, "could": 14, "even": [14, 147], "serial": 14, "2d": 14, "my_pars": 14, "string_tensor": 14, "out_typ": 14, "concrete_pars": 14, "make": [14, 17, 20, 147], "sure": [14, 63, 64, 88], "work": [14, 28], "ones": [14, 23, 25, 26, 28, 30, 32, 59, 60, 61], "serialize_tensor": 14, "t2": 14, "appli": [14, 17, 19, 76, 84, 94, 98, 107, 110, 114, 124, 128, 135, 136, 144, 147], "exist": [5, 7, 8, 14, 17, 41, 42, 44, 45, 46, 63, 64, 80, 84, 105, 122, 142], "runtim": [14, 147], "incorrect": 14, "inconsist": 14, "between": [14, 17, 20, 26, 41, 42, 84, 98, 114, 128, 136], "static": [5, 7, 8, 14, 32, 41, 42, 44, 45, 46, 50, 51, 63, 64, 83], "modifi": [14, 74, 75], "still": 14, "though": 14, "tensorshapeproto": 14, "thei": [14, 25, 26, 88, 147], "slice": [14, 25, 26, 59, 60, 61, 77], "pairofint": 14, "parent": [17, 23, 25, 26, 28, 30, 32, 44, 45, 46, 59, 60, 61, 147], "k": [17, 20, 26, 28, 44, 46, 60, 77, 80, 84], "repositori": [17, 80, 81, 84, 87, 88, 91, 92, 101, 105, 106, 108, 117, 122, 123, 125, 130, 132, 133, 138, 142, 143, 146], "meta": [7, 17, 20, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 77, 85, 88], "equip": 17, "test_data": [17, 44, 46, 87], "addition": 17, "dimension": [17, 32, 41, 42, 44, 46, 78, 84, 85, 88], "m": [0, 17, 20, 25, 26, 32, 41, 42, 44, 46, 50, 51, 59, 60, 61, 63, 64, 73, 74, 75, 76, 83, 84, 88, 93, 109, 127, 134, 147], "creation": 17, "classmethod": [5, 7, 8, 17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64, 77], "from_df": [17, 20], "column": [6, 17, 18, 20, 25, 26, 32, 80, 83, 84, 93, 109, 134], "lt": [17, 20, 63, 64], "test_x": 17, "head": [17, 20], "test_i": 17, "l": [17, 20, 23, 25, 26, 28, 30, 32, 41, 42, 44, 46, 50, 51, 60, 80, 84, 85], "x_rotat": 17, "rotat": [0, 17, 61, 84, 92, 108, 133, 147], "__x_rotat": 17, "cumul": 17, "normal": [17, 20, 23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 84, 95, 111], "train": [17, 20, 30, 32, 44, 46, 84], "test": [10, 17, 20, 44, 46, 71, 84, 87, 92, 108, 133, 147], "sampl": [17, 20, 28, 32, 44, 46, 92, 93, 104, 107, 108, 109, 121, 124, 133, 134, 141, 144, 147], "row": [17, 20, 25, 26, 32, 83, 84, 85, 93, 109, 134], "y_split": [17, 20], "split": [17, 20, 28], "just": [17, 18, 20], "lth": [17, 20], "rang": [17, 20, 59, 60, 61, 63, 64, 84, 88], "indic": [0, 17, 20, 25, 26, 59, 60, 61, 88, 147], "from_csv": [17, 20], "target": [17, 20], "metadata": [17, 20], "csv_option": [17, 18, 20], "pydata": [17, 18, 20], "doc": [17, 18, 20, 46], "stabl": [17, 18, 20], "read_csv": [6, 17, 18, 20, 80], "html": [17, 18, 20, 46, 71], "df": [17, 18, 19, 20, 28], "into_k_fold": [17, 20, 84], "shuffle_before_fold": [17, 20, 84], "repo": [17, 20, 81, 84, 87, 88], "absolut": [17, 20, 84], "inclus": [17, 20, 84], "improp": [17, 20, 84], "both": [17, 20, 28, 32, 84], "To": [17, 20, 32, 84], "suppress": [17, 20, 84], "neg": [17, 20, 84], "integ": [17, 20, 32, 84], "shuffl": [17, 20, 84], "windowspath": [18, 91, 106, 123, 127, 132, 143, 146], "empti": [5, 7, 8, 18, 41, 42, 44, 45, 46, 59, 63, 64, 69, 70, 77], "encapsul": [6, 18, 19, 50, 51, 61, 63, 64], "overwrit": [18, 84, 105, 122, 142], "keyword": [18, 28], "argument": [18, 28], "relev": [0, 18, 147], "is_empti": 18, "accord": [18, 44, 46], "fold": [19, 20, 44, 46, 80, 81, 84, 87, 88, 101, 117, 130, 138], "assum": [19, 28, 32, 50, 51], "uniform": 19, "distribut": [19, 28, 44, 46, 78], "u": [19, 61], "invers": 19, "probabl": [19, 28, 32, 50, 51], "transform": 19, "mean": [19, 25, 26, 28, 29, 30, 32, 44, 46, 50, 51, 85], "unit": [19, 25, 26], "varianc": [0, 19, 25, 26, 28, 32, 41, 42, 44, 46, 50, 51, 60, 84, 85, 88, 99, 115, 129, 137, 147], "alreadi": 19, "apply_to": 19, "undo_from": 19, "undo": 19, "unnorm": 19, "These": [20, 30], "analyz": [20, 59, 60, 61], "further": 20, "extens": [21, 22, 24, 27, 31, 80, 147], "multi": [21, 41, 42, 44, 46, 78], "mutual": 21, "depend": [21, 25, 44, 46, 87, 88, 147], "cholesky_diagonal_lower_bound": 23, "001": 23, "non": [5, 7, 8, 23, 25, 26, 28, 30, 32, 41, 42, 44, 45, 46, 59, 60, 61, 63, 64], "float": [6, 10, 23, 32, 69, 76, 78, 85, 103, 120, 131, 140], "covari": [23, 25, 26, 28, 32, 41, 42, 50, 51, 85, 88, 96, 112], "mutabl": 23, "through": 23, "cholesky_diagon": [23, 28], "cholesky_lower_triangl": 23, "symmetr": [23, 25, 26], "posit": [23, 25, 26, 28, 32], "express": [23, 28], "lower": [23, 28, 32, 50, 51], "bound": [23, 28, 32], "choleski": [23, 28, 32, 44, 46, 50, 51], "decomposit": [23, 28, 44, 46, 50, 51], "triangular": [23, 50, 51], "value_to_broadcast": 23, "readi": 23, "value_times_ey": 23, "cartesian": 23, "product": [23, 50, 51], "ey": 23, "transpos": 23, "ident": [23, 84], "multipli": [23, 25, 26, 44, 46], "transposit": [23, 57], "ctor": [23, 25, 26, 28, 30, 32, 59, 60, 61], "same": [23, 25, 26, 28, 30, 32, 59, 60, 61], "name_scop": [23, 25, 26, 28, 30, 32, 59, 60, 61], "instanc": [23, 25, 26, 28, 30, 32, 59, 60, 61, 77], "non_trainable_vari": [23, 25, 26, 28, 30, 32, 59, 60, 61], "sequenc": [6, 23, 25, 26, 28, 30, 32, 59, 60, 61, 76, 77, 78, 85, 88], "trainabl": [23, 25, 26, 28, 30, 32, 41, 42, 45, 59, 60, 61], "submodul": [23, 25, 26, 28, 30, 32, 59, 60, 61], "reflect": [23, 25, 26, 28, 30, 32, 59, 60, 61], "perform": [23, 25, 26, 28, 30, 32, 59, 60, 61, 63, 64], "reason": [23, 25, 26, 28, 30, 32, 59, 60, 61], "wish": [23, 25, 26, 28, 30, 32, 59, 60, 61], "cach": [23, 25, 26, 28, 30, 32, 59, 60, 61], "don": [23, 25, 26, 28, 30, 32, 59, 60, 61], "expect": [23, 25, 26, 28, 30, 32, 59, 60, 61], "sort": [23, 25, 26, 28, 30, 32, 59, 60, 61], "recurs": [23, 25, 26, 28, 30, 32, 59, 60, 61, 81, 87, 88], "breadth": [23, 25, 26, 28, 30, 32, 59, 60, 61], "sub": [23, 25, 26, 28, 30, 32, 59, 60, 61], "found": [23, 25, 26, 28, 30, 32, 59, 60, 61, 77, 88], "trainable_vari": [23, 25, 26, 28, 30, 32, 59, 60, 61], "with_name_scop": [23, 25, 26, 28, 30, 32, 59, 60, 61], "decor": [23, 25, 26, 28, 30, 32, 59, 60, 61], "automat": [23, 25, 26, 28, 30, 32, 50, 51, 59, 60, 61, 69], "enter": [23, 25, 26, 28, 30, 32, 59, 60, 61], "scope": [23, 25, 26, 28, 30, 32, 59, 60, 61], "mymodul": [23, 25, 26, 28, 30, 32, 59, 60, 61], "__call__": [23, 25, 26, 28, 30, 32, 59, 60, 61], "hasattr": [23, 25, 26, 28, 30, 32, 59, 60, 61], "w": [23, 25, 26, 28, 30, 32, 59, 60, 61], "random": [23, 25, 26, 28, 30, 32, 59, 60, 61, 84], "abov": [23, 25, 26, 28, 30, 32, 59, 60, 61], "would": [23, 25, 26, 28, 30, 32, 59, 60, 61], "mod": [23, 25, 26, 28, 30, 32, 59, 60, 61], "my_modul": [23, 25, 26, 28, 30, 32, 59, 60, 61], "wrap": [23, 25, 26, 28, 30, 32, 59, 60, 61], "lengthscal": [25, 26, 32, 41, 42], "active_dim": [25, 26], "anisotropicstationari": 25, "stationari": 25, "deriv": 25, "k_d": [25, 26], "pairwis": 25, "differ": [25, 26], "scale": [25, 26, 44, 46, 76], "\u2113": [25, 26], "x2\u1d40": [25, 26], "signal": [25, 26, 103, 120, 131, 140], "is_lengthscales_train": [25, 26], "them": [25, 26], "lengthscales_neat": [25, 26], "k_diag": [25, 26], "k_unit_vari": [25, 26], "x2": [25, 26], "optimis": [25, 26, 95, 111], "where": [25, 26, 28, 32, 44], "k_d_unit_vari": [25, 26], "k_d_apply_vari": [25, 26], "reshap": [25, 26, 78], "ln": [25, 26, 28, 44, 46], "ard": [25, 26], "activ": [0, 25, 26, 147], "on_separate_dim": [25, 26], "other": [25, 26, 41, 42, 50, 51, 87, 88], "over": [25, 26, 32, 84, 87], "overlap": [25, 26], "separ": [25, 26], "scaled_difference_matrix": [25, 26], "correct": [25, 26], "slice_cov": [25, 26], "cov": [25, 26], "requir": [25, 26, 30, 32, 63, 64, 73, 74, 75, 88], "turn": [25, 26, 30], "flatten": [25, 26], "full": [25, 26, 60, 83], "mostationari": [26, 32], "radial": 26, "basi": [0, 26, 92, 107, 108, 124, 133, 144, 147], "exponenti": [26, 50, 51], "equat": 26, "\u03c3\u00b2": 26, "exp": 26, "\u00bd": 26, "r\u00b2": 26, "r": [26, 32, 80], "euclidean": 26, "distanc": 26, "point": [26, 32], "drawn": [26, 32], "gp": [32, 59, 60, 61, 63, 64, 87, 88], "infinit": 26, "differenti": 26, "quadraturelikelihood": 28, "multivari": [28, 85], "appropri": [28, 84], "uncertainti": 28, "associ": 28, "believ": 28, "veri": 28, "small": 28, "lead": 28, "numer": [28, 46, 50, 51], "instabl": 28, "1e": [10, 28], "therefor": 28, "impos": 28, "symmetri": 28, "forward": 28, "concaten": [28, 72, 77, 80], "split_axis_shap": 28, "length": 28, "conditional_mean": 28, "condit": [0, 28, 147], "y\u2081": 28, "y\u2096": 28, "observation_dim": 28, "latent_dim": 28, "conditional_vari": 28, "margin": [0, 14, 28, 32, 59, 60, 61, 147], "var": 28, "log_prob": 28, "log": [28, 32], "densiti": [28, 32, 50, 51], "p": [28, 32], "observ": [28, 32], "pdf": [0, 28, 50, 51, 147], "predict_log_dens": [28, 32], "fmu": 28, "fvar": 28, "latent": [28, 32], "datum": 28, "predict": [28, 29, 30, 32, 44, 46], "q": 28, "predict_mean_and_var": 28, "dy": 28, "y\u00b2": 28, "\u00b2": 28, "variational_expect": 28, "statist": [28, 98, 114, 128, 136], "prior": [29, 30, 32], "output_dim": [30, 32], "meanfunct": 30, "mogpr": 30, "basic": [30, 48, 63, 64], "one": [30, 105, 122, 142], "constitut": 30, "absenc": 30, "union": 30, "mean_funct": [32, 147], "noise_vari": [32, 44, 46, 84], "gpmodel": 32, "internaldatatraininglossmixin": 32, "vanilla": 32, "likelihood": [32, 44, 46, 96, 112, 147], "treat": [32, 44, 46], "independ": [32, 44, 46, 87, 88, 98, 114, 128, 136], "mathbf": 32, "mathcal": 32, "sigma_n": 32, "maximis": [0, 32, 147], "_marginal_": 32, "hyperparamet": 32, "theta": [32, 61], "integr": 32, "form": 32, "kxx": 32, "momeanfunct": 32, "inputdata": 32, "outputdata": 32, "well": 32, "necessari": [32, 87], "maximum_log_likelihood_object": 32, "maximum": 32, "estim": 32, "maxim": 32, "g": [32, 69, 75, 88, 147], "elbo": 32, "variat": 32, "log_marginal_likelihood": 32, "predict_f": 32, "xnew": 32, "full_cov": 32, "full_output_cov": 32, "noisi": [32, 44, 46], "regardless": 32, "avoid": 32, "ambigu": 32, "calc_num_latent_gp": 32, "nice": 32, "awar": 32, "specif": 32, "howev": [32, 69], "num_latent_gp": 32, "bit": 32, "broken": 32, "fix": [32, 99, 115, 129, 137], "There": 32, "slightli": 32, "problemat": 32, "assumpt": 32, "github": [0, 32, 147], "com": [0, 32, 147], "issu": 32, "1343": 32, "calc_num_latent_gps_from_data": 32, "log_posterior_dens": 32, "arg": 32, "posterior": 32, "respect": 32, "gpmc": 32, "sgpmc": 32, "sensibli": 32, "log_prior_dens": 32, "sum": 32, "constrain": 32, "predict_f_sampl": 32, "num_sampl": 32, "draw": 32, "extra": 32, "correl": 32, "dens": 32, "num_data": 32, "uncorrel": 32, "predict_i": 32, "held": 32, "out": [32, 77], "training_loss": 32, "loss": 32, "training_loss_closur": 32, "conveni": 32, "closur": 32, "itself": [32, 84], "minim": [32, 46, 50, 51], "scipi": [32, 46, 69], "callabl": [32, 76, 83, 84], "interfac": [41, 44, 49, 62, 67, 86], "contract": 41, "share": [41, 42], "anisotrop": [87, 88], "isotrop": [41, 42, 44, 46, 87, 88, 97, 113], "mere": [41, 42, 45], "type_identifi": [41, 42], "__module__": 41, "__name__": 41, "typefromidentifi": [41, 42], "typeidentifi": [41, 42], "_typeidentifi": [41, 42], "typefromparamet": [41, 42], "recogn": [41, 42], "across": [41, 42, 80, 81, 87, 88], "broadcast_paramet": [41, 42, 44, 46], "variance_shap": [41, 42], "higher": [41, 42, 44, 46], "shrinkag": [41, 42, 44, 46], "unchang": [41, 42, 44, 46], "silent": [41, 42, 44, 46], "nop": [41, 42], "expans": [41, 42], "straightforward": [41, 42], "per": [41, 42], "attempt": [41, 42], "made": [41, 42], "shrink": [41, 42], "implemented_in_": 42, "off_diagon": [], "is_read": [44, 46, 87], "is_independ": [], "is_isotrop": [44, 46, 87, 88], "kernel_paramet": [44, 46, 87], "gpinterfac": [], "setup": [11, 12], "hous": [44, 46, 80, 84, 87, 88, 91, 106, 123, 132, 143, 146], "restrict": [44, 46], "read_from_fil": [44, 46], "mi": [44, 46], "hyper": [44, 46], "bfg": 46, "algorithm": 46, "format": 46, "y_instead_of_f": [44, 46], "o": [0, 44, 46, 74, 147], "nois": [44, 46, 85, 92, 98, 99, 103, 108, 114, 115, 120, 125, 126, 128, 129, 131, 133, 136, 137, 140], "std": [44, 46], "k_cho": [44, 46], "lnxln": [44, 46], "els": [44, 46, 77], "k_inv_i": [44, 46], "pre": [44, 46], "loxln": [44, 46], "lo": [44, 46], "chosolv": [44, 46], "check_k_inv_i": 46, "FOR": 46, "purpos": [46, 50, 51], "toler": [10, 46], "kernel_folder_nam": [44, 46], "identifi": [], "never": [], "extern": [], "desir": [], "noth": [44, 46], "_fold": [44, 46], "compris": [44, 46, 77, 147], "three": [44, 46], "score": [44, 46], "frame": [5, 7, 8, 44, 46, 63], "test_result_csv": [44, 46], "up": [44, 46, 69], "0001": [], "log_margin": [], "coeffici": [0, 58, 147], "close": [58, 59, 60, 61, 63, 64, 88, 118], "wide": [59, 60, 61], "collect": [59, 60, 61, 84], "especi": [59, 60, 61], "_calcul": [59, 60, 61], "everyth": [59, 60, 61], "closedindex": [], "is_t_parti": [60, 64], "forc": [60, 64], "mm": 60, "effect": [60, 77], "free": 60, "wmm": [60, 64], "rankequ": 60, "j": 60, "mix": 60, "instantiat": [], "expon": [50, 51], "variance_cho_diagon": [50, 51], "log_pdf": [50, 51], "variance_cho": [50, 51], "is_variance_diagon": [50, 51], "float64": [14, 50, 51], "lbunch": [50, 51], "logarithm": [50, 51], "un": [50, 51, 84], "det": [50, 51], "factor": [50, 51], "effici": [50, 51], "accuraci": [50, 51], "ratio": [50, 51, 103, 120, 131, 140], "popul": [50, 51], "adequ": [50, 51], "embrac": [50, 51], "consecut": [50, 51, 88], "insert": [50, 51, 77, 80], "usual": [50, 51], "sometim": [50, 51], "ein": [54, 55, 56], "lijk": [54, 55, 56], "kind": [63, 64, 88], "is_error_calcul": [63, 64, 88], "sobol": [0, 58, 59, 60, 61, 63, 75, 88, 147], "dispos": [63, 64], "useless": [63, 64], "onc": [63, 64], "total": [63, 64, 88, 118], "le": [63, 64], "outsid": [63, 64, 88, 147], "memori": [63, 64, 88], "intens": [63, 64, 88], "leav": [63, 64, 88], "flag": [63, 64, 88], "v": [77, 127], "stddev": [0, 2, 103, 120, 131, 140], "enum": [63, 64], "manag": [68, 69, 70], "environ": 69, "undertak": [62, 87, 88], "ed": [69, 70], "what": [69, 70], "undertaken": [], "end": 69, "regex": 69, "pu": 69, "logic": 69, "alloc": 69, "straight": [6, 63, 64, 69, 80, 84, 87], "inop": 69, "due": [69, 95, 111], "config": 69, "run_functions_eagerli": 69, "api_doc": [], "_": [0, 71, 147], "is_inlin": 70, "inlin": 70, "linebreak": 70, "top": 70, "tail": 70, "paragraph": 70, "taken": 71, "salib": 71, "readthedoc": 71, "en": 71, "latest": 71, "test_funct": 71, "ishigami": [72, 135], "balanc": [72, 73, 94, 110, 135], "scalar": [72, 73, 74, 75, 77, 94, 110, 135], "sin": [72, 73, 94, 110, 135], "oakley2004": [72, 135], "balanced_quad7": [72, 74, 135], "lin7": [72, 74, 135], "quad7": [72, 74, 135], "sobol_g": [72, 135], "strong5_2": [72, 75, 135], "strong5_4": [72, 75, 135], "weak5_2": [72, 75, 135], "oaklei": 74, "hagan": 74, "2004": 74, "loc": 76, "vectorlik": 76, "offset": 76, "functon": 77, "littl": 77, "than": 77, "item": [77, 147], "concat": 77, "subvector": 77, "pseudo": 77, "clear": 77, "copi": [5, 6, 7, 8, 17, 20, 41, 42, 44, 45, 46, 63, 64, 77], "shallow": 77, "fromkei": 77, "iter": [6, 77], "like": [77, 84], "view": 77, "pop": 77, "keyerror": 77, "popitem": 77, "lifo": 77, "setdefault": 77, "lack": 77, "throughout": 78, "prod": 78, "endpoint": 78, "newshap": 78, "ignore_miss": 80, "minu": 80, "to_csv": [6, 80], "write_opt": 80, "float_format": 80, "6f": 80, "from_fold": 80, "dst": [17, 20, 80, 81], "is_existing_delet": 80, "destin": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64, 80], "delet": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64, 80], "recreat": 80, "src": 81, "rel": [81, 88], "filenotfounderror": [81, 87, 88], "ignore_except": [87, 88], "nearest": 87, "ancestor": 87, "isotropi": 87, "hierarchi": [1, 87], "continu": 87, "throw": 87, "aggreg": 87, "first_ord": [88, 118], "furthermor": 88, "ignor": [88, 95, 111], "encount": 88, "halt": 88, "experi": 82, "signatur": 83, "latin_hypercub": 83, "is_cent": [83, 93, 109, 134], "latin": [83, 93, 109, 134], "hypercub": [83, 93, 109, 134], "boolean": [83, 93, 109, 134], "centr": [83, 93, 109, 134], "cell": [83, 93, 109, 134], "randomli": [83, 93, 109, 134], "full_factori": 83, "factori": 83, "base_fold": [], "function_vector": 84, "overwrite_exist": 84, "gaussiannois": 84, "sit": 84, "experiment": 84, "noise_magnitud": 84, "homoskedast": [84, 85], "sub_fold": 84, "extra_column": 84, "stochastic_rot": [], "stochast": [0, 99, 115, 129, 137, 147], "rotate_fold": 84, "uniformli": 84, "un_rotate_fold": 84, "matrixlik": 85, "co": 85, "magnitud": 85, "is_stochast": [], "artifici": 85, "label": 85, "scheme": 85, "suitabl": 85, "__format__": 85, "cannib": [89, 90, 147], "fc1ram": [91, 106, 123, 127, 132, 143, 146], "research": [91, 106, 123, 127, 132, 143, 146], "dat": [91, 106, 123, 127, 132, 143, 146], "softwaretest": [91, 106, 123, 127, 132, 143, 146], "welcom": 147, "reduct": [0, 147], "novel": [0, 147], "approach": [0, 147], "subspac": [0, 147], "AS": [0, 147], "those": 147, "unfamiliar": 147, "hyperlink": 147, "semin": [], "mathemat": 147, "behind": 147, "softwar": 147, "cover": [0, 147], "paper": [0, 147], "peer": 147, "review": 147, "public": 147, "simpli": 147, "place": 147, "pythonpath": 147, "site": 147, "installation_test": 147, "anywher": 147, "pyproject": 147, "toml": 147, "organ": 147, "modular": 147, "old": 147, "context": [11, 12, 147], "script": [89, 90, 147], "No": 147, "tabl": 147, "expos": 147, "task": [], "highli": [], "advanc": 147, "achiev": [], "directori": [0, 2], "mathsf": 85, "mathtt": [], "ymbj": [], "abbr": [], "ymca": [], "glossari": [1, 2], "technic": [0, 147], "direct": 147, "regard": 147, "bespok": 147, "subsapc": [], "techniqu": [0, 147], "constantin": [0, 147], "2014": [0, 147], "align": [0, 147], "eigenvector": [0, 147], "jacobian": [0, 147], "assess": [0, 147], "system": [0, 147], "varieti": [0, 147], "broadli": [0, 147], "saltelli": [0, 147], "et": [0, 147], "al": [0, 147], "2007": [0, 147], "razavi": [0, 147], "2021": [0, 147], "deal": [0, 147], "exclus": [0, 147], "ilya": [0, 147], "somewhat": [0, 147], "describ": [0, 147], "gori": [0, 147], "2023": [0, 147], "blob": [0, 147], "theori": [0, 147], "20of": [0, 147], "20determin": [0, 147], "gaussianwithout2pi": [], "quit": [0, 147], "thoroughli": [0, 147], "rasmussen": [0, 147], "william": [0, 147], "2005": [0, 147], "mogp": [26, 32, 41, 42, 43, 44, 45, 62, 87], "is_covari": [41, 42, 44, 46, 85, 87, 88], "variant": [42, 88], "likelihood_vari": [44, 46, 87], "stabil": [50, 51], "pi": [50, 51], "logpdf": [50, 51], "mnemon": [], "closedsobol": [60, 61, 64], "marginalis": [63, 64], "ad": [92, 103, 108, 120, 125, 131, 133, 140], "25": [103, 120, 127, 131, 140], "normalis": [103, 120, 131, 140], "400": [104, 121, 127, 141], "datapoint": [104, 121, 141], "add": 126, "00": 127, "topic": 147, "advis": 147, "advic": 147, "much": 147, "benchmark_gsa": 147, "gpr_from_funct": 147, "gsa_from_funct": 147, "repo_from_csv": 147, "repo_from_funct": 147, "sai": 147, "galleri": 147, "archetyp": 147, "root": 84, "ext": 84, "suffix": 84, "orthogon": 84, "wrong": 84, "is_random": 85, "summaris": 147, "term": [], "cunt": [], "part": 147, "penultim": 147, "conceptu": 1, "interc": [50, 51], "sigma": [50, 51], "determinant_vector": [50, 51], "_namedtupl": [], "field_default": [], "asdict": [], "move": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "dst_folder": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "src_folder": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "anyth": [5, 7, 8, 41, 42, 44, 45, 46, 63, 64], "arraylik": 6, "written": 6, "whenev": 6, "clean_copi": [17, 20], "clean": [17, 20], "64": 10, "contextmanag": [], "nan": 14, "u14": [5, 7, 8, 63], "member": [5, 7, 8, 63]}, "objects": {"": [[2, 0, 0, "-", "romcomma"]], "romcomma": [[3, 0, 0, "-", "base"], [15, 0, 0, "-", "data"], [21, 0, 0, "-", "gpf"], [39, 0, 0, "-", "gpr"], [47, 0, 0, "-", "gsa"], [65, 0, 0, "-", "rom"], [67, 0, 0, "-", "run"], [89, 0, 0, "-", "user"]], "romcomma.base": [[4, 0, 0, "-", "classes"], [9, 0, 0, "-", "definitions"]], "romcomma.base.classes": [[8, 1, 1, "", "Data"], [6, 1, 1, "", "Frame"], [7, 1, 1, "", "Model"]], "romcomma.base.classes.Data": [[8, 1, 1, "", "NamedTuple"], [8, 3, 1, "", "__init__"], [8, 3, 1, "", "copy"], [8, 3, 1, "", "delete"], [8, 3, 1, "", "empty"], [8, 3, 1, "", "move"], [8, 3, 1, "", "read"]], "romcomma.base.classes.Data.NamedTuple": [[8, 2, 1, "", "NotImplemented"], [8, 3, 1, "", "count"], [8, 3, 1, "", "index"]], "romcomma.base.classes.Frame": [[6, 3, 1, "", "__init__"], [6, 2, 1, "", "csv"], [6, 3, 1, "", "write"]], "romcomma.base.classes.Model": [[7, 1, 1, "", "Data"], [7, 4, 1, "", "META"], [7, 3, 1, "", "__init__"]], "romcomma.base.classes.Model.Data": [[7, 1, 1, "", "NamedTuple"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "delete"], [7, 3, 1, "", "empty"], [7, 3, 1, "", "move"], [7, 3, 1, "", "read"]], "romcomma.base.classes.Model.Data.NamedTuple": [[7, 2, 1, "", "NotImplemented"], [7, 3, 1, "", "count"], [7, 3, 1, "", "index"]], "romcomma.base.definitions": [[10, 5, 1, "", "EFFECTIVELY_ZERO"], [11, 6, 1, "", "FLOAT"], [12, 6, 1, "", "INT"], [13, 1, 1, "", "NP"], [14, 1, 1, "", "TF"]], "romcomma.base.definitions.NP": [[13, 2, 1, "", "Array"], [13, 2, 1, "", "Covector"], [13, 2, 1, "", "Matrix"], [13, 2, 1, "", "Tensor"], [13, 2, 1, "", "Tensor1"], [13, 2, 1, "", "Tensor2"], [13, 2, 1, "", "Tensor3"], [13, 2, 1, "", "Tensor4"], [13, 2, 1, "", "Tensor5"], [13, 2, 1, "", "Tensor6"], [13, 2, 1, "", "Tensor7"], [13, 2, 1, "", "Tensor8"], [13, 2, 1, "", "Vector"], [13, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF": [[14, 2, 1, "", "Array"], [14, 2, 1, "", "Covector"], [14, 2, 1, "", "Matrix"], [14, 2, 1, "", "NaN"], [14, 2, 1, "", "PairOfInts"], [14, 2, 1, "", "Slice"], [14, 1, 1, "", "Tensor"], [14, 2, 1, "", "Tensor1"], [14, 2, 1, "", "Tensor2"], [14, 2, 1, "", "Tensor3"], [14, 2, 1, "", "Tensor4"], [14, 2, 1, "", "Tensor5"], [14, 2, 1, "", "Tensor6"], [14, 2, 1, "", "Tensor7"], [14, 2, 1, "", "Tensor8"], [14, 2, 1, "", "Vector"], [14, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF.Tensor": [[14, 3, 1, "", "consumers"], [14, 4, 1, "", "device"], [14, 4, 1, "", "dtype"], [14, 3, 1, "", "eval"], [14, 3, 1, "", "experimental_ref"], [14, 3, 1, "", "get_shape"], [14, 4, 1, "", "graph"], [14, 4, 1, "", "name"], [14, 4, 1, "", "op"], [14, 3, 1, "", "ref"], [14, 3, 1, "", "set_shape"], [14, 4, 1, "", "shape"], [14, 4, 1, "", "value_index"]], "romcomma.data": [[16, 0, 0, "-", "storage"]], "romcomma.data.storage": [[17, 1, 1, "", "Fold"], [18, 1, 1, "", "Frame"], [19, 1, 1, "", "Normalization"], [20, 1, 1, "", "Repository"]], "romcomma.data.storage.Fold": [[17, 4, 1, "", "K"], [17, 4, 1, "", "L"], [17, 4, 1, "", "M"], [17, 4, 1, "", "N"], [17, 4, 1, "", "X"], [17, 4, 1, "", "X_rotation"], [17, 4, 1, "", "Y"], [17, 3, 1, "", "Y_split"], [17, 4, 1, "", "Y_splits"], [17, 3, 1, "", "__init__"], [17, 3, 1, "", "clean_copy"], [17, 4, 1, "", "folds"], [17, 3, 1, "", "from_csv"], [17, 3, 1, "", "from_df"], [17, 3, 1, "", "from_dfs"], [17, 3, 1, "", "into_K_folds"], [17, 4, 1, "", "test_x"], [17, 4, 1, "", "test_y"]], "romcomma.data.storage.Frame": [[18, 4, 1, "", "CSV_OPTIONS"], [18, 3, 1, "", "__init__"], [18, 4, 1, "", "is_empty"], [18, 3, 1, "", "write"]], "romcomma.data.storage.Normalization": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "apply_to"], [19, 3, 1, "", "undo_from"]], "romcomma.data.storage.Repository": [[20, 4, 1, "", "K"], [20, 4, 1, "", "L"], [20, 4, 1, "", "M"], [20, 4, 1, "", "N"], [20, 4, 1, "", "X"], [20, 4, 1, "", "Y"], [20, 3, 1, "", "Y_split"], [20, 4, 1, "", "Y_splits"], [20, 3, 1, "", "__init__"], [20, 3, 1, "", "clean_copy"], [20, 4, 1, "", "folds"], [20, 3, 1, "", "from_csv"], [20, 3, 1, "", "from_df"], [20, 3, 1, "", "into_K_folds"]], "romcomma.gpf": [[22, 0, 0, "-", "base"], [24, 0, 0, "-", "kernels"], [27, 0, 0, "-", "likelihoods"], [29, 0, 0, "-", "mean_functions"], [31, 0, 0, "-", "models"], [33, 0, 0, "-", "tests"]], "romcomma.gpf.base": [[23, 1, 1, "", "Variance"]], "romcomma.gpf.base.Variance": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "cholesky"], [23, 4, 1, "", "name"], [23, 4, 1, "", "name_scope"], [23, 4, 1, "", "non_trainable_variables"], [23, 4, 1, "", "shape"], [23, 4, 1, "", "submodules"], [23, 4, 1, "", "trainable_variables"], [23, 4, 1, "", "value"], [23, 3, 1, "", "value_times_eye"], [23, 4, 1, "", "value_to_broadcast"], [23, 4, 1, "", "variables"], [23, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels": [[25, 1, 1, "", "MOStationary"], [26, 1, 1, "", "RBF"]], "romcomma.gpf.kernels.MOStationary": [[25, 3, 1, "", "K_d"], [25, 3, 1, "", "K_d_apply_variance"], [25, 3, 1, "", "K_d_unit_variance"], [25, 3, 1, "", "K_diag"], [25, 3, 1, "", "K_unit_variance"], [25, 3, 1, "", "__init__"], [25, 4, 1, "", "ard"], [25, 4, 1, "", "lengthscales_neat"], [25, 4, 1, "", "name"], [25, 4, 1, "", "name_scope"], [25, 4, 1, "", "non_trainable_variables"], [25, 3, 1, "", "on_separate_dims"], [25, 3, 1, "", "scaled_difference_matrix"], [25, 3, 1, "", "slice"], [25, 3, 1, "", "slice_cov"], [25, 4, 1, "", "submodules"], [25, 4, 1, "", "trainable_variables"], [25, 4, 1, "", "variables"], [25, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels.RBF": [[26, 3, 1, "", "K_d"], [26, 3, 1, "", "K_d_apply_variance"], [26, 3, 1, "", "K_d_unit_variance"], [26, 3, 1, "", "K_diag"], [26, 3, 1, "", "K_unit_variance"], [26, 3, 1, "", "__init__"], [26, 4, 1, "", "ard"], [26, 4, 1, "", "lengthscales_neat"], [26, 4, 1, "", "name"], [26, 4, 1, "", "name_scope"], [26, 4, 1, "", "non_trainable_variables"], [26, 3, 1, "", "on_separate_dims"], [26, 3, 1, "", "scaled_difference_matrix"], [26, 3, 1, "", "slice"], [26, 3, 1, "", "slice_cov"], [26, 4, 1, "", "submodules"], [26, 4, 1, "", "trainable_variables"], [26, 4, 1, "", "variables"], [26, 3, 1, "", "with_name_scope"]], "romcomma.gpf.likelihoods": [[28, 1, 1, "", "MOGaussian"]], "romcomma.gpf.likelihoods.MOGaussian": [[28, 3, 1, "", "N"], [28, 3, 1, "", "__init__"], [28, 3, 1, "", "conditional_mean"], [28, 3, 1, "", "conditional_variance"], [28, 3, 1, "", "log_prob"], [28, 4, 1, "", "name"], [28, 4, 1, "", "name_scope"], [28, 4, 1, "", "non_trainable_variables"], [28, 3, 1, "", "predict_log_density"], [28, 3, 1, "", "predict_mean_and_var"], [28, 3, 1, "", "split_axis_shape"], [28, 4, 1, "", "submodules"], [28, 4, 1, "", "trainable_variables"], [28, 4, 1, "", "variables"], [28, 3, 1, "", "variational_expectations"], [28, 3, 1, "", "with_name_scope"]], "romcomma.gpf.mean_functions": [[30, 1, 1, "", "MOMeanFunction"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[30, 3, 1, "", "__init__"], [30, 4, 1, "", "functions"], [30, 4, 1, "", "name"], [30, 4, 1, "", "name_scope"], [30, 4, 1, "", "non_trainable_variables"], [30, 4, 1, "", "output_dim"], [30, 4, 1, "", "submodules"], [30, 4, 1, "", "trainable_variables"], [30, 4, 1, "", "variables"], [30, 3, 1, "", "with_name_scope"]], "romcomma.gpf.models": [[32, 1, 1, "", "MOGPR"]], "romcomma.gpf.models.MOGPR": [[32, 4, 1, "", "L"], [32, 4, 1, "", "M"], [32, 3, 1, "", "__init__"], [32, 3, 1, "", "calc_num_latent_gps"], [32, 3, 1, "", "calc_num_latent_gps_from_data"], [32, 3, 1, "", "log_marginal_likelihood"], [32, 3, 1, "", "log_posterior_density"], [32, 3, 1, "", "log_prior_density"], [32, 3, 1, "", "maximum_log_likelihood_objective"], [32, 4, 1, "", "name"], [32, 4, 1, "", "name_scope"], [32, 4, 1, "", "non_trainable_variables"], [32, 3, 1, "", "predict_f"], [32, 3, 1, "", "predict_f_samples"], [32, 3, 1, "", "predict_log_density"], [32, 3, 1, "", "predict_y"], [32, 4, 1, "", "submodules"], [32, 4, 1, "", "trainable_variables"], [32, 3, 1, "", "training_loss"], [32, 3, 1, "", "training_loss_closure"], [32, 4, 1, "", "variables"], [32, 3, 1, "", "with_name_scope"]], "romcomma.gpf.tests": [[34, 6, 1, "", "covariance"], [35, 6, 1, "", "increment"], [36, 6, 1, "", "kernel"], [37, 6, 1, "", "likelihood"], [38, 6, 1, "", "regression_data"]], "romcomma.gpr": [[40, 0, 0, "-", "kernels"], [43, 0, 0, "-", "models"]], "romcomma.gpr.kernels": [[41, 1, 1, "", "Kernel"], [42, 1, 1, "", "RBF"]], "romcomma.gpr.kernels.Kernel": [[41, 1, 1, "", "Data"], [41, 4, 1, "", "L"], [41, 4, 1, "", "M"], [41, 4, 1, "", "META"], [41, 4, 1, "", "TYPE_IDENTIFIER"], [41, 3, 1, "", "TypeFromIdentifier"], [41, 3, 1, "", "TypeFromParameters"], [41, 3, 1, "", "__init__"], [41, 3, 1, "", "broadcast_parameters"], [41, 4, 1, "", "implementation"], [41, 4, 1, "", "is_covariant"], [41, 3, 1, "", "optimize"]], "romcomma.gpr.kernels.Kernel.Data": [[41, 2, 1, "", "NamedTuple"], [41, 3, 1, "", "copy"], [41, 3, 1, "", "delete"], [41, 3, 1, "", "empty"], [41, 3, 1, "", "move"], [41, 3, 1, "", "read"]], "romcomma.gpr.kernels.RBF": [[42, 1, 1, "", "Data"], [42, 4, 1, "", "L"], [42, 4, 1, "", "M"], [42, 2, 1, "", "META"], [42, 2, 1, "", "TYPE_IDENTIFIER"], [42, 3, 1, "", "TypeFromIdentifier"], [42, 3, 1, "", "TypeFromParameters"], [42, 3, 1, "", "__init__"], [42, 3, 1, "", "broadcast_parameters"], [42, 4, 1, "", "implementation"], [42, 4, 1, "", "is_covariant"], [42, 3, 1, "", "optimize"]], "romcomma.gpr.kernels.RBF.Data": [[42, 2, 1, "", "NamedTuple"], [42, 3, 1, "", "copy"], [42, 3, 1, "", "delete"], [42, 3, 1, "", "empty"], [42, 3, 1, "", "move"], [42, 3, 1, "", "read"]], "romcomma.gpr.models": [[44, 1, 1, "", "GPR"], [45, 1, 1, "", "Likelihood"], [46, 1, 1, "", "MOGP"]], "romcomma.gpr.models.GPR": [[44, 1, 1, "", "Data"], [44, 4, 1, "", "KERNEL_FOLDER_NAME"], [44, 4, 1, "", "K_cho"], [44, 4, 1, "", "K_inv_Y"], [44, 4, 1, "", "L"], [44, 4, 1, "", "M"], [44, 4, 1, "", "META"], [44, 4, 1, "", "N"], [44, 4, 1, "", "X"], [44, 4, 1, "", "Y"], [44, 3, 1, "", "__init__"], [44, 3, 1, "", "broadcast_parameters"], [44, 4, 1, "", "fold"], [44, 4, 1, "", "implementation"], [44, 3, 1, "", "predict"], [44, 3, 1, "", "test"]], "romcomma.gpr.models.GPR.Data": [[44, 2, 1, "", "NamedTuple"], [44, 3, 1, "", "copy"], [44, 3, 1, "", "delete"], [44, 3, 1, "", "empty"], [44, 3, 1, "", "move"], [44, 3, 1, "", "read"]], "romcomma.gpr.models.Likelihood": [[45, 1, 1, "", "Data"], [45, 4, 1, "", "META"], [45, 3, 1, "", "__init__"], [45, 3, 1, "", "optimize"]], "romcomma.gpr.models.Likelihood.Data": [[45, 2, 1, "", "NamedTuple"], [45, 3, 1, "", "copy"], [45, 3, 1, "", "delete"], [45, 3, 1, "", "empty"], [45, 3, 1, "", "move"], [45, 3, 1, "", "read"]], "romcomma.gpr.models.MOGP": [[46, 1, 1, "", "Data"], [46, 2, 1, "", "KERNEL_FOLDER_NAME"], [46, 4, 1, "", "K_cho"], [46, 4, 1, "", "K_inv_Y"], [46, 4, 1, "", "L"], [46, 4, 1, "", "M"], [46, 4, 1, "", "META"], [46, 4, 1, "", "N"], [46, 4, 1, "", "X"], [46, 4, 1, "", "Y"], [46, 3, 1, "", "__init__"], [46, 3, 1, "", "broadcast_parameters"], [46, 3, 1, "", "check_K_inv_Y"], [46, 4, 1, "", "fold"], [46, 4, 1, "", "implementation"], [46, 3, 1, "", "optimize"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "test"]], "romcomma.gpr.models.MOGP.Data": [[46, 2, 1, "", "NamedTuple"], [46, 3, 1, "", "copy"], [46, 3, 1, "", "delete"], [46, 3, 1, "", "empty"], [46, 3, 1, "", "move"], [46, 3, 1, "", "read"]], "romcomma.gsa": [[48, 0, 0, "-", "base"], [58, 0, 0, "-", "calculators"], [62, 0, 0, "-", "models"]], "romcomma.gsa.base": [[49, 1, 1, "", "Calculator"], [51, 1, 1, "", "Gaussian"], [52, 6, 1, "", "det"], [53, 6, 1, "", "mean"], [54, 6, 1, "", "ms"], [55, 6, 1, "", "rms"], [56, 6, 1, "", "sos"], [57, 6, 1, "", "sym_check"]], "romcomma.gsa.base.Calculator": [[49, 3, 1, "", "__init__"]], "romcomma.gsa.base.Gaussian": [[51, 3, 1, "", "__init__"], [51, 2, 1, "", "determinant_vector"], [51, 2, 1, "", "exponent"], [51, 3, 1, "", "log_pdf"], [51, 3, 1, "", "pdf"]], "romcomma.gsa.calculators": [[59, 1, 1, "", "ClosedSobol"], [60, 1, 1, "", "ClosedSobolWithError"], [61, 1, 1, "", "ClosedSobolWithRotation"]], "romcomma.gsa.calculators.ClosedSobol": [[59, 4, 1, "", "OPTIONS"], [59, 3, 1, "", "__init__"], [59, 3, 1, "", "marginalize"], [59, 4, 1, "", "name"], [59, 4, 1, "", "name_scope"], [59, 4, 1, "", "non_trainable_variables"], [59, 4, 1, "", "submodules"], [59, 4, 1, "", "trainable_variables"], [59, 4, 1, "", "variables"], [59, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calculators.ClosedSobolWithError": [[60, 4, 1, "", "OPTIONS"], [60, 1, 1, "", "RankEquation"], [60, 1, 1, "", "RankEquations"], [60, 3, 1, "", "__init__"], [60, 3, 1, "", "marginalize"], [60, 4, 1, "", "name"], [60, 4, 1, "", "name_scope"], [60, 4, 1, "", "non_trainable_variables"], [60, 4, 1, "", "submodules"], [60, 4, 1, "", "trainable_variables"], [60, 4, 1, "", "variables"], [60, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation": [[60, 3, 1, "", "count"], [60, 2, 1, "", "i"], [60, 3, 1, "", "index"], [60, 2, 1, "", "j"], [60, 2, 1, "", "k"], [60, 2, 1, "", "l"]], "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations": [[60, 2, 1, "", "DIAGONAL"], [60, 2, 1, "", "MIXED"], [60, 3, 1, "", "count"], [60, 3, 1, "", "index"]], "romcomma.gsa.calculators.ClosedSobolWithRotation": [[61, 2, 1, "", "OPTIONS"], [61, 3, 1, "", "__init__"], [61, 3, 1, "", "marginalize"], [61, 4, 1, "", "name"], [61, 4, 1, "", "name_scope"], [61, 4, 1, "", "non_trainable_variables"], [61, 4, 1, "", "submodules"], [61, 4, 1, "", "trainable_variables"], [61, 4, 1, "", "variables"], [61, 3, 1, "", "with_name_scope"]], "romcomma.gsa.models": [[63, 1, 1, "", "GSA"], [64, 1, 1, "", "Sobol"]], "romcomma.gsa.models.GSA": [[63, 1, 1, "", "Data"], [63, 1, 1, "", "Kind"], [63, 2, 1, "", "META"], [63, 3, 1, "", "__init__"], [63, 3, 1, "", "calculator"]], "romcomma.gsa.models.GSA.Data": [[63, 1, 1, "", "NamedTuple"], [63, 3, 1, "", "copy"], [63, 3, 1, "", "delete"], [63, 3, 1, "", "empty"], [63, 3, 1, "", "move"], [63, 3, 1, "", "read"]], "romcomma.gsa.models.GSA.Data.NamedTuple": [[63, 2, 1, "", "NotImplemented"], [63, 3, 1, "", "count"], [63, 3, 1, "", "index"]], "romcomma.gsa.models.Sobol": [[64, 1, 1, "", "Data"], [64, 1, 1, "", "Kind"], [64, 4, 1, "", "META"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "calculator"]], "romcomma.gsa.models.Sobol.Data": [[64, 2, 1, "", "NamedTuple"], [64, 3, 1, "", "copy"], [64, 3, 1, "", "delete"], [64, 3, 1, "", "empty"], [64, 3, 1, "", "move"], [64, 3, 1, "", "read"]], "romcomma.rom": [[66, 0, 0, "-", "old"]], "romcomma.run": [[68, 0, 0, "-", "context"], [71, 0, 0, "-", "function"], [79, 0, 0, "-", "results"], [82, 0, 0, "-", "sample"], [86, 0, 0, "-", "summarised"]], "romcomma.run.context": [[69, 6, 1, "", "Environment"], [70, 6, 1, "", "Timer"]], "romcomma.run.function": [[72, 5, 1, "", "ALL"], [73, 5, 1, "", "ISHIGAMI"], [74, 5, 1, "", "OAKLEY2004"], [75, 5, 1, "", "SOBOL_G"], [76, 1, 1, "", "Scalar"], [77, 1, 1, "", "Vector"], [78, 6, 1, "", "linspace"]], "romcomma.run.function.Scalar": [[76, 3, 1, "", "__init__"]], "romcomma.run.function.Vector": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "clear"], [77, 3, 1, "", "concat"], [77, 3, 1, "", "copy"], [77, 3, 1, "", "fromkeys"], [77, 3, 1, "", "get"], [77, 3, 1, "", "items"], [77, 3, 1, "", "keys"], [77, 4, 1, "", "meta"], [77, 3, 1, "", "pop"], [77, 3, 1, "", "popitem"], [77, 3, 1, "", "setdefault"], [77, 3, 1, "", "subVector"], [77, 3, 1, "", "update"], [77, 3, 1, "", "values"]], "romcomma.run.results": [[80, 1, 1, "", "Collect"], [81, 6, 1, "", "copy"]], "romcomma.run.results.Collect": [[80, 3, 1, "", "__init__"], [80, 2, 1, "", "csvs"], [80, 2, 1, "", "folders"], [80, 3, 1, "", "from_folders"], [80, 3, 1, "", "from_folds"], [80, 2, 1, "", "ignore_missing"], [80, 2, 1, "", "write_options"]], "romcomma.run.sample": [[83, 1, 1, "", "DOE"], [84, 1, 1, "", "Function"], [85, 1, 1, "", "GaussianNoise"]], "romcomma.run.sample.DOE": [[83, 2, 1, "", "Method"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "full_factorial"], [83, 3, 1, "", "latin_hypercube"]], "romcomma.run.sample.Function": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "collection"], [84, 3, 1, "", "into_K_folds"], [84, 4, 1, "", "repo"], [84, 3, 1, "", "rotate_folds"], [84, 3, 1, "", "un_rotate_folds"]], "romcomma.run.sample.GaussianNoise": [[85, 1, 1, "", "Variance"], [85, 3, 1, "", "__init__"]], "romcomma.run.sample.GaussianNoise.Variance": [[85, 4, 1, "", "matrix"], [85, 4, 1, "", "meta"]], "romcomma.run.summarised": [[87, 6, 1, "", "gpr"], [88, 6, 1, "", "gsa"]], "romcomma.user": [[90, 0, 0, "-", "benchmark_gsa"], [92, 0, 0, "-", "gpr_from_function"], [108, 0, 0, "-", "gsa_from_function"], [125, 0, 0, "-", "repo_from_csv"], [133, 0, 0, "-", "repo_from_function"], [145, 0, 0, "-", "toy"]], "romcomma.user.benchmark_gsa": [[91, 5, 1, "", "BASE_FOLDER"]], "romcomma.user.gpr_from_function": [[93, 6, 1, "", "DOE"], [94, 5, 1, "", "FUNCTION_VECTOR"], [95, 5, 1, "", "IGNORE_EXCEPTIONS"], [96, 5, 1, "", "IS_COVARIANT"], [97, 5, 1, "", "IS_ISOTROPIC"], [98, 5, 1, "", "IS_NOISE_COVARIANT"], [99, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [100, 5, 1, "", "IS_READ"], [101, 5, 1, "", "K"], [102, 5, 1, "", "Ms"], [103, 5, 1, "", "NOISE_MAGNITUDES"], [104, 5, 1, "", "Ns"], [105, 5, 1, "", "READ"], [106, 5, 1, "", "ROOT"], [107, 5, 1, "", "ROTATIONS"]], "romcomma.user.gsa_from_function": [[109, 6, 1, "", "DOE"], [110, 5, 1, "", "FUNCTION_VECTOR"], [111, 5, 1, "", "IGNORE_EXCEPTIONS"], [112, 5, 1, "", "IS_COVARIANT"], [113, 5, 1, "", "IS_ISOTROPIC"], [114, 5, 1, "", "IS_NOISE_COVARIANT"], [115, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [116, 5, 1, "", "IS_READ"], [117, 5, 1, "", "K"], [118, 5, 1, "", "KINDS"], [119, 5, 1, "", "Ms"], [120, 5, 1, "", "NOISE_MAGNITUDES"], [121, 5, 1, "", "Ns"], [122, 5, 1, "", "READ"], [123, 5, 1, "", "ROOT"], [124, 5, 1, "", "ROTATIONS"]], "romcomma.user.repo_from_csv": [[126, 5, 1, "", "ADD_NOISE"], [127, 5, 1, "", "CSV"], [128, 5, 1, "", "IS_NOISE_COVARIANT"], [129, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [130, 5, 1, "", "K"], [131, 5, 1, "", "NOISE_MAGNITUDES"], [132, 5, 1, "", "ROOT"]], "romcomma.user.repo_from_function": [[134, 6, 1, "", "DOE"], [135, 5, 1, "", "FUNCTION_VECTOR"], [136, 5, 1, "", "IS_NOISE_COVARIANT"], [137, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [138, 5, 1, "", "K"], [139, 5, 1, "", "Ms"], [140, 5, 1, "", "NOISE_MAGNITUDES"], [141, 5, 1, "", "Ns"], [142, 5, 1, "", "READ"], [143, 5, 1, "", "ROOT"], [144, 5, 1, "", "ROTATIONS"]], "romcomma.user.toy": [[146, 5, 1, "", "ROOT"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"rom": [1, 65, 66], "comma": 1, "user": [1, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "guid": 1, "content": 1, "indic": 1, "tabl": 1, "packag": [], "refer": 2, "romcomma": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 23, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "class": [4, 5, 6, 7, 8], "model": [7, 31, 32, 43, 44, 45, 46, 62, 63, 64], "paramet": [], "definit": [9, 10, 11, 12, 13, 14], "float": 11, "int": 12, "np": 13, "tf": 14, "data": [5, 8, 15, 16, 17, 18, 19, 20], "storag": [16, 17, 18, 19, 20], "fold": 17, "frame": [6, 18], "normal": 19, "repositori": 20, "gpf": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "varianc": 23, "kernel": [24, 25, 26, 36, 40, 41, 42], "mostationari": 25, "rbf": [26, 42], "likelihood": [27, 28, 37, 45], "mogaussian": 28, "mean_funct": [29, 30], "momeanfunct": 30, "mogpr": 32, "test": [33, 34, 35, 36, 37, 38], "covari": 34, "increment": 35, "regression_data": 38, "gpr": [39, 40, 41, 42, 43, 44, 45, 46, 87], "gp": [], "gpinterfac": [], "gsa": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88], "sobol": 64, "closedindex": [], "closedindexwitherror": [], "closedindexwithrot": [], "gaussian": [50, 51], "det": 52, "mean": 53, "m": [54, 102, 119, 139], "rm": 55, "so": 56, "sym_check": 57, "undertak": [], "old": 66, "context": [68, 69, 70], "setup": 69, "timer": 70, "function": [71, 72, 73, 74, 75, 76, 77, 78, 84], "all": 72, "ishigami": 73, "oakley2004": 74, "sobol_g": 75, "scalar": 76, "vector": 77, "linspac": 78, "result": [79, 80, 81], "collect": 80, "copi": 81, "run": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "sampl": [82, 83, 84, 85], "doe": [83, 93, 109, 134], "gaussiannois": 85, "script": [], "base_fold": 91, "get": 147, "start": 147, "instal": 147, "structur": [], "glossari": [0, 147], "abbrevi": [], "modul": [2, 147], "hierarchi": 147, "mogp": 46, "calcul": [49, 58, 59, 60, 61], "gaussianwithout2pi": [], "closedsobol": 59, "closedsobolwitherror": 60, "closedsobolwithrot": 61, "benchmark_gsa": [90, 91], "gpr_from_funct": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "function_vector": [94, 110, 135], "ignore_except": [95, 111], "is_covari": [96, 112], "is_isotrop": [97, 113], "is_noise_covari": [98, 114, 128, 136], "is_noise_variance_random": [99, 115, 129, 137], "is_read": [100, 116], "k": [101, 117, 130, 138], "noise_magnitud": [103, 120, 131, 140], "n": [104, 121, 141], "read": [105, 122, 142], "root": [106, 123, 132, 143, 146], "rotat": [107, 124, 144], "gsa_from_funct": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "kind": 118, "repo_from_csv": [125, 126, 127, 128, 129, 130, 131, 132], "add_nois": 126, "csv": 127, "repo_from_funct": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "summaris": [86, 87, 88], "conceptu": 147, "toi": [145, 146], "effectively_zero": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"romcomma.base": [[3, "module-romcomma.base"]], "romcomma.data": [[15, "module-romcomma.data"]], "romcomma.gpf.base": [[22, "module-romcomma.gpf.base"]], "romcomma.gpf.kernels": [[24, "module-romcomma.gpf.kernels"]], "romcomma.gsa": [[47, "module-romcomma.gsa"]], "romcomma.rom": [[65, "module-romcomma.rom"]], "romcomma.user.benchmark_gsa": [[90, "module-romcomma.user.benchmark_gsa"]], "romcomma.user.benchmark_gsa.BASE_FOLDER": [[91, "romcomma-user-benchmark-gsa-base-folder"]], "romcomma.user.gpr_from_function": [[92, "module-romcomma.user.gpr_from_function"]], "romcomma.user.gpr_from_function.FUNCTION_VECTOR": [[94, "romcomma-user-gpr-from-function-function-vector"]], "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS": [[95, "romcomma-user-gpr-from-function-ignore-exceptions"]], "romcomma.user.gpr_from_function.IS_COVARIANT": [[96, "romcomma-user-gpr-from-function-is-covariant"]], "romcomma.user.gpr_from_function.IS_ISOTROPIC": [[97, "romcomma-user-gpr-from-function-is-isotropic"]], "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT": [[98, "romcomma-user-gpr-from-function-is-noise-covariant"]], "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM": [[99, "romcomma-user-gpr-from-function-is-noise-variance-random"]], "romcomma.user.gpr_from_function.IS_READ": [[100, "romcomma-user-gpr-from-function-is-read"]], "romcomma.user.gpr_from_function.K": [[101, "romcomma-user-gpr-from-function-k"]], "romcomma.user.gpr_from_function.Ms": [[102, "romcomma-user-gpr-from-function-ms"]], "romcomma.user.gpr_from_function.NOISE_MAGNITUDES": [[103, "romcomma-user-gpr-from-function-noise-magnitudes"]], "romcomma.user.gpr_from_function.Ns": [[104, "romcomma-user-gpr-from-function-ns"]], "romcomma.user.gpr_from_function.READ": [[105, "romcomma-user-gpr-from-function-read"]], "romcomma.user.gpr_from_function.ROOT": [[106, "romcomma-user-gpr-from-function-root"]], "romcomma.user.gpr_from_function.ROTATIONS": [[107, "romcomma-user-gpr-from-function-rotations"]], "romcomma.user.gsa_from_function": [[108, "module-romcomma.user.gsa_from_function"]], "romcomma.user.gsa_from_function.FUNCTION_VECTOR": [[110, "romcomma-user-gsa-from-function-function-vector"]], "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS": [[111, "romcomma-user-gsa-from-function-ignore-exceptions"]], "romcomma.user.gsa_from_function.IS_COVARIANT": [[112, "romcomma-user-gsa-from-function-is-covariant"]], "romcomma.user.gsa_from_function.IS_ISOTROPIC": [[113, "romcomma-user-gsa-from-function-is-isotropic"]], "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT": [[114, "romcomma-user-gsa-from-function-is-noise-covariant"]], "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM": [[115, "romcomma-user-gsa-from-function-is-noise-variance-random"]], "romcomma.user.gsa_from_function.IS_READ": [[116, "romcomma-user-gsa-from-function-is-read"]], "romcomma.user.gsa_from_function.K": [[117, "romcomma-user-gsa-from-function-k"]], "romcomma.user.gsa_from_function.KINDS": [[118, "romcomma-user-gsa-from-function-kinds"]], "romcomma.user.gsa_from_function.Ms": [[119, "romcomma-user-gsa-from-function-ms"]], "romcomma.user.gsa_from_function.NOISE_MAGNITUDES": [[120, "romcomma-user-gsa-from-function-noise-magnitudes"]], "romcomma.user.gsa_from_function.Ns": [[121, "romcomma-user-gsa-from-function-ns"]], "romcomma.user.gsa_from_function.READ": [[122, "romcomma-user-gsa-from-function-read"]], "romcomma.user.gsa_from_function.ROOT": [[123, "romcomma-user-gsa-from-function-root"]], "romcomma.user.gsa_from_function.ROTATIONS": [[124, "romcomma-user-gsa-from-function-rotations"]], "romcomma.user.repo_from_csv": [[125, "module-romcomma.user.repo_from_csv"]], "romcomma.user.repo_from_csv.ADD_NOISE": [[126, "romcomma-user-repo-from-csv-add-noise"]], "romcomma.user.repo_from_csv.CSV": [[127, "romcomma-user-repo-from-csv-csv"]], "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT": [[128, "romcomma-user-repo-from-csv-is-noise-covariant"]], "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM": [[129, "romcomma-user-repo-from-csv-is-noise-variance-random"]], "romcomma.user.repo_from_csv.K": [[130, "romcomma-user-repo-from-csv-k"]], "romcomma.user.repo_from_csv.NOISE_MAGNITUDES": [[131, "romcomma-user-repo-from-csv-noise-magnitudes"]], "romcomma.user.repo_from_csv.ROOT": [[132, "romcomma-user-repo-from-csv-root"]], "romcomma.user.repo_from_function": [[133, "module-romcomma.user.repo_from_function"]], "romcomma.user.repo_from_function.FUNCTION_VECTOR": [[135, "romcomma-user-repo-from-function-function-vector"]], "romcomma.user.repo_from_function.IS_NOISE_COVARIANT": [[136, "romcomma-user-repo-from-function-is-noise-covariant"]], "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM": [[137, "romcomma-user-repo-from-function-is-noise-variance-random"]], "romcomma.user.repo_from_function.K": [[138, "romcomma-user-repo-from-function-k"]], "romcomma.user.repo_from_function.Ms": [[139, "romcomma-user-repo-from-function-ms"]], "romcomma.user.repo_from_function.NOISE_MAGNITUDES": [[140, "romcomma-user-repo-from-function-noise-magnitudes"]], "romcomma.user.repo_from_function.Ns": [[141, "romcomma-user-repo-from-function-ns"]], "romcomma.user.repo_from_function.READ": [[142, "romcomma-user-repo-from-function-read"]], "romcomma.user.repo_from_function.ROOT": [[143, "romcomma-user-repo-from-function-root"]], "romcomma.user.repo_from_function.ROTATIONS": [[144, "romcomma-user-repo-from-function-rotations"]], "Module Reference": [[2, "module-romcomma"]], "romcomma.gpf.tests": [[33, "module-romcomma.gpf.tests"]], "romcomma.gpf.tests.covariance": [[34, "romcomma-gpf-tests-covariance"]], "romcomma.gpf.tests.increment": [[35, "romcomma-gpf-tests-increment"]], "romcomma.gpf.tests.kernel": [[36, "romcomma-gpf-tests-kernel"]], "romcomma.gpf.tests.likelihood": [[37, "romcomma-gpf-tests-likelihood"]], "romcomma.gpf.tests.regression_data": [[38, "romcomma-gpf-tests-regression-data"]], "romcomma.run": [[67, "module-romcomma.run"]], "rom-comma User Guide": [[1, "rom-comma-user-guide"]], "Contents": [[1, "contents"]], "Indices and Tables": [[1, "indices-and-tables"]], "romcomma.gpf": [[21, "module-romcomma.gpf"]], "romcomma.gpf.likelihoods": [[27, "module-romcomma.gpf.likelihoods"]], "romcomma.gpf.mean_functions": [[29, "module-romcomma.gpf.mean_functions"]], "romcomma.gpf.models": [[31, "module-romcomma.gpf.models"]], "romcomma.gpr": [[39, "module-romcomma.gpr"]], "romcomma.gsa.base": [[48, "module-romcomma.gsa.base"]], "romcomma.gsa.base.Calculator": [[49, "romcomma-gsa-base-calculator"]], "romcomma.gsa.base.Gaussian": [[50, "romcomma-gsa-base-gaussian"], [51, "romcomma-gsa-base-gaussian"]], "romcomma.gsa.base.det": [[52, "romcomma-gsa-base-det"]], "romcomma.gsa.base.mean": [[53, "romcomma-gsa-base-mean"]], "romcomma.gsa.base.ms": [[54, "romcomma-gsa-base-ms"]], "romcomma.gsa.base.rms": [[55, "romcomma-gsa-base-rms"]], "romcomma.gsa.base.sos": [[56, "romcomma-gsa-base-sos"]], "romcomma.gsa.base.sym_check": [[57, "romcomma-gsa-base-sym-check"]], "Glossary": [[0, "glossary"], [147, "glossary"]], "Getting Started": [[147, "getting-started"]], "Installation": [[147, "installation"]], "Conceptual Hierarchy": [[147, "conceptual-hierarchy"]], "Module Hierarchy": [[147, "module-hierarchy"]], "romcomma.data.storage": [[16, "module-romcomma.data.storage"]], "romcomma.data.storage.Fold": [[17, "romcomma-data-storage-fold"]], "romcomma.data.storage.Frame": [[18, "romcomma-data-storage-frame"]], "romcomma.data.storage.Normalization": [[19, "romcomma-data-storage-normalization"]], "romcomma.data.storage.Repository": [[20, "romcomma-data-storage-repository"]], "romcomma.run.results": [[79, "module-romcomma.run.results"]], "romcomma.run.results.Collect": [[80, "romcomma-run-results-collect"]], "romcomma.run.results.copy": [[81, "romcomma-run-results-copy"]], "romcomma.run.sample": [[82, "module-romcomma.run.sample"]], "romcomma.run.sample.DOE": [[83, "romcomma-run-sample-doe"]], "romcomma.run.sample.Function": [[84, "romcomma-run-sample-function"]], "romcomma.run.sample.GaussianNoise": [[85, "romcomma-run-sample-gaussiannoise"]], "romcomma.user": [[89, "module-romcomma.user"]], "romcomma.user.gpr_from_function.DOE": [[93, "romcomma-user-gpr-from-function-doe"]], "romcomma.user.gsa_from_function.DOE": [[109, "romcomma-user-gsa-from-function-doe"]], "romcomma.user.repo_from_function.DOE": [[134, "romcomma-user-repo-from-function-doe"]], "romcomma.user.toy": [[145, "module-romcomma.user.toy"]], "romcomma.user.toy.ROOT": [[146, "romcomma-user-toy-root"]], "romcomma.base.definitions": [[9, "module-romcomma.base.definitions"]], "romcomma.base.definitions.EFFECTIVELY_ZERO": [[10, "romcomma-base-definitions-effectively-zero"]], "romcomma.base.definitions.FLOAT": [[11, "romcomma-base-definitions-float"]], "romcomma.base.definitions.INT": [[12, "romcomma-base-definitions-int"]], "romcomma.base.definitions.NP": [[13, "romcomma-base-definitions-np"]], "romcomma.base.definitions.TF": [[14, "romcomma-base-definitions-tf"]], "romcomma.run.context": [[68, "module-romcomma.run.context"]], "romcomma.run.context.Setup": [[69, "romcomma-run-context-setup"]], "romcomma.run.context.Timer": [[70, "romcomma-run-context-timer"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "romcomma.base.classes.Data": [[5, "romcomma-base-classes-data"], [8, "romcomma-base-classes-data"]], "romcomma.base.classes.Frame": [[6, "romcomma-base-classes-frame"]], "romcomma.base.classes.Model": [[7, "romcomma-base-classes-model"]], "romcomma.gpf.base.Variance": [[23, "romcomma-gpf-base-variance"]], "romcomma.gpf.kernels.MOStationary": [[25, "romcomma-gpf-kernels-mostationary"]], "romcomma.gpf.kernels.RBF": [[26, "romcomma-gpf-kernels-rbf"]], "romcomma.gpf.likelihoods.MOGaussian": [[28, "romcomma-gpf-likelihoods-mogaussian"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[30, "romcomma-gpf-mean-functions-momeanfunction"]], "romcomma.gpf.models.MOGPR": [[32, "romcomma-gpf-models-mogpr"]], "romcomma.gpr.kernels": [[40, "module-romcomma.gpr.kernels"]], "romcomma.gpr.kernels.Kernel": [[41, "romcomma-gpr-kernels-kernel"]], "romcomma.gpr.kernels.RBF": [[42, "romcomma-gpr-kernels-rbf"]], "romcomma.gpr.models": [[43, "module-romcomma.gpr.models"]], "romcomma.gpr.models.GPR": [[44, "romcomma-gpr-models-gpr"]], "romcomma.gpr.models.Likelihood": [[45, "romcomma-gpr-models-likelihood"]], "romcomma.gpr.models.MOGP": [[46, "romcomma-gpr-models-mogp"]], "romcomma.gsa.calculators": [[58, "module-romcomma.gsa.calculators"]], "romcomma.gsa.calculators.ClosedSobol": [[59, "romcomma-gsa-calculators-closedsobol"]], "romcomma.gsa.calculators.ClosedSobolWithError": [[60, "romcomma-gsa-calculators-closedsobolwitherror"]], "romcomma.gsa.calculators.ClosedSobolWithRotation": [[61, "romcomma-gsa-calculators-closedsobolwithrotation"]], "romcomma.gsa.models": [[62, "module-romcomma.gsa.models"]], "romcomma.gsa.models.GSA": [[63, "romcomma-gsa-models-gsa"]], "romcomma.gsa.models.Sobol": [[64, "romcomma-gsa-models-sobol"]], "romcomma.rom.old": [[66, "module-romcomma.rom.old"]], "romcomma.run.function": [[71, "module-romcomma.run.function"]], "romcomma.run.function.ALL": [[72, "romcomma-run-function-all"]], "romcomma.run.function.ISHIGAMI": [[73, "romcomma-run-function-ishigami"]], "romcomma.run.function.OAKLEY2004": [[74, "romcomma-run-function-oakley2004"]], "romcomma.run.function.SOBOL_G": [[75, "romcomma-run-function-sobol-g"]], "romcomma.run.function.Scalar": [[76, "romcomma-run-function-scalar"]], "romcomma.run.function.Vector": [[77, "romcomma-run-function-vector"]], "romcomma.run.function.linspace": [[78, "romcomma-run-function-linspace"]], "romcomma.run.summarised": [[86, "module-romcomma.run.summarised"]], "romcomma.run.summarised.gpr": [[87, "romcomma-run-summarised-gpr"]], "romcomma.run.summarised.gsa": [[88, "romcomma-run-summarised-gsa"]]}, "indexentries": {"module": [[3, "module-romcomma.base"], [4, "module-romcomma.base.classes"], [22, "module-romcomma.gpf.base"], [24, "module-romcomma.gpf.kernels"], [27, "module-romcomma.gpf.likelihoods"], [29, "module-romcomma.gpf.mean_functions"], [31, "module-romcomma.gpf.models"], [39, "module-romcomma.gpr"], [40, "module-romcomma.gpr.kernels"], [43, "module-romcomma.gpr.models"], [47, "module-romcomma.gsa"], [58, "module-romcomma.gsa.calculators"], [62, "module-romcomma.gsa.models"], [65, "module-romcomma.rom"], [66, "module-romcomma.rom.old"], [67, "module-romcomma.run"], [71, "module-romcomma.run.function"], [86, "module-romcomma.run.summarised"]], "romcomma.base": [[3, "module-romcomma.base"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "data (class in romcomma.base.classes)": [[5, "romcomma.base.classes.Data"], [8, "romcomma.base.classes.Data"]], "data.namedtuple (class in romcomma.base.classes)": [[5, "romcomma.base.classes.Data.NamedTuple"], [8, "romcomma.base.classes.Data.NamedTuple"]], "notimplemented (data.namedtuple attribute)": [[5, "romcomma.base.classes.Data.NamedTuple.NotImplemented"], [8, "romcomma.base.classes.Data.NamedTuple.NotImplemented"]], "__init__() (data method)": [[5, "romcomma.base.classes.Data.__init__"], [8, "romcomma.base.classes.Data.__init__"]], "copy() (data static method)": [[5, "romcomma.base.classes.Data.copy"], [8, "romcomma.base.classes.Data.copy"]], "count() (data.namedtuple method)": [[5, "romcomma.base.classes.Data.NamedTuple.count"], [8, "romcomma.base.classes.Data.NamedTuple.count"]], "delete() (data static method)": [[5, "romcomma.base.classes.Data.delete"], [8, "romcomma.base.classes.Data.delete"]], "empty() (data static method)": [[5, "romcomma.base.classes.Data.empty"], [8, "romcomma.base.classes.Data.empty"]], "index() (data.namedtuple method)": [[5, "romcomma.base.classes.Data.NamedTuple.index"], [8, "romcomma.base.classes.Data.NamedTuple.index"]], "move() (data method)": [[5, "romcomma.base.classes.Data.move"], [8, "romcomma.base.classes.Data.move"]], "read() (data class method)": [[5, "romcomma.base.classes.Data.read"], [8, "romcomma.base.classes.Data.read"]], "frame (class in romcomma.base.classes)": [[6, "romcomma.base.classes.Frame"]], "__init__() (frame method)": [[6, "romcomma.base.classes.Frame.__init__"]], "csv (frame attribute)": [[6, "romcomma.base.classes.Frame.csv"]], "write() (frame method)": [[6, "romcomma.base.classes.Frame.write"]], "meta (model property)": [[7, "romcomma.base.classes.Model.META"]], "model (class in romcomma.base.classes)": [[7, "romcomma.base.classes.Model"]], "model.data (class in romcomma.base.classes)": [[7, "romcomma.base.classes.Model.Data"]], "model.data.namedtuple (class in romcomma.base.classes)": [[7, "romcomma.base.classes.Model.Data.NamedTuple"]], "notimplemented (model.data.namedtuple attribute)": [[7, "romcomma.base.classes.Model.Data.NamedTuple.NotImplemented"]], "__init__() (model method)": [[7, "romcomma.base.classes.Model.__init__"]], "copy() (model.data static method)": [[7, "romcomma.base.classes.Model.Data.copy"]], "count() (model.data.namedtuple method)": [[7, "romcomma.base.classes.Model.Data.NamedTuple.count"]], "delete() (model.data static method)": [[7, "romcomma.base.classes.Model.Data.delete"]], "empty() (model.data static method)": [[7, "romcomma.base.classes.Model.Data.empty"]], "index() (model.data.namedtuple method)": [[7, "romcomma.base.classes.Model.Data.NamedTuple.index"]], "move() (model.data method)": [[7, "romcomma.base.classes.Model.Data.move"]], "read() (model.data class method)": [[7, "romcomma.base.classes.Model.Data.read"]], "romcomma.gpf.base": [[22, "module-romcomma.gpf.base"]], "variance (class in romcomma.gpf.base)": [[23, "romcomma.gpf.base.Variance"]], "__init__() (variance method)": [[23, "romcomma.gpf.base.Variance.__init__"]], "cholesky (variance property)": [[23, "romcomma.gpf.base.Variance.cholesky"]], "name (variance property)": [[23, "romcomma.gpf.base.Variance.name"]], "name_scope (variance property)": [[23, "romcomma.gpf.base.Variance.name_scope"]], "non_trainable_variables (variance property)": [[23, "romcomma.gpf.base.Variance.non_trainable_variables"]], "shape (variance property)": [[23, "romcomma.gpf.base.Variance.shape"]], "submodules (variance property)": [[23, "romcomma.gpf.base.Variance.submodules"]], "trainable_variables (variance property)": [[23, "romcomma.gpf.base.Variance.trainable_variables"]], "value (variance property)": [[23, "romcomma.gpf.base.Variance.value"]], "value_times_eye() (variance method)": [[23, "romcomma.gpf.base.Variance.value_times_eye"]], "value_to_broadcast (variance property)": [[23, "romcomma.gpf.base.Variance.value_to_broadcast"]], "variables (variance property)": [[23, "romcomma.gpf.base.Variance.variables"]], "with_name_scope() (variance class method)": [[23, "romcomma.gpf.base.Variance.with_name_scope"]], "romcomma.gpf.kernels": [[24, "module-romcomma.gpf.kernels"]], "k_d() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.K_d"]], "k_d_apply_variance() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.K_d_apply_variance"]], "k_d_unit_variance() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.K_d_unit_variance"]], "k_diag() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.K_diag"]], "k_unit_variance() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.K_unit_variance"]], "mostationary (class in romcomma.gpf.kernels)": [[25, "romcomma.gpf.kernels.MOStationary"]], "__init__() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.__init__"]], "ard (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.ard"]], "lengthscales_neat (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.lengthscales_neat"]], "name (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.name"]], "name_scope (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.name_scope"]], "non_trainable_variables (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.non_trainable_variables"]], "on_separate_dims() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.on_separate_dims"]], "scaled_difference_matrix() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.scaled_difference_matrix"]], "slice() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.slice"]], "slice_cov() (mostationary method)": [[25, "romcomma.gpf.kernels.MOStationary.slice_cov"]], "submodules (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.submodules"]], "trainable_variables (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.trainable_variables"]], "variables (mostationary property)": [[25, "romcomma.gpf.kernels.MOStationary.variables"]], "with_name_scope() (mostationary class method)": [[25, "romcomma.gpf.kernels.MOStationary.with_name_scope"]], "k_d() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.K_d"]], "k_d_apply_variance() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.K_d_apply_variance"]], "k_d_unit_variance() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.K_d_unit_variance"]], "k_diag() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.K_diag"]], "k_unit_variance() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.K_unit_variance"]], "rbf (class in romcomma.gpf.kernels)": [[26, "romcomma.gpf.kernels.RBF"]], "__init__() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.__init__"], [42, "romcomma.gpr.kernels.RBF.__init__"]], "ard (rbf property)": [[26, "romcomma.gpf.kernels.RBF.ard"]], "lengthscales_neat (rbf property)": [[26, "romcomma.gpf.kernels.RBF.lengthscales_neat"]], "name (rbf property)": [[26, "romcomma.gpf.kernels.RBF.name"]], "name_scope (rbf property)": [[26, "romcomma.gpf.kernels.RBF.name_scope"]], "non_trainable_variables (rbf property)": [[26, "romcomma.gpf.kernels.RBF.non_trainable_variables"]], "on_separate_dims() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.on_separate_dims"]], "scaled_difference_matrix() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.scaled_difference_matrix"]], "slice() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.slice"]], "slice_cov() (rbf method)": [[26, "romcomma.gpf.kernels.RBF.slice_cov"]], "submodules (rbf property)": [[26, "romcomma.gpf.kernels.RBF.submodules"]], "trainable_variables (rbf property)": [[26, "romcomma.gpf.kernels.RBF.trainable_variables"]], "variables (rbf property)": [[26, "romcomma.gpf.kernels.RBF.variables"]], "with_name_scope() (rbf class method)": [[26, "romcomma.gpf.kernels.RBF.with_name_scope"]], "romcomma.gpf.likelihoods": [[27, "module-romcomma.gpf.likelihoods"]], "mogaussian (class in romcomma.gpf.likelihoods)": [[28, "romcomma.gpf.likelihoods.MOGaussian"]], "n() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.N"]], "__init__() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.__init__"]], "conditional_mean() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.conditional_mean"]], "conditional_variance() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.conditional_variance"]], "log_prob() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.log_prob"]], "name (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.name"]], "name_scope (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.name_scope"]], "non_trainable_variables (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.non_trainable_variables"]], "predict_log_density() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.predict_log_density"]], "predict_mean_and_var() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.predict_mean_and_var"]], "split_axis_shape() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.split_axis_shape"]], "submodules (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.submodules"]], "trainable_variables (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.trainable_variables"]], "variables (mogaussian property)": [[28, "romcomma.gpf.likelihoods.MOGaussian.variables"]], "variational_expectations() (mogaussian method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.variational_expectations"]], "with_name_scope() (mogaussian class method)": [[28, "romcomma.gpf.likelihoods.MOGaussian.with_name_scope"]], "romcomma.gpf.mean_functions": [[29, "module-romcomma.gpf.mean_functions"]], "momeanfunction (class in romcomma.gpf.mean_functions)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction"]], "__init__() (momeanfunction method)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.__init__"]], "functions (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.functions"]], "name (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.name"]], "name_scope (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.name_scope"]], "non_trainable_variables (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.non_trainable_variables"]], "output_dim (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.output_dim"]], "submodules (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.submodules"]], "trainable_variables (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.trainable_variables"]], "variables (momeanfunction property)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.variables"]], "with_name_scope() (momeanfunction class method)": [[30, "romcomma.gpf.mean_functions.MOMeanFunction.with_name_scope"]], "romcomma.gpf.models": [[31, "module-romcomma.gpf.models"]], "l (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.L"]], "m (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.M"]], "mogpr (class in romcomma.gpf.models)": [[32, "romcomma.gpf.models.MOGPR"]], "__init__() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.__init__"]], "calc_num_latent_gps() (mogpr static method)": [[32, "romcomma.gpf.models.MOGPR.calc_num_latent_gps"]], "calc_num_latent_gps_from_data() (mogpr static method)": [[32, "romcomma.gpf.models.MOGPR.calc_num_latent_gps_from_data"]], "log_marginal_likelihood() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.log_marginal_likelihood"]], "log_posterior_density() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.log_posterior_density"]], "log_prior_density() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.log_prior_density"]], "maximum_log_likelihood_objective() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.maximum_log_likelihood_objective"]], "name (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.name"]], "name_scope (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.name_scope"]], "non_trainable_variables (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.non_trainable_variables"]], "predict_f() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.predict_f"]], "predict_f_samples() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.predict_f_samples"]], "predict_log_density() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.predict_log_density"]], "predict_y() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.predict_y"]], "submodules (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.submodules"]], "trainable_variables (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.trainable_variables"]], "training_loss() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.training_loss"]], "training_loss_closure() (mogpr method)": [[32, "romcomma.gpf.models.MOGPR.training_loss_closure"]], "variables (mogpr property)": [[32, "romcomma.gpf.models.MOGPR.variables"]], "with_name_scope() (mogpr class method)": [[32, "romcomma.gpf.models.MOGPR.with_name_scope"]], "romcomma.gpr": [[39, "module-romcomma.gpr"]], "romcomma.gpr.kernels": [[40, "module-romcomma.gpr.kernels"]], "kernel (class in romcomma.gpr.kernels)": [[41, "romcomma.gpr.kernels.Kernel"]], "kernel.data (class in romcomma.gpr.kernels)": [[41, "romcomma.gpr.kernels.Kernel.Data"]], "l (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.L"]], "m (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.M"]], "meta (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.META"]], "namedtuple (kernel.data attribute)": [[41, "romcomma.gpr.kernels.Kernel.Data.NamedTuple"]], "type_identifier (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.TYPE_IDENTIFIER"]], "typefromidentifier() (kernel class method)": [[41, "romcomma.gpr.kernels.Kernel.TypeFromIdentifier"]], "typefromparameters() (kernel class method)": [[41, "romcomma.gpr.kernels.Kernel.TypeFromParameters"]], "__init__() (kernel method)": [[41, "romcomma.gpr.kernels.Kernel.__init__"]], "broadcast_parameters() (kernel method)": [[41, "romcomma.gpr.kernels.Kernel.broadcast_parameters"]], "copy() (kernel.data static method)": [[41, "romcomma.gpr.kernels.Kernel.Data.copy"]], "delete() (kernel.data static method)": [[41, "romcomma.gpr.kernels.Kernel.Data.delete"]], "empty() (kernel.data static method)": [[41, "romcomma.gpr.kernels.Kernel.Data.empty"]], "implementation (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.implementation"]], "is_covariant (kernel property)": [[41, "romcomma.gpr.kernels.Kernel.is_covariant"]], "move() (kernel.data method)": [[41, "romcomma.gpr.kernels.Kernel.Data.move"]], "optimize() (kernel method)": [[41, "romcomma.gpr.kernels.Kernel.optimize"]], "read() (kernel.data class method)": [[41, "romcomma.gpr.kernels.Kernel.Data.read"]], "l (rbf property)": [[42, "romcomma.gpr.kernels.RBF.L"]], "m (rbf property)": [[42, "romcomma.gpr.kernels.RBF.M"]], "meta (rbf attribute)": [[42, "romcomma.gpr.kernels.RBF.META"]], "namedtuple (rbf.data attribute)": [[42, "romcomma.gpr.kernels.RBF.Data.NamedTuple"]], "rbf (class in romcomma.gpr.kernels)": [[42, "romcomma.gpr.kernels.RBF"]], "rbf.data (class in romcomma.gpr.kernels)": [[42, "romcomma.gpr.kernels.RBF.Data"]], "type_identifier (rbf attribute)": [[42, "romcomma.gpr.kernels.RBF.TYPE_IDENTIFIER"]], "typefromidentifier() (rbf class method)": [[42, "romcomma.gpr.kernels.RBF.TypeFromIdentifier"]], "typefromparameters() (rbf class method)": [[42, "romcomma.gpr.kernels.RBF.TypeFromParameters"]], "broadcast_parameters() (rbf method)": [[42, "romcomma.gpr.kernels.RBF.broadcast_parameters"]], "copy() (rbf.data static method)": [[42, "romcomma.gpr.kernels.RBF.Data.copy"]], "delete() (rbf.data static method)": [[42, "romcomma.gpr.kernels.RBF.Data.delete"]], "empty() (rbf.data static method)": [[42, "romcomma.gpr.kernels.RBF.Data.empty"]], "implementation (rbf property)": [[42, "romcomma.gpr.kernels.RBF.implementation"]], "is_covariant (rbf property)": [[42, "romcomma.gpr.kernels.RBF.is_covariant"]], "move() (rbf.data method)": [[42, "romcomma.gpr.kernels.RBF.Data.move"]], "optimize() (rbf method)": [[42, "romcomma.gpr.kernels.RBF.optimize"]], "read() (rbf.data class method)": [[42, "romcomma.gpr.kernels.RBF.Data.read"]], "romcomma.gpr.models": [[43, "module-romcomma.gpr.models"]], "gpr (class in romcomma.gpr.models)": [[44, "romcomma.gpr.models.GPR"]], "gpr.data (class in romcomma.gpr.models)": [[44, "romcomma.gpr.models.GPR.Data"]], "kernel_folder_name (gpr property)": [[44, "romcomma.gpr.models.GPR.KERNEL_FOLDER_NAME"]], "k_cho (gpr property)": [[44, "romcomma.gpr.models.GPR.K_cho"]], "k_inv_y (gpr property)": [[44, "romcomma.gpr.models.GPR.K_inv_Y"]], "l (gpr property)": [[44, "romcomma.gpr.models.GPR.L"]], "m (gpr property)": [[44, "romcomma.gpr.models.GPR.M"]], "meta (gpr property)": [[44, "romcomma.gpr.models.GPR.META"]], "n (gpr property)": [[44, "romcomma.gpr.models.GPR.N"]], "namedtuple (gpr.data attribute)": [[44, "romcomma.gpr.models.GPR.Data.NamedTuple"]], "x (gpr property)": [[44, "romcomma.gpr.models.GPR.X"]], "y (gpr property)": [[44, "romcomma.gpr.models.GPR.Y"]], "__init__() (gpr method)": [[44, "romcomma.gpr.models.GPR.__init__"]], "broadcast_parameters() (gpr method)": [[44, "romcomma.gpr.models.GPR.broadcast_parameters"]], "copy() (gpr.data static method)": [[44, "romcomma.gpr.models.GPR.Data.copy"]], "delete() (gpr.data static method)": [[44, "romcomma.gpr.models.GPR.Data.delete"]], "empty() (gpr.data static method)": [[44, "romcomma.gpr.models.GPR.Data.empty"]], "fold (gpr property)": [[44, "romcomma.gpr.models.GPR.fold"]], "implementation (gpr property)": [[44, "romcomma.gpr.models.GPR.implementation"]], "move() (gpr.data method)": [[44, "romcomma.gpr.models.GPR.Data.move"]], "predict() (gpr method)": [[44, "romcomma.gpr.models.GPR.predict"]], "read() (gpr.data class method)": [[44, "romcomma.gpr.models.GPR.Data.read"]], "test() (gpr method)": [[44, "romcomma.gpr.models.GPR.test"]], "likelihood (class in romcomma.gpr.models)": [[45, "romcomma.gpr.models.Likelihood"]], "likelihood.data (class in romcomma.gpr.models)": [[45, "romcomma.gpr.models.Likelihood.Data"]], "meta (likelihood property)": [[45, "romcomma.gpr.models.Likelihood.META"]], "namedtuple (likelihood.data attribute)": [[45, "romcomma.gpr.models.Likelihood.Data.NamedTuple"]], "__init__() (likelihood method)": [[45, "romcomma.gpr.models.Likelihood.__init__"]], "copy() (likelihood.data static method)": [[45, "romcomma.gpr.models.Likelihood.Data.copy"]], "delete() (likelihood.data static method)": [[45, "romcomma.gpr.models.Likelihood.Data.delete"]], "empty() (likelihood.data static method)": [[45, "romcomma.gpr.models.Likelihood.Data.empty"]], "move() (likelihood.data method)": [[45, "romcomma.gpr.models.Likelihood.Data.move"]], "optimize() (likelihood method)": [[45, "romcomma.gpr.models.Likelihood.optimize"]], "read() (likelihood.data class method)": [[45, "romcomma.gpr.models.Likelihood.Data.read"]], "kernel_folder_name (mogp attribute)": [[46, "romcomma.gpr.models.MOGP.KERNEL_FOLDER_NAME"]], "k_cho (mogp property)": [[46, "romcomma.gpr.models.MOGP.K_cho"]], "k_inv_y (mogp property)": [[46, "romcomma.gpr.models.MOGP.K_inv_Y"]], "l (mogp property)": [[46, "romcomma.gpr.models.MOGP.L"]], "m (mogp property)": [[46, "romcomma.gpr.models.MOGP.M"]], "meta (mogp property)": [[46, "romcomma.gpr.models.MOGP.META"]], "mogp (class in romcomma.gpr.models)": [[46, "romcomma.gpr.models.MOGP"]], "mogp.data (class in romcomma.gpr.models)": [[46, "romcomma.gpr.models.MOGP.Data"]], "n (mogp property)": [[46, "romcomma.gpr.models.MOGP.N"]], "namedtuple (mogp.data attribute)": [[46, "romcomma.gpr.models.MOGP.Data.NamedTuple"]], "x (mogp property)": [[46, "romcomma.gpr.models.MOGP.X"]], "y (mogp property)": [[46, "romcomma.gpr.models.MOGP.Y"]], "__init__() (mogp method)": [[46, "romcomma.gpr.models.MOGP.__init__"]], "broadcast_parameters() (mogp method)": [[46, "romcomma.gpr.models.MOGP.broadcast_parameters"]], "check_k_inv_y() (mogp method)": [[46, "romcomma.gpr.models.MOGP.check_K_inv_Y"]], "copy() (mogp.data static method)": [[46, "romcomma.gpr.models.MOGP.Data.copy"]], "delete() (mogp.data static method)": [[46, "romcomma.gpr.models.MOGP.Data.delete"]], "empty() (mogp.data static method)": [[46, "romcomma.gpr.models.MOGP.Data.empty"]], "fold (mogp property)": [[46, "romcomma.gpr.models.MOGP.fold"]], "implementation (mogp property)": [[46, "romcomma.gpr.models.MOGP.implementation"]], "move() (mogp.data method)": [[46, "romcomma.gpr.models.MOGP.Data.move"]], "optimize() (mogp method)": [[46, "romcomma.gpr.models.MOGP.optimize"]], "predict() (mogp method)": [[46, "romcomma.gpr.models.MOGP.predict"]], "read() (mogp.data class method)": [[46, "romcomma.gpr.models.MOGP.Data.read"]], "test() (mogp method)": [[46, "romcomma.gpr.models.MOGP.test"]], "romcomma.gsa": [[47, "module-romcomma.gsa"]], "romcomma.gsa.calculators": [[58, "module-romcomma.gsa.calculators"]], "closedsobol (class in romcomma.gsa.calculators)": [[59, "romcomma.gsa.calculators.ClosedSobol"]], "options (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.OPTIONS"]], "__init__() (closedsobol method)": [[59, "romcomma.gsa.calculators.ClosedSobol.__init__"]], "marginalize() (closedsobol method)": [[59, "romcomma.gsa.calculators.ClosedSobol.marginalize"]], "name (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.name"]], "name_scope (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.name_scope"]], "non_trainable_variables (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.non_trainable_variables"]], "submodules (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.submodules"]], "trainable_variables (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.trainable_variables"]], "variables (closedsobol property)": [[59, "romcomma.gsa.calculators.ClosedSobol.variables"]], "with_name_scope() (closedsobol class method)": [[59, "romcomma.gsa.calculators.ClosedSobol.with_name_scope"]], "closedsobolwitherror (class in romcomma.gsa.calculators)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError"]], "closedsobolwitherror.rankequation (class in romcomma.gsa.calculators)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation"]], "closedsobolwitherror.rankequations (class in romcomma.gsa.calculators)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations"]], "diagonal (closedsobolwitherror.rankequations attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations.DIAGONAL"]], "mixed (closedsobolwitherror.rankequations attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations.MIXED"]], "options (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.OPTIONS"]], "__init__() (closedsobolwitherror method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.__init__"]], "count() (closedsobolwitherror.rankequation method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.count"]], "count() (closedsobolwitherror.rankequations method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations.count"]], "i (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.i"]], "index() (closedsobolwitherror.rankequation method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.index"]], "index() (closedsobolwitherror.rankequations method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquations.index"]], "j (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.j"]], "k (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.k"]], "l (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.RankEquation.l"]], "marginalize() (closedsobolwitherror method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.marginalize"]], "name (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.name"]], "name_scope (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.name_scope"]], "non_trainable_variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.non_trainable_variables"]], "submodules (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.submodules"]], "trainable_variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.trainable_variables"]], "variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.variables"]], "with_name_scope() (closedsobolwitherror class method)": [[60, "romcomma.gsa.calculators.ClosedSobolWithError.with_name_scope"]], "closedsobolwithrotation (class in romcomma.gsa.calculators)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation"]], "options (closedsobolwithrotation attribute)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.OPTIONS"]], "__init__() (closedsobolwithrotation method)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.__init__"]], "marginalize() (closedsobolwithrotation method)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.marginalize"]], "name (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.name"]], "name_scope (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.name_scope"]], "non_trainable_variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.non_trainable_variables"]], "submodules (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.submodules"]], "trainable_variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.trainable_variables"]], "variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.variables"]], "with_name_scope() (closedsobolwithrotation class method)": [[61, "romcomma.gsa.calculators.ClosedSobolWithRotation.with_name_scope"]], "romcomma.gsa.models": [[62, "module-romcomma.gsa.models"]], "gsa (class in romcomma.gsa.models)": [[63, "romcomma.gsa.models.GSA"]], "gsa.data (class in romcomma.gsa.models)": [[63, "romcomma.gsa.models.GSA.Data"]], "gsa.data.namedtuple (class in romcomma.gsa.models)": [[63, "romcomma.gsa.models.GSA.Data.NamedTuple"]], "gsa.kind (class in romcomma.gsa.models)": [[63, "romcomma.gsa.models.GSA.Kind"]], "meta (gsa attribute)": [[63, "romcomma.gsa.models.GSA.META"]], "notimplemented (gsa.data.namedtuple attribute)": [[63, "romcomma.gsa.models.GSA.Data.NamedTuple.NotImplemented"]], "__init__() (gsa method)": [[63, "romcomma.gsa.models.GSA.__init__"]], "calculator() (gsa class method)": [[63, "romcomma.gsa.models.GSA.calculator"]], "copy() (gsa.data static method)": [[63, "romcomma.gsa.models.GSA.Data.copy"]], "count() (gsa.data.namedtuple method)": [[63, "romcomma.gsa.models.GSA.Data.NamedTuple.count"]], "delete() (gsa.data static method)": [[63, "romcomma.gsa.models.GSA.Data.delete"]], "empty() (gsa.data static method)": [[63, "romcomma.gsa.models.GSA.Data.empty"]], "index() (gsa.data.namedtuple method)": [[63, "romcomma.gsa.models.GSA.Data.NamedTuple.index"]], "move() (gsa.data method)": [[63, "romcomma.gsa.models.GSA.Data.move"]], "read() (gsa.data class method)": [[63, "romcomma.gsa.models.GSA.Data.read"]], "meta (sobol property)": [[64, "romcomma.gsa.models.Sobol.META"]], "namedtuple (sobol.data attribute)": [[64, "romcomma.gsa.models.Sobol.Data.NamedTuple"]], "sobol (class in romcomma.gsa.models)": [[64, "romcomma.gsa.models.Sobol"]], "sobol.data (class in romcomma.gsa.models)": [[64, "romcomma.gsa.models.Sobol.Data"]], "sobol.kind (class in romcomma.gsa.models)": [[64, "romcomma.gsa.models.Sobol.Kind"]], "__init__() (sobol method)": [[64, "romcomma.gsa.models.Sobol.__init__"]], "calculator() (sobol class method)": [[64, "romcomma.gsa.models.Sobol.calculator"]], "copy() (sobol.data static method)": [[64, "romcomma.gsa.models.Sobol.Data.copy"]], "delete() (sobol.data static method)": [[64, "romcomma.gsa.models.Sobol.Data.delete"]], "empty() (sobol.data static method)": [[64, "romcomma.gsa.models.Sobol.Data.empty"]], "move() (sobol.data method)": [[64, "romcomma.gsa.models.Sobol.Data.move"]], "read() (sobol.data class method)": [[64, "romcomma.gsa.models.Sobol.Data.read"]], "romcomma.rom": [[65, "module-romcomma.rom"]], "romcomma.rom.old": [[66, "module-romcomma.rom.old"]], "romcomma.run": [[67, "module-romcomma.run"]], "romcomma.run.function": [[71, "module-romcomma.run.function"]], "all (in module romcomma.run.function)": [[72, "romcomma.run.function.ALL"]], "ishigami (in module romcomma.run.function)": [[73, "romcomma.run.function.ISHIGAMI"]], "oakley2004 (in module romcomma.run.function)": [[74, "romcomma.run.function.OAKLEY2004"]], "sobol_g (in module romcomma.run.function)": [[75, "romcomma.run.function.SOBOL_G"]], "scalar (class in romcomma.run.function)": [[76, "romcomma.run.function.Scalar"]], "__init__() (scalar method)": [[76, "romcomma.run.function.Scalar.__init__"]], "vector (class in romcomma.run.function)": [[77, "romcomma.run.function.Vector"]], "__init__() (vector method)": [[77, "romcomma.run.function.Vector.__init__"]], "clear() (vector method)": [[77, "romcomma.run.function.Vector.clear"]], "concat() (vector class method)": [[77, "romcomma.run.function.Vector.concat"]], "copy() (vector method)": [[77, "romcomma.run.function.Vector.copy"]], "fromkeys() (vector method)": [[77, "romcomma.run.function.Vector.fromkeys"]], "get() (vector method)": [[77, "romcomma.run.function.Vector.get"]], "items() (vector method)": [[77, "romcomma.run.function.Vector.items"]], "keys() (vector method)": [[77, "romcomma.run.function.Vector.keys"]], "meta (vector property)": [[77, "romcomma.run.function.Vector.meta"]], "pop() (vector method)": [[77, "romcomma.run.function.Vector.pop"]], "popitem() (vector method)": [[77, "romcomma.run.function.Vector.popitem"]], "setdefault() (vector method)": [[77, "romcomma.run.function.Vector.setdefault"]], "subvector() (vector method)": [[77, "romcomma.run.function.Vector.subVector"]], "update() (vector method)": [[77, "romcomma.run.function.Vector.update"]], "values() (vector method)": [[77, "romcomma.run.function.Vector.values"]], "linspace() (in module romcomma.run.function)": [[78, "romcomma.run.function.linspace"]], "romcomma.run.summarised": [[86, "module-romcomma.run.summarised"]], "gpr() (in module romcomma.run.summarised)": [[87, "romcomma.run.summarised.gpr"]], "gsa() (in module romcomma.run.summarised)": [[88, "romcomma.run.summarised.gsa"]]}})