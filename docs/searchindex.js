Search.setIndex({"docnames": ["glossary", "index", "pages/package/reference", "pages/package/romcomma.base", "pages/package/romcomma.base.classes", "pages/package/romcomma.base.classes.Data", "pages/package/romcomma.base.classes.Frame", "pages/package/romcomma.base.classes.Model", "pages/package/romcomma.base.definitions", "pages/package/romcomma.base.definitions.EFFECTIVELY_ZERO", "pages/package/romcomma.base.definitions.FLOAT", "pages/package/romcomma.base.definitions.INT", "pages/package/romcomma.base.definitions.NP", "pages/package/romcomma.base.definitions.TF", "pages/package/romcomma.data", "pages/package/romcomma.data.storage", "pages/package/romcomma.data.storage.Fold", "pages/package/romcomma.data.storage.Frame", "pages/package/romcomma.data.storage.Normalization", "pages/package/romcomma.data.storage.Repository", "pages/package/romcomma.gpf", "pages/package/romcomma.gpf.base", "pages/package/romcomma.gpf.base.Variance", "pages/package/romcomma.gpf.kernels", "pages/package/romcomma.gpf.kernels.MOStationary", "pages/package/romcomma.gpf.kernels.RBF", "pages/package/romcomma.gpf.likelihoods", "pages/package/romcomma.gpf.likelihoods.MOGaussian", "pages/package/romcomma.gpf.mean_functions", "pages/package/romcomma.gpf.mean_functions.MOMeanFunction", "pages/package/romcomma.gpf.models", "pages/package/romcomma.gpf.models.MOGPR", "pages/package/romcomma.gpf.tests", "pages/package/romcomma.gpf.tests.covariance", "pages/package/romcomma.gpf.tests.increment", "pages/package/romcomma.gpf.tests.kernel", "pages/package/romcomma.gpf.tests.likelihood", "pages/package/romcomma.gpf.tests.regression_data", "pages/package/romcomma.gpr", "pages/package/romcomma.gpr.kernels", "pages/package/romcomma.gpr.kernels.Kernel", "pages/package/romcomma.gpr.kernels.RBF", "pages/package/romcomma.gpr.models", "pages/package/romcomma.gpr.models.GPR", "pages/package/romcomma.gpr.models.Likelihood", "pages/package/romcomma.gpr.models.MOGP", "pages/package/romcomma.gsa", "pages/package/romcomma.gsa.base", "pages/package/romcomma.gsa.base.Calibrator", "pages/package/romcomma.gsa.base.Gaussian", "pages/package/romcomma.gsa.base.det", "pages/package/romcomma.gsa.base.log_pdf", "pages/package/romcomma.gsa.base.mean", "pages/package/romcomma.gsa.base.ms", "pages/package/romcomma.gsa.base.pdf", "pages/package/romcomma.gsa.base.rms", "pages/package/romcomma.gsa.base.sos", "pages/package/romcomma.gsa.base.sym_check", "pages/package/romcomma.gsa.calibrators", "pages/package/romcomma.gsa.calibrators.ClosedSobol", "pages/package/romcomma.gsa.calibrators.ClosedSobolWithError", "pages/package/romcomma.gsa.calibrators.ClosedSobolWithRotation", "pages/package/romcomma.gsa.models", "pages/package/romcomma.gsa.models.GSA", "pages/package/romcomma.gsa.models.Sobol", "pages/package/romcomma.rom", "pages/package/romcomma.rom.old", "pages/package/romcomma.run", "pages/package/romcomma.run.context", "pages/package/romcomma.run.context.Environment", "pages/package/romcomma.run.context.Timer", "pages/package/romcomma.run.function", "pages/package/romcomma.run.function.ALL", "pages/package/romcomma.run.function.ISHIGAMI", "pages/package/romcomma.run.function.OAKLEY2004", "pages/package/romcomma.run.function.SOBOL_G", "pages/package/romcomma.run.function.Scalar", "pages/package/romcomma.run.function.Vector", "pages/package/romcomma.run.function.linspace", "pages/package/romcomma.run.results", "pages/package/romcomma.run.results.Collect", "pages/package/romcomma.run.results.copy", "pages/package/romcomma.run.sample", "pages/package/romcomma.run.sample.DOE", "pages/package/romcomma.run.sample.Function", "pages/package/romcomma.run.sample.GaussianNoise", "pages/package/romcomma.run.summarised", "pages/package/romcomma.run.summarised.gpr", "pages/package/romcomma.run.summarised.gsa", "pages/package/romcomma.user", "pages/package/romcomma.user.benchmark_gsa", "pages/package/romcomma.user.benchmark_gsa.BASE_FOLDER", "pages/package/romcomma.user.gpr_from_function", "pages/package/romcomma.user.gpr_from_function.DOE", "pages/package/romcomma.user.gpr_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gpr_from_function.IS_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gpr_from_function.IS_READ", "pages/package/romcomma.user.gpr_from_function.K", "pages/package/romcomma.user.gpr_from_function.Ms", "pages/package/romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gpr_from_function.Ns", "pages/package/romcomma.user.gpr_from_function.READ", "pages/package/romcomma.user.gpr_from_function.ROOT", "pages/package/romcomma.user.gpr_from_function.ROTATIONS", "pages/package/romcomma.user.gsa_from_function", "pages/package/romcomma.user.gsa_from_function.DOE", "pages/package/romcomma.user.gsa_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gsa_from_function.IS_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gsa_from_function.IS_READ", "pages/package/romcomma.user.gsa_from_function.K", "pages/package/romcomma.user.gsa_from_function.KINDS", "pages/package/romcomma.user.gsa_from_function.Ms", "pages/package/romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gsa_from_function.Ns", "pages/package/romcomma.user.gsa_from_function.READ", "pages/package/romcomma.user.gsa_from_function.ROOT", "pages/package/romcomma.user.gsa_from_function.ROTATIONS", "pages/package/romcomma.user.repo_from_csv", "pages/package/romcomma.user.repo_from_csv.ADD_NOISE", "pages/package/romcomma.user.repo_from_csv.CSV", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_csv.K", "pages/package/romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_csv.ROOT", "pages/package/romcomma.user.repo_from_function", "pages/package/romcomma.user.repo_from_function.DOE", "pages/package/romcomma.user.repo_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_function.K", "pages/package/romcomma.user.repo_from_function.Ms", "pages/package/romcomma.user.repo_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_function.Ns", "pages/package/romcomma.user.repo_from_function.READ", "pages/package/romcomma.user.repo_from_function.ROOT", "pages/package/romcomma.user.repo_from_function.ROTATIONS", "pages/package/romcomma.user.toy", "pages/package/romcomma.user.toy.ROOT", "pages/start"], "filenames": ["glossary.rst", "index.rst", "pages\\package\\reference.rst", "pages\\package\\romcomma.base.rst", "pages\\package\\romcomma.base.classes.rst", "pages\\package\\romcomma.base.classes.Data.rst", "pages\\package\\romcomma.base.classes.Frame.rst", "pages\\package\\romcomma.base.classes.Model.rst", "pages\\package\\romcomma.base.definitions.rst", "pages\\package\\romcomma.base.definitions.EFFECTIVELY_ZERO.rst", "pages\\package\\romcomma.base.definitions.FLOAT.rst", "pages\\package\\romcomma.base.definitions.INT.rst", "pages\\package\\romcomma.base.definitions.NP.rst", "pages\\package\\romcomma.base.definitions.TF.rst", "pages\\package\\romcomma.data.rst", "pages\\package\\romcomma.data.storage.rst", "pages\\package\\romcomma.data.storage.Fold.rst", "pages\\package\\romcomma.data.storage.Frame.rst", "pages\\package\\romcomma.data.storage.Normalization.rst", "pages\\package\\romcomma.data.storage.Repository.rst", "pages\\package\\romcomma.gpf.rst", "pages\\package\\romcomma.gpf.base.rst", "pages\\package\\romcomma.gpf.base.Variance.rst", "pages\\package\\romcomma.gpf.kernels.rst", "pages\\package\\romcomma.gpf.kernels.MOStationary.rst", "pages\\package\\romcomma.gpf.kernels.RBF.rst", "pages\\package\\romcomma.gpf.likelihoods.rst", "pages\\package\\romcomma.gpf.likelihoods.MOGaussian.rst", "pages\\package\\romcomma.gpf.mean_functions.rst", "pages\\package\\romcomma.gpf.mean_functions.MOMeanFunction.rst", "pages\\package\\romcomma.gpf.models.rst", "pages\\package\\romcomma.gpf.models.MOGPR.rst", "pages\\package\\romcomma.gpf.tests.rst", "pages\\package\\romcomma.gpf.tests.covariance.rst", "pages\\package\\romcomma.gpf.tests.increment.rst", "pages\\package\\romcomma.gpf.tests.kernel.rst", "pages\\package\\romcomma.gpf.tests.likelihood.rst", "pages\\package\\romcomma.gpf.tests.regression_data.rst", "pages\\package\\romcomma.gpr.rst", "pages\\package\\romcomma.gpr.kernels.rst", "pages\\package\\romcomma.gpr.kernels.Kernel.rst", "pages\\package\\romcomma.gpr.kernels.RBF.rst", "pages\\package\\romcomma.gpr.models.rst", "pages\\package\\romcomma.gpr.models.GPR.rst", "pages\\package\\romcomma.gpr.models.Likelihood.rst", "pages\\package\\romcomma.gpr.models.MOGP.rst", "pages\\package\\romcomma.gsa.rst", "pages\\package\\romcomma.gsa.base.rst", "pages\\package\\romcomma.gsa.base.Calibrator.rst", "pages\\package\\romcomma.gsa.base.Gaussian.rst", "pages\\package\\romcomma.gsa.base.det.rst", "pages\\package\\romcomma.gsa.base.log_pdf.rst", "pages\\package\\romcomma.gsa.base.mean.rst", "pages\\package\\romcomma.gsa.base.ms.rst", "pages\\package\\romcomma.gsa.base.pdf.rst", "pages\\package\\romcomma.gsa.base.rms.rst", "pages\\package\\romcomma.gsa.base.sos.rst", "pages\\package\\romcomma.gsa.base.sym_check.rst", "pages\\package\\romcomma.gsa.calibrators.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobol.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobolWithError.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobolWithRotation.rst", "pages\\package\\romcomma.gsa.models.rst", "pages\\package\\romcomma.gsa.models.GSA.rst", "pages\\package\\romcomma.gsa.models.Sobol.rst", "pages\\package\\romcomma.rom.rst", "pages\\package\\romcomma.rom.old.rst", "pages\\package\\romcomma.run.rst", "pages\\package\\romcomma.run.context.rst", "pages\\package\\romcomma.run.context.Environment.rst", "pages\\package\\romcomma.run.context.Timer.rst", "pages\\package\\romcomma.run.function.rst", "pages\\package\\romcomma.run.function.ALL.rst", "pages\\package\\romcomma.run.function.ISHIGAMI.rst", "pages\\package\\romcomma.run.function.OAKLEY2004.rst", "pages\\package\\romcomma.run.function.SOBOL_G.rst", "pages\\package\\romcomma.run.function.Scalar.rst", "pages\\package\\romcomma.run.function.Vector.rst", "pages\\package\\romcomma.run.function.linspace.rst", "pages\\package\\romcomma.run.results.rst", "pages\\package\\romcomma.run.results.Collect.rst", "pages\\package\\romcomma.run.results.copy.rst", "pages\\package\\romcomma.run.sample.rst", "pages\\package\\romcomma.run.sample.DOE.rst", "pages\\package\\romcomma.run.sample.Function.rst", "pages\\package\\romcomma.run.sample.GaussianNoise.rst", "pages\\package\\romcomma.run.summarised.rst", "pages\\package\\romcomma.run.summarised.gpr.rst", "pages\\package\\romcomma.run.summarised.gsa.rst", "pages\\package\\romcomma.user.rst", "pages\\package\\romcomma.user.benchmark_gsa.rst", "pages\\package\\romcomma.user.benchmark_gsa.BASE_FOLDER.rst", "pages\\package\\romcomma.user.gpr_from_function.rst", "pages\\package\\romcomma.user.gpr_from_function.DOE.rst", "pages\\package\\romcomma.user.gpr_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gpr_from_function.K.rst", "pages\\package\\romcomma.user.gpr_from_function.Ms.rst", "pages\\package\\romcomma.user.gpr_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gpr_from_function.Ns.rst", "pages\\package\\romcomma.user.gpr_from_function.READ.rst", "pages\\package\\romcomma.user.gpr_from_function.ROOT.rst", "pages\\package\\romcomma.user.gpr_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.rst", "pages\\package\\romcomma.user.gsa_from_function.DOE.rst", "pages\\package\\romcomma.user.gsa_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gsa_from_function.K.rst", "pages\\package\\romcomma.user.gsa_from_function.KINDS.rst", "pages\\package\\romcomma.user.gsa_from_function.Ms.rst", "pages\\package\\romcomma.user.gsa_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gsa_from_function.Ns.rst", "pages\\package\\romcomma.user.gsa_from_function.READ.rst", "pages\\package\\romcomma.user.gsa_from_function.ROOT.rst", "pages\\package\\romcomma.user.gsa_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.repo_from_csv.rst", "pages\\package\\romcomma.user.repo_from_csv.ADD_NOISE.rst", "pages\\package\\romcomma.user.repo_from_csv.CSV.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_csv.K.rst", "pages\\package\\romcomma.user.repo_from_csv.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_csv.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.rst", "pages\\package\\romcomma.user.repo_from_function.DOE.rst", "pages\\package\\romcomma.user.repo_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_function.K.rst", "pages\\package\\romcomma.user.repo_from_function.Ms.rst", "pages\\package\\romcomma.user.repo_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_function.Ns.rst", "pages\\package\\romcomma.user.repo_from_function.READ.rst", "pages\\package\\romcomma.user.repo_from_function.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.toy.rst", "pages\\package\\romcomma.user.toy.ROOT.rst", "pages\\start.rst"], "titles": ["Glossary", "rom-comma User Guide", "Module Reference", "romcomma.base", "romcomma.base.classes", "romcomma.base.classes.Data", "romcomma.base.classes.Frame", "romcomma.base.classes.Model", "romcomma.base.definitions", "romcomma.base.definitions.EFFECTIVELY_ZERO", "romcomma.base.definitions.FLOAT", "romcomma.base.definitions.INT", "romcomma.base.definitions.NP", "romcomma.base.definitions.TF", "romcomma.data", "romcomma.data.storage", "romcomma.data.storage.Fold", "romcomma.data.storage.Frame", "romcomma.data.storage.Normalization", "romcomma.data.storage.Repository", "romcomma.gpf", "romcomma.gpf.base", "romcomma.gpf.base.Variance", "romcomma.gpf.kernels", "romcomma.gpf.kernels.MOStationary", "romcomma.gpf.kernels.RBF", "romcomma.gpf.likelihoods", "romcomma.gpf.likelihoods.MOGaussian", "romcomma.gpf.mean_functions", "romcomma.gpf.mean_functions.MOMeanFunction", "romcomma.gpf.models", "romcomma.gpf.models.MOGPR", "romcomma.gpf.tests", "romcomma.gpf.tests.covariance", "romcomma.gpf.tests.increment", "romcomma.gpf.tests.kernel", "romcomma.gpf.tests.likelihood", "romcomma.gpf.tests.regression_data", "romcomma.gpr", "romcomma.gpr.kernels", "romcomma.gpr.kernels.Kernel", "romcomma.gpr.kernels.RBF", "romcomma.gpr.models", "romcomma.gpr.models.GPR", "romcomma.gpr.models.Likelihood", "romcomma.gpr.models.MOGP", "romcomma.gsa", "romcomma.gsa.base", "romcomma.gsa.base.Calibrator", "romcomma.gsa.base.Gaussian", "romcomma.gsa.base.det", "romcomma.gsa.base.log_pdf", "romcomma.gsa.base.mean", "romcomma.gsa.base.ms", "romcomma.gsa.base.pdf", "romcomma.gsa.base.rms", "romcomma.gsa.base.sos", "romcomma.gsa.base.sym_check", "romcomma.gsa.calibrators", "romcomma.gsa.calibrators.ClosedSobol", "romcomma.gsa.calibrators.ClosedSobolWithError", "romcomma.gsa.calibrators.ClosedSobolWithRotation", "romcomma.gsa.models", "romcomma.gsa.models.GSA", "romcomma.gsa.models.Sobol", "romcomma.rom", "romcomma.rom.old", "romcomma.run", "romcomma.run.context", "romcomma.run.context.Environment", "romcomma.run.context.Timer", "romcomma.run.function", "romcomma.run.function.ALL", "romcomma.run.function.ISHIGAMI", "romcomma.run.function.OAKLEY2004", "romcomma.run.function.SOBOL_G", "romcomma.run.function.Scalar", "romcomma.run.function.Vector", "romcomma.run.function.linspace", "romcomma.run.results", "romcomma.run.results.Collect", "romcomma.run.results.copy", "romcomma.run.sample", "romcomma.run.sample.DOE", "romcomma.run.sample.Function", "romcomma.run.sample.GaussianNoise", "romcomma.run.summarised", "romcomma.run.summarised.gpr", "romcomma.run.summarised.gsa", "romcomma.user", "romcomma.user.benchmark_gsa", "romcomma.user.benchmark_gsa.BASE_FOLDER", "romcomma.user.gpr_from_function", "romcomma.user.gpr_from_function.DOE", "romcomma.user.gpr_from_function.FUNCTION_VECTOR", "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gpr_from_function.IS_COVARIANT", "romcomma.user.gpr_from_function.IS_ISOTROPIC", "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gpr_from_function.IS_READ", "romcomma.user.gpr_from_function.K", "romcomma.user.gpr_from_function.Ms", "romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "romcomma.user.gpr_from_function.Ns", "romcomma.user.gpr_from_function.READ", "romcomma.user.gpr_from_function.ROOT", "romcomma.user.gpr_from_function.ROTATIONS", "romcomma.user.gsa_from_function", "romcomma.user.gsa_from_function.DOE", "romcomma.user.gsa_from_function.FUNCTION_VECTOR", "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gsa_from_function.IS_COVARIANT", "romcomma.user.gsa_from_function.IS_ISOTROPIC", "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gsa_from_function.IS_READ", "romcomma.user.gsa_from_function.K", "romcomma.user.gsa_from_function.KINDS", "romcomma.user.gsa_from_function.Ms", "romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "romcomma.user.gsa_from_function.Ns", "romcomma.user.gsa_from_function.READ", "romcomma.user.gsa_from_function.ROOT", "romcomma.user.gsa_from_function.ROTATIONS", "romcomma.user.repo_from_csv", "romcomma.user.repo_from_csv.ADD_NOISE", "romcomma.user.repo_from_csv.CSV", "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_csv.K", "romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "romcomma.user.repo_from_csv.ROOT", "romcomma.user.repo_from_function", "romcomma.user.repo_from_function.DOE", "romcomma.user.repo_from_function.FUNCTION_VECTOR", "romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_function.K", "romcomma.user.repo_from_function.Ms", "romcomma.user.repo_from_function.NOISE_MAGNITUDES", "romcomma.user.repo_from_function.Ns", "romcomma.user.repo_from_function.READ", "romcomma.user.repo_from_function.ROOT", "romcomma.user.repo_from_function.ROTATIONS", "romcomma.user.toy", "romcomma.user.toy.ROOT", "Getting Started"], "terms": {"reduc": [1, 16, 63, 64, 88], "order": [0, 1, 63, 64, 77, 80, 147], "model": [1, 4, 5, 13, 40, 41, 60, 88, 100, 116, 147], "via": [1, 59, 60, 61, 63, 64, 147], "global": [0, 1, 19, 46, 147], "sensit": [0, 1, 46, 147], "analysi": [0, 1, 46, 147], "us": [0, 1, 7, 13, 16, 17, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 63, 64, 69, 84, 85, 87, 147], "gaussian": [0, 1, 20, 27, 28, 31, 38, 42, 43, 45, 51, 54, 63, 64, 85, 98, 114, 125, 126, 128, 136, 147], "process": [0, 1, 20, 27, 31, 38, 42, 43, 45, 63, 64, 79, 147], "regress": [0, 1, 20, 31, 38, 42, 147], "robert": 1, "A": [0, 1, 5, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 59, 60, 61, 63, 76, 77, 78, 80, 81, 84, 87, 88, 118, 147], "milton": [0, 1, 147], "The": [1, 2, 5, 6, 7, 10, 11, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 54, 59, 60, 61, 63, 64, 67, 69, 70, 72, 76, 77, 78, 80, 81, 83, 84, 87, 88, 91, 93, 94, 101, 102, 103, 104, 106, 109, 110, 117, 119, 120, 121, 123, 127, 130, 131, 132, 134, 135, 138, 139, 140, 141, 143, 146, 147], "univers": 1, "sheffield": 1, "thi": [0, 1, 5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 63, 64, 69, 70, 76, 77, 84, 85, 87, 88, 147], "document": [1, 91, 106, 123, 127, 132, 143, 146, 147], "i": [0, 1, 5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 63, 64, 69, 70, 77, 80, 81, 83, 84, 87, 88, 93, 96, 97, 98, 99, 103, 109, 112, 113, 114, 115, 120, 128, 129, 131, 134, 136, 137, 140, 147], "current": [1, 13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 147], "under": [1, 66, 84, 147], "construct": [1, 6, 13, 22, 40, 41, 59, 60, 61, 63, 64, 66, 77, 80, 84, 85, 87], "get": [0, 1, 13, 77], "start": [0, 1, 5, 7, 13, 60, 63, 78], "instal": 1, "packag": [0, 32, 147], "structur": 15, "refer": [0, 1, 13, 45, 147], "romcomma": [1, 147], "base": [0, 1, 16, 17, 18, 19, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85, 91, 147], "data": [1, 6, 7, 13, 27, 29, 31, 40, 41, 43, 44, 45, 63, 64, 76, 77, 84, 85, 87, 91, 106, 123, 127, 132, 143, 146, 147], "gpf": [1, 147], "gpr": [0, 1, 31, 59, 60, 61, 63, 64, 86, 95, 96, 97, 100, 111, 112, 113, 116, 147], "gsa": [0, 1, 86, 118, 147], "pd": [0, 2, 6, 16, 17, 18, 19, 80], "alias": [], "panda": [0, 2, 6, 13, 16, 17, 19], "code": [27, 40], "np": [0, 2, 6, 7, 13, 40, 41, 43, 44, 45, 72, 73, 74, 75, 76, 78, 85, 94, 110, 135], "numpi": [0, 2, 12, 13, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61], "tf": [0, 2, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 63, 64, 69], "tensorflow": [0, 2, 13, 22, 27, 31], "gf": [0, 2, 27], "gpflow": [0, 2, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 43, 45, 69], "ddev": [], "standard": [0, 2, 63, 64, 72, 73, 94, 110, 135], "deviat": [0, 2], "index": [0, 1, 5, 6, 7, 13, 16, 17, 19, 58, 60, 63, 64, 80, 84, 88, 147], "modul": [0, 1, 3, 8, 14, 20, 22, 24, 25, 27, 29, 31, 38, 46, 59, 60, 61, 65, 67, 71, 89, 90, 92, 108, 125, 133, 145], "search": 1, "page": [1, 147], "rom": [0, 2, 86, 91, 106, 123, 127, 132, 143, 146, 147], "comma": [0, 2, 91, 106, 123, 127, 132, 143, 146, 147], "librari": [2, 3, 13, 20], "class": [3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 71, 76, 77, 79, 80, 82, 83, 84, 85, 147], "definit": [3, 22, 24, 25, 27, 147], "underpin": [3, 47, 64], "entir": [3, 63, 64], "contain": [13, 16, 19, 21, 23, 26, 30, 31, 32, 39, 42, 58, 77, 80, 81, 84, 87, 88], "paramet": [5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 93, 94, 109, 110, 134, 135], "folder": [0, 2, 5, 7, 16, 19, 40, 41, 43, 44, 45, 63, 64, 80, 81, 84, 87, 88, 91, 106, 123, 132, 143, 146, 147], "read_paramet": [], "fals": [7, 16, 19, 24, 25, 31, 40, 41, 44, 63, 64, 80, 83, 84, 85, 87, 88, 93, 95, 96, 97, 98, 99, 105, 109, 111, 112, 113, 114, 115, 122, 126, 128, 129, 134, 136, 137, 142], "kwarg": [5, 6, 7, 16, 17, 19, 27, 31, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 69, 76, 77, 80, 84, 87, 88], "sourc": [5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 69, 70, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 93, 109, 134], "abc": [5, 7, 48], "abstract": [5, 7, 24, 40, 43, 63], "ani": [5, 6, 7, 13, 17, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 51, 59, 60, 61, 63, 64, 80, 83, 84, 85, 88, 147], "implement": [7, 13, 24, 31, 40, 41, 42, 43, 45, 63, 69, 87, 147], "gener": [0, 7, 16, 17, 19, 31, 40, 41, 45, 63, 64, 79, 84, 85, 94, 110, 135, 147], "file": [6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 80, 84, 88, 100, 116, 125, 127], "storag": [7, 14, 77, 85, 147], "handl": [7, 16], "latter": 7, "dealt": 7, "each": [7, 13, 16, 19, 29, 31, 43, 45, 49, 51, 77, 83, 84, 87, 88, 93, 109, 134], "subclass": [7, 31, 44, 63, 64], "overrid": [7, 59, 60, 61, 63, 64], "valu": [5, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 63, 64, 77, 78, 80, 84], "its": [0, 7, 13, 22, 24, 25, 27, 29, 31, 40, 41, 59, 60, 61, 83, 87, 93, 109, 134, 147], "own": [7, 22, 24, 25, 27, 29, 31, 59, 60, 61], "type": [5, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 22, 24, 25, 27, 31, 34, 40, 41, 43, 44, 45, 49, 51, 57, 59, 60, 61, 63, 64, 72, 73, 74, 75, 77, 78, 80, 84, 87, 88, 94, 110, 135], "namedtupl": [5, 7, 40, 41, 43, 44, 45, 60, 63, 64], "defin": [7, 13, 16, 17, 19, 24, 25, 29, 31, 40, 41], "set": [5, 7, 13, 40, 41, 43, 44, 45, 64, 69, 77], "take": [7, 49, 51], "matric": [7, 24, 25], "also": [7, 13, 24, 25, 29, 31], "mai": [7, 13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 147], "includ": [7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 43, 45, 49, 59, 60, 61, 77, 84, 147], "an": [0, 5, 7, 13, 16, 17, 19, 22, 24, 25, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 63, 64, 77, 80, 83, 84, 85, 87, 93, 105, 109, 122, 134, 142, 147], "optim": [13, 27, 31, 43, 45, 87], "method": [0, 5, 6, 7, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 48, 49, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85, 147], "option": [6, 13, 16, 17, 18, 19, 45, 64, 80, 84, 88, 92, 108, 125, 133], "store": [5, 6, 7, 16, 40, 41, 43, 44, 45, 58, 63, 64], "json": [7, 16, 19], "which": [7, 13, 17, 18, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 59, 60, 61, 63, 76, 77, 78, 81, 83, 84, 87, 88, 93, 103, 109, 120, 131, 134, 140, 147], "default": [5, 7, 13, 16, 17, 19, 24, 25, 27, 31, 40, 41, 43, 44, 45, 59, 60, 63, 64, 69, 70, 77, 83, 84, 87, 88, 93, 109, 134], "cl": 7, "pathlik": [], "bool": [6, 7, 16, 17, 19, 24, 25, 31, 40, 41, 43, 44, 45, 49, 51, 63, 64, 69, 70, 80, 83, 84, 85, 87, 88, 93, 95, 96, 97, 98, 99, 100, 105, 109, 111, 112, 113, 114, 115, 116, 122, 126, 128, 129, 134, 136, 137, 142], "matrix": [5, 6, 7, 12, 13, 16, 19, 22, 24, 25, 27, 31, 40, 41, 43, 44, 45, 63, 64, 72, 73, 74, 75, 76, 83, 84, 85, 93, 94, 109, 110, 134, 135], "__init__": [5, 6, 7, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 48, 49, 59, 60, 61, 63, 64, 76, 77, 80, 83, 84, 85], "constructor": [5, 7, 24, 25, 27, 44, 63, 64], "call": [5, 6, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 59, 60, 61, 63, 64, 76, 147], "all": [7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 44, 59, 60, 61, 63, 64, 77, 84, 88, 91, 106, 123, 127, 132, 143, 146], "matter": [7, 40, 41, 44, 63, 64], "prioriti": [7, 40, 41, 44, 63, 64], "str": [5, 6, 7, 16, 17, 19, 22, 40, 41, 43, 44, 45, 53, 55, 56, 59, 60, 61, 63, 64, 69, 70, 77, 80, 81, 84, 85, 87, 88], "path": [5, 6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 63, 64, 80, 81, 84, 88, 106, 123, 127, 132, 143, 146], "locat": [0, 7, 16, 19, 31, 40, 41, 44, 83, 93, 109, 134, 147], "If": [5, 6, 7, 13, 16, 17, 18, 24, 25, 31, 40, 41, 43, 44, 45, 49, 51, 60, 63, 64, 69, 77, 81, 84, 87, 88], "true": [6, 7, 13, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 70, 78, 83, 87, 93, 109, 134], "ar": [5, 7, 13, 16, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 51, 59, 60, 61, 63, 64, 77, 87, 88, 147], "read": [5, 6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 63, 64, 87, 100, 116, 126, 127], "from": [5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 54, 59, 60, 61, 63, 64, 71, 77, 80, 85, 87, 100, 116, 125, 147], "otherwis": [6, 7, 17, 24, 25, 40, 41, 43, 44, 45, 69, 77, 87], "ndarrai": [5, 6, 7, 12, 16, 24, 25, 27, 31, 40, 41, 43, 44, 45, 63, 64, 76, 78, 83, 84, 85, 87], "field": [5, 7, 40, 41, 43, 44, 45, 60, 63, 64], "replac": [7, 40, 41, 43, 44, 45, 87], "after": [7, 22, 40, 41, 44, 107, 124, 144], "attribut": [5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 59, 60, 61, 63, 64, 71, 76, 77, 80, 83, 84, 85, 90, 92, 108, 125, 133, 145], "none": [6, 13, 16, 18, 19, 24, 25, 31, 43, 45, 63, 64, 77, 80, 84, 87, 88, 96, 97, 100, 107, 112, 113, 116, 124], "placehold": [7, 13, 63], "must": [5, 7, 13, 19, 31, 40, 41, 43, 44, 45, 63, 64], "overridden": [5, 7, 63], "notimpl": [5, 7, 63], "arrai": [5, 6, 7, 12, 13, 40, 41, 63, 144], "Not": [63, 64], "dtype": [5, 6, 7, 10, 11, 13, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 63], "u15": [], "alia": [12, 13, 40, 41, 43, 44, 45, 60, 64, 83], "number": [5, 7, 13, 16, 19, 27, 29, 31, 40, 41, 43, 45, 49, 51, 60, 63, 76, 83, 84, 85, 93, 101, 102, 104, 109, 117, 119, 121, 130, 134, 138, 139, 141], "0": [5, 7, 13, 16, 18, 22, 24, 25, 27, 29, 31, 45, 49, 51, 59, 60, 61, 63, 64, 78, 85, 88, 103, 120, 127, 131, 140, 143, 144, 146], "count": [5, 7, 49, 51, 60, 63], "return": [5, 6, 7, 10, 11, 13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 51, 54, 57, 59, 60, 61, 63, 64, 72, 73, 74, 75, 77, 78, 83, 84, 87, 88, 93, 94, 109, 110, 134, 135], "occurr": [5, 7, 60, 63], "stop": [5, 7, 60, 63, 78], "9223372036854775807": [5, 7, 60, 63], "first": [0, 5, 7, 22, 24, 25, 27, 29, 31, 59, 60, 61, 63, 64, 77, 147], "rais": [5, 6, 7, 13, 16, 19, 40, 41, 43, 45, 60, 63, 77, 80, 81, 84, 87, 88], "valueerror": [5, 7, 13, 60, 63], "present": [5, 7, 60, 63, 77], "broadcast_valu": 6, "model_nam": [], "target_shap": 6, "is_diagon": 6, "broadcast": [6, 22, 27, 29, 31, 40, 41, 43, 45, 49, 51, 87, 88], "ordin": [5, 7, 31, 40, 41, 43, 44, 45, 49, 51, 63, 64, 83, 93, 109, 134], "onli": [13, 16, 19, 22, 24, 25, 27, 45, 88], "error": [13, 40, 41, 43, 45, 60, 63, 64, 88], "report": 70, "name": [13, 22, 24, 25, 27, 29, 31, 43, 45, 59, 60, 61, 69, 70, 77, 80, 84, 87, 88], "whose": [22, 24, 25, 27, 29, 31, 59, 60, 61, 63, 64], "we": [13, 22, 31, 147], "tupl": [6, 13, 16, 19, 22, 24, 25, 27, 31, 40, 41, 43, 45, 77, 98, 99, 102, 103, 104, 114, 115, 119, 120, 121, 128, 129, 131, 136, 137, 139, 140, 141], "int": [6, 16, 19, 22, 27, 29, 31, 40, 41, 43, 45, 49, 51, 57, 59, 60, 61, 63, 64, 76, 78, 83, 84, 85, 88, 93, 101, 102, 104, 109, 117, 119, 121, 130, 134, 138, 139, 141], "shape": [6, 13, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 51, 59, 60, 61, 78], "whether": [6, 16, 19, 24, 25, 40, 41, 43, 45, 63, 64, 70, 80, 83, 84, 87, 88, 93, 95, 96, 97, 98, 99, 100, 105, 109, 111, 112, 113, 114, 115, 116, 122, 126, 128, 129, 134, 136, 137, 142], "zero": [6, 18, 29, 31, 45, 85], "off": 6, "diagon": [6, 22, 24, 25, 27, 31, 40, 41, 49, 51, 54, 60, 88], "element": [6, 13, 27], "squar": [0, 6, 25, 40, 41, 147], "self": [5, 6, 7, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 59, 60, 61, 63, 64, 76, 77, 80, 84, 85], "chain": [5, 6, 7, 16, 19, 40, 41, 43, 44, 45, 49, 63, 64], "indexerror": [6, 16, 19, 40, 41, 43, 45, 84], "imposs": 6, "csv": [6, 16, 17, 19, 80, 84, 125], "assertionerror": [], "write": [6, 13, 17, 80], "chang": [6, 13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "unless": [16, 19, 63, 64, 84, 88], "properti": [7, 13, 16, 17, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 59, 60, 61, 63, 64, 77, 84, 85], "dict": [6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 77, 80, 84, 85, 87, 88], "param": [40, 41, 54, 59, 60, 61, 64], "shorthand": [], "save": [], "_paramet": [], "essenti": [5, 40], "back": [6, 16, 17, 43, 45], "note": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 69], "lazi": [], "explicitli": 13, "design": [16, 19, 43, 45, 82, 84], "most": [5, 13, 147], "simpl": 5, "wrapper": [5, 29], "annoyingli": 5, "underscor": 5, "shouldn": [], "t": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "need": [13, 31, 63, 64, 88], "doe": [13, 31, 77, 82, 84, 94, 110, 135], "record": [5, 7, 16, 19, 40, 41, 43, 44, 45, 63, 64], "kei": [5, 7, 13, 40, 41, 43, 44, 45, 63, 64, 77, 80], "initi": [5, 7, 13, 16, 17, 18, 40, 41, 43, 44, 45, 63, 64, 85], "pair": [5, 7, 27, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 77], "precis": [5, 7, 40, 41, 43, 44, 45, 63, 64], "It": [13, 31], "caller": 13, "": [0, 13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 77, 147], "respons": [43, 45], "ensur": 13, "everi": [16, 19], "miss": [5, 7, 40, 41, 43, 44, 45, 63, 64, 80], "receiv": [5, 7, 40, 41, 43, 44, 45, 63, 64], "so": [5, 7, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 88], "import": [], "constant": [8, 13, 27], "hint": [], "function": [0, 8, 13, 25, 27, 28, 29, 31, 32, 38, 46, 47, 49, 51, 68, 79, 82, 83, 86, 92, 94, 103, 107, 108, 110, 120, 124, 131, 133, 135, 140, 144, 147], "object": [6, 12, 13, 17, 18, 19, 27, 29, 31, 40, 49, 59, 60, 61, 63, 64, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 94, 110, 135], "extend": [0, 12, 13, 27, 147], "tensor": [5, 7, 12, 13, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64], "tensor1": [12, 13], "tensor2": [12, 13], "vector": [0, 12, 13, 43, 45, 49, 51, 84, 94, 107, 110, 124, 135, 144, 147], "covector": [12, 13], "tensor3": [12, 13], "tensor4": [12, 13], "tensor5": [12, 13], "tensor6": [12, 13], "tensor7": [12, 13], "tensor8": [12, 13], "op": 13, "value_index": 13, "nativeobject": 13, "repres": [0, 13, 27, 147], "multidimension": 13, "singl": [13, 31, 40, 41, 58, 63, 64, 88], "known": [13, 29], "when": [9, 13, 80, 87, 88], "program": 13, "main": [0, 13, 147], "manipul": 13, "pass": [6, 13, 17, 22, 24, 25, 27, 29, 31, 45, 59, 60, 61, 64, 69, 80, 84, 87], "around": 13, "ha": [0, 13, 18, 24, 25, 31, 77, 84, 88, 107, 124, 144, 147], "follow": [13, 18, 22, 24, 25, 27, 29, 31, 45, 59, 60, 61, 77, 88, 147], "float32": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 69], "int32": 13, "string": [13, 40, 41, 69, 70], "exampl": [13, 73, 74, 75, 89, 90], "support": [13, 20, 31], "eager": [13, 69], "execut": 13, "graph": [13, 31], "In": [0, 13, 77, 147], "oper": [13, 69, 70], "evalu": [13, 24, 27], "immedi": 13, "comput": [13, 27, 31, 49, 51], "later": 13, "below": [13, 147], "multipl": [13, 31], "result": [13, 22, 24, 25, 27, 29, 31, 43, 45, 59, 60, 61, 63, 64, 84, 87, 88, 147], "calcul": [13, 18, 31, 49, 51, 54, 58, 59, 60, 61, 63, 64, 88], "some": [13, 31, 147], "c": [0, 13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 69, 91, 106, 123, 127, 132, 143, 146, 147], "1": [13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 59, 60, 61, 63, 64, 78, 84, 88, 91, 103, 117, 118, 123, 143], "2": [13, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 77, 88, 106, 118, 123, 127, 138, 143], "3": [13, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 73, 74, 75, 88, 91, 106, 118], "4": [13, 123], "d": [13, 24, 25, 31, 77], "e": [13, 24, 27, 28, 31, 43, 45, 77, 80, 88, 147], "matmul": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "print": [13, 69, 70], "7": [13, 74, 127, 139], "dure": [13, 24, 25, 27], "you": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61, 63, 64, 88], "discov": 13, "your": [13, 147], "actual": 13, "eagertensor": 13, "intern": [13, 49, 51], "detail": [0, 13, 16, 17, 19, 147], "give": [13, 16, 19, 29, 43, 45, 49, 51, 84], "access": 13, "common": 13, "wai": 13, "rank": [0, 13, 31, 49, 51, 147], "size": [13, 31], "dimens": [13, 22, 24, 25, 27, 31, 40, 41, 43, 45, 49, 51, 76, 83, 84, 93, 109, 134], "alwai": 13, "fulli": 13, "partial": 13, "produc": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "input": [0, 13, 16, 19, 24, 25, 31, 40, 41, 43, 45, 76, 83, 84, 92, 93, 94, 102, 107, 108, 109, 110, 119, 124, 133, 134, 135, 139, 144, 147], "case": [13, 77], "possibl": 13, "find": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "time": [13, 69, 70], "special": 13, "avail": [13, 87], "see": [6, 13, 31, 45], "variabl": [13, 16, 22, 24, 25, 27, 29, 31, 59, 60, 61], "spars": [13, 31], "sparsetensor": 13, "raggedtensor": 13, "caution": 13, "datafram": [5, 6, 7, 13, 16, 17, 18, 19, 40, 41, 43, 44, 45, 63, 64, 125], "underli": [13, 63, 64], "buffer": 13, "re": [13, 31], "python": [0, 13, 147], "b": [13, 22, 24, 25, 27, 29, 31, 45, 59, 60, 61], "int64": 13, "subject": 13, "user": [13, 62, 67, 84, 86, 87, 147], "should": [13, 24, 31, 45, 49, 51, 63, 64], "reli": 13, "behaviour": [13, 24, 25], "For": [13, 22, 24, 25, 27, 29, 31, 49, 59, 60, 61, 63, 64, 88], "more": [13, 31, 77], "guid": [13, 147], "http": [0, 13, 16, 17, 19, 31, 45, 71, 147], "org": [13, 16, 17, 19, 45], "consum": 13, "list": [13, 16, 19, 22, 24, 25, 27, 29, 31, 57, 59, 60, 61, 87, 88, 118, 147], "devic": [13, 69, 80], "eval": 13, "feed_dict": 13, "session": 13, "compat": 13, "v1": 13, "within": [13, 16, 19, 45, 81, 83, 93, 109, 134], "do": [13, 43, 45, 63, 64, 118], "preced": 13, "n": [13, 16, 18, 19, 22, 24, 25, 27, 31, 43, 45, 49, 51, 83, 84, 85, 93, 109, 127, 134], "befor": [13, 16, 19, 49, 51, 84], "invok": 13, "have": [5, 7, 13, 17, 24, 25, 27, 63, 87, 88], "been": [0, 13, 18, 27, 87, 88, 107, 124, 144, 147], "launch": 13, "either": [13, 77], "specifi": [13, 19, 24, 25, 40, 41, 43, 45, 49, 63, 64, 77, 87], "dictionari": [13, 59, 63, 64, 77], "map": 13, "feed": 13, "run": [1, 10, 11, 13, 94, 110, 135, 147], "descript": 13, "valid": 13, "correspond": [13, 24, 77], "experimental_ref": 13, "deprec": 13, "remov": [13, 77], "futur": [13, 31], "version": [13, 27, 78], "instruct": 13, "updat": [13, 16, 17, 19, 77, 88], "ref": 13, "instead": [13, 43, 45, 84], "get_shap": 13, "tensorshap": 13, "5": [13, 101, 119, 130], "6": [13, 102], "equival": 13, "build": 13, "kera": 13, "unknown": 13, "10": 13, "batch": [13, 31, 49, 51], "infer": 13, "regist": 13, "determin": [13, 22, 24, 25, 27, 29, 31, 49, 59, 60, 61], "without": [6, 13, 58], "kernel": [13, 31, 43, 45, 87, 88, 97, 113, 147], "convert": [13, 40, 41], "debug": 13, "provid": [13, 77, 85, 87], "earli": 13, "trace": 13, "being": [13, 63, 64, 69, 70, 88, 126], "concret": 13, "www": 13, "concrete_funct": 13, "def": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "my_matmul": 13, "propag": 13, "extent": 13, "f": [13, 27, 29, 31, 43, 45, 77, 88], "get_concrete_funct": 13, "tensorspec": 13, "fail": [13, 95, 111], "missmatch": 13, "can": [5, 7, 13, 16, 24, 25, 27, 31, 63], "detect": 13, "cf": 13, "traceback": 13, "recent": 13, "last": [13, 24, 27, 77], "equal": [9, 13, 103, 120, 131, 140], "addit": 13, "inform": 13, "about": 13, "ensure_shap": 13, "set_shap": 13, "augment": 13, "my_fun": 13, "output": [0, 13, 16, 19, 20, 24, 25, 31, 40, 41, 43, 45, 49, 51, 54, 87, 88, 98, 103, 114, 120, 125, 126, 128, 131, 136, 140, 147], "hashabl": 13, "primari": [13, 67], "api": [13, 71], "put": 13, "__hash__": 13, "longer": 13, "except": [13, 80, 87, 88, 95, 111], "x": [13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 45, 59, 60, 61, 72, 73, 74, 75, 76, 77, 94, 110, 135], "y": [13, 16, 18, 19, 27, 31, 40, 41, 43, 45], "z": [13, 43, 45, 49, 51], "tensor_set": 13, "typeerror": [13, 16, 19], "unhash": 13, "tensor_dict": 13, "five": 13, "ten": 13, "deref": 13, "origin": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "recommend": 13, "becaus": 13, "better": 13, "check": [13, 24, 25, 27, 43, 45], "creat": [13, 16, 17, 19, 63, 64, 77, 84, 92, 105, 108, 122, 125, 133, 142], "guarante": 13, "compil": [13, 31], "With": 13, "assert": [13, 60], "here": [13, 31], "match": [13, 49, 51, 85], "new": [13, 16, 19, 31, 40, 41, 77, 101, 105, 117, 122, 130, 138, 142], "allow": 13, "axi": [13, 24, 27], "incompat": 13, "suppli": [13, 49, 51, 84], "merg": 13, "given": [13, 27, 31, 77], "merge_with": 13, "224": 13, "cannot": 13, "alon": 13, "know": 13, "imag": 13, "dataset": [0, 13, 19, 147], "28": 13, "load_imag": 13, "filenam": 13, "raw": 13, "io": [13, 71], "read_fil": 13, "decode_png": 13, "channel": 13, "final": [13, 27, 59, 60, 61, 63, 64], "similarli": 13, "parse_tensor": 13, "could": 13, "even": [13, 147], "serial": 13, "2d": 13, "my_pars": 13, "string_tensor": 13, "out_typ": 13, "concrete_pars": 13, "make": [13, 16, 19, 147], "sure": [13, 63, 64, 88], "work": [13, 27], "ones": [13, 22, 24, 25, 27, 29, 31, 59, 60, 61], "serialize_tensor": 13, "t2": 13, "appli": [13, 16, 18, 76, 84, 94, 98, 107, 110, 114, 124, 128, 135, 136, 144, 147], "exist": [5, 7, 13, 16, 40, 41, 43, 44, 45, 63, 64, 80, 84, 105, 122, 142], "runtim": [13, 147], "incorrect": 13, "inconsist": 13, "between": [13, 16, 19, 25, 40, 41, 84, 98, 114, 128, 136], "static": [5, 7, 13, 31, 40, 41, 43, 44, 45, 63, 64, 83], "modifi": [13, 74, 75], "still": 13, "though": 13, "tensorshapeproto": 13, "thei": [13, 24, 25, 88, 147], "slice": [13, 24, 25, 59, 60, 61, 77], "pairofint": 13, "parent": [16, 22, 24, 25, 27, 29, 31, 43, 44, 45, 59, 60, 61, 147], "k": [16, 19, 25, 27, 43, 45, 60, 77, 80, 84], "repositori": [16, 80, 81, 84, 87, 88, 91, 92, 101, 105, 106, 108, 117, 122, 123, 125, 130, 132, 133, 138, 142, 143, 146], "meta": [7, 16, 19, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 77, 85, 88], "equip": 16, "test_data": [16, 43, 45, 87], "addition": 16, "dimension": [16, 31, 40, 41, 43, 45, 78, 84, 85, 88], "m": [0, 16, 19, 24, 25, 31, 40, 41, 43, 45, 49, 51, 59, 60, 61, 63, 64, 73, 74, 75, 76, 83, 84, 88, 93, 109, 127, 134, 147], "creation": 16, "classmethod": [5, 7, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64, 77], "from_df": [16, 19], "column": [6, 16, 17, 19, 24, 25, 31, 80, 83, 84, 93, 109, 134], "lt": [16, 19, 63, 64], "test_x": 16, "head": [16, 19], "test_i": 16, "l": [16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 51, 60, 80, 84, 85], "x_rotat": 16, "rotat": [0, 16, 61, 84, 92, 108, 133, 147], "__x_rotat": 16, "cumul": 16, "normal": [16, 19, 22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 84, 95, 111], "train": [16, 19, 29, 31, 43, 45, 84], "test": [9, 16, 19, 43, 45, 71, 84, 87, 92, 108, 133, 147], "sampl": [16, 19, 27, 31, 43, 45, 92, 93, 104, 107, 108, 109, 121, 124, 133, 134, 141, 144, 147], "row": [16, 19, 24, 25, 31, 83, 84, 85, 93, 109, 134], "y_split": [16, 19], "split": [16, 19, 27], "just": [16, 17, 19], "lth": [16, 19], "rang": [16, 19, 59, 60, 61, 63, 64, 84, 88], "indic": [0, 16, 19, 24, 25, 59, 60, 61, 88, 147], "from_csv": [16, 19], "target": [16, 19], "metadata": [16, 19], "csv_option": [16, 17, 19], "pydata": [16, 17, 19], "doc": [16, 17, 19, 45], "stabl": [16, 17, 19], "read_csv": [6, 16, 17, 19, 80], "html": [16, 17, 19, 45, 71], "df": [16, 17, 18, 19, 27], "into_k_fold": [16, 19, 84], "shuffle_before_fold": [16, 19, 84], "repo": [16, 19, 81, 84, 87, 88], "absolut": [16, 19, 84], "inclus": [16, 19, 84], "improp": [16, 19, 84], "both": [16, 19, 27, 31, 84], "To": [16, 19, 31, 84], "suppress": [16, 19, 84], "neg": [16, 19, 84], "integ": [16, 19, 31, 84], "shuffl": [16, 19, 84], "windowspath": [17, 91, 106, 123, 127, 132, 143, 146], "empti": [5, 7, 17, 40, 41, 43, 44, 45, 59, 63, 64, 69, 70, 77], "encapsul": [6, 17, 18, 49, 61, 63, 64], "overwrit": [17, 84, 105, 122, 142], "keyword": [17, 27], "argument": [17, 27], "relev": [0, 17, 147], "is_empti": 17, "accord": [17, 43, 45], "fold": [18, 19, 43, 45, 80, 81, 84, 87, 88, 101, 117, 130, 138], "assum": [18, 27, 31, 49, 51], "uniform": 18, "distribut": [18, 27, 43, 45, 78], "u": [18, 61], "invers": 18, "probabl": [18, 27, 31, 49, 51], "transform": 18, "mean": [18, 24, 25, 27, 28, 29, 31, 43, 45, 49, 51, 85], "unit": [18, 24, 25], "varianc": [0, 18, 24, 25, 27, 31, 40, 41, 43, 45, 49, 51, 54, 60, 84, 85, 88, 99, 115, 129, 137, 147], "alreadi": 18, "apply_to": 18, "undo_from": 18, "undo": 18, "unnorm": 18, "These": [19, 29], "analyz": [19, 59, 60, 61], "further": 19, "extens": [20, 21, 23, 26, 30, 80, 147], "multi": [20, 40, 41, 43, 45, 78], "mutual": 20, "depend": [20, 24, 43, 45, 87, 88, 147], "cholesky_diagonal_lower_bound": 22, "001": 22, "non": [5, 7, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 59, 60, 61, 63, 64], "float": [6, 9, 22, 31, 69, 76, 78, 85, 103, 120, 131, 140], "covari": [22, 24, 25, 27, 31, 40, 41, 49, 85, 88, 96, 112], "mutabl": 22, "through": 22, "cholesky_diagon": [22, 27], "cholesky_lower_triangl": 22, "symmetr": [22, 24, 25], "posit": [22, 24, 25, 27, 31], "express": [22, 27], "lower": [22, 27, 31, 51], "bound": [22, 27, 31], "choleski": [22, 27, 31, 43, 45, 49, 51, 54], "decomposit": [22, 27, 43, 45, 49, 51, 54], "triangular": [22, 51], "value_to_broadcast": 22, "readi": 22, "value_times_ey": 22, "cartesian": 22, "product": [22, 49, 51], "ey": 22, "transpos": 22, "ident": [22, 84], "multipli": [22, 24, 25, 43, 45], "transposit": [22, 57], "ctor": [22, 24, 25, 27, 29, 31, 59, 60, 61], "same": [22, 24, 25, 27, 29, 31, 59, 60, 61], "name_scop": [22, 24, 25, 27, 29, 31, 59, 60, 61], "instanc": [22, 24, 25, 27, 29, 31, 59, 60, 61, 77], "non_trainable_vari": [22, 24, 25, 27, 29, 31, 59, 60, 61], "sequenc": [6, 22, 24, 25, 27, 29, 31, 49, 59, 60, 61, 76, 77, 78, 85, 88], "trainabl": [22, 24, 25, 27, 29, 31, 40, 41, 44, 59, 60, 61], "submodul": [22, 24, 25, 27, 29, 31, 59, 60, 61], "reflect": [22, 24, 25, 27, 29, 31, 59, 60, 61], "perform": [22, 24, 25, 27, 29, 31, 59, 60, 61, 63, 64], "reason": [22, 24, 25, 27, 29, 31, 59, 60, 61], "wish": [22, 24, 25, 27, 29, 31, 59, 60, 61], "cach": [22, 24, 25, 27, 29, 31, 59, 60, 61], "don": [22, 24, 25, 27, 29, 31, 59, 60, 61], "expect": [22, 24, 25, 27, 29, 31, 59, 60, 61], "sort": [22, 24, 25, 27, 29, 31, 59, 60, 61], "recurs": [22, 24, 25, 27, 29, 31, 59, 60, 61, 81, 87, 88], "breadth": [22, 24, 25, 27, 29, 31, 59, 60, 61], "sub": [22, 24, 25, 27, 29, 31, 59, 60, 61], "found": [22, 24, 25, 27, 29, 31, 59, 60, 61, 77, 88], "trainable_vari": [22, 24, 25, 27, 29, 31, 59, 60, 61], "with_name_scop": [22, 24, 25, 27, 29, 31, 59, 60, 61], "decor": [22, 24, 25, 27, 29, 31, 59, 60, 61], "automat": [22, 24, 25, 27, 29, 31, 49, 51, 59, 60, 61, 69], "enter": [22, 24, 25, 27, 29, 31, 59, 60, 61], "scope": [22, 24, 25, 27, 29, 31, 59, 60, 61], "mymodul": [22, 24, 25, 27, 29, 31, 59, 60, 61], "__call__": [22, 24, 25, 27, 29, 31, 59, 60, 61], "hasattr": [22, 24, 25, 27, 29, 31, 59, 60, 61], "w": [22, 24, 25, 27, 29, 31, 59, 60, 61], "random": [22, 24, 25, 27, 29, 31, 59, 60, 61, 84], "abov": [22, 24, 25, 27, 29, 31, 59, 60, 61], "would": [22, 24, 25, 27, 29, 31, 59, 60, 61], "mod": [22, 24, 25, 27, 29, 31, 59, 60, 61], "my_modul": [22, 24, 25, 27, 29, 31, 59, 60, 61], "wrap": [22, 24, 25, 27, 29, 31, 59, 60, 61], "lengthscal": [24, 25, 31, 40, 41], "active_dim": [24, 25], "anisotropicstationari": 24, "stationari": 24, "deriv": 24, "k_d": [24, 25], "pairwis": 24, "differ": [24, 25], "scale": [24, 25, 43, 45, 76], "\u2113": [24, 25], "x2\u1d40": [24, 25], "signal": [24, 25, 103, 120, 131, 140], "is_lengthscales_train": [24, 25], "them": [24, 25], "lengthscales_neat": [24, 25], "k_diag": [24, 25], "k_unit_vari": [24, 25], "x2": [24, 25], "optimis": [24, 25, 95, 111], "where": [24, 25, 27, 31, 43], "k_d_unit_vari": [24, 25], "k_d_apply_vari": [24, 25], "reshap": [24, 25, 78], "ln": [24, 25, 27, 43, 45], "ard": [24, 25], "activ": [0, 24, 25, 147], "on_separate_dim": [24, 25], "other": [24, 25, 40, 41, 49, 51, 87, 88], "over": [24, 25, 31, 84, 87], "overlap": [24, 25], "separ": [24, 25], "scaled_difference_matrix": [24, 25], "correct": [24, 25], "slice_cov": [24, 25], "cov": [24, 25], "requir": [24, 25, 29, 31, 63, 64, 73, 74, 75, 88], "turn": [24, 25, 29], "flatten": [24, 25], "full": [24, 25, 60, 83], "mostationari": [25, 31], "radial": 25, "basi": [0, 25, 92, 107, 108, 124, 133, 144, 147], "exponenti": [25, 49, 51], "equat": 25, "\u03c3\u00b2": 25, "exp": 25, "\u00bd": 25, "r\u00b2": 25, "r": [25, 31, 80], "euclidean": 25, "distanc": 25, "point": [25, 31], "drawn": [25, 31], "gp": [31, 59, 60, 61, 63, 64, 87, 88], "infinit": 25, "differenti": 25, "quadraturelikelihood": 27, "multivari": [27, 85], "appropri": [27, 84], "uncertainti": 27, "associ": 27, "believ": 27, "veri": 27, "small": 27, "lead": 27, "numer": [27, 45, 49], "instabl": 27, "1e": [9, 27], "therefor": 27, "impos": 27, "symmetri": 27, "forward": 27, "concaten": [27, 72, 77, 80], "split_axis_shap": 27, "length": 27, "conditional_mean": 27, "condit": [0, 27, 147], "y\u2081": 27, "y\u2096": 27, "observation_dim": 27, "latent_dim": 27, "conditional_vari": 27, "margin": [0, 13, 27, 31, 59, 60, 61, 147], "var": 27, "log_prob": 27, "log": [27, 31], "densiti": [27, 31, 49, 51], "p": [27, 31], "observ": [27, 31], "pdf": [0, 27, 49, 51, 147], "predict_log_dens": [27, 31], "fmu": 27, "fvar": 27, "latent": [27, 31], "datum": 27, "predict": [27, 28, 29, 31, 43, 45], "q": 27, "predict_mean_and_var": 27, "dy": 27, "y\u00b2": 27, "\u00b2": 27, "variational_expect": 27, "statist": [27, 98, 114, 128, 136], "prior": [28, 29, 31], "output_dim": [29, 31], "meanfunct": 29, "mogpr": 29, "basic": [29, 47, 63, 64], "one": [29, 105, 122, 142], "constitut": 29, "absenc": 29, "union": 29, "mean_funct": [31, 147], "noise_vari": [31, 43, 45, 84], "gpmodel": 31, "internaldatatraininglossmixin": 31, "vanilla": 31, "likelihood": [31, 43, 45, 96, 112, 147], "treat": [31, 43, 45], "independ": [31, 43, 45, 87, 88, 98, 114, 128, 136], "mathbf": 31, "mathcal": 31, "sigma_n": 31, "maximis": [0, 31, 147], "_marginal_": 31, "hyperparamet": 31, "theta": [31, 61], "integr": 31, "form": 31, "kxx": 31, "momeanfunct": 31, "inputdata": 31, "outputdata": 31, "well": 31, "necessari": [31, 87], "maximum_log_likelihood_object": 31, "maximum": 31, "estim": 31, "maxim": 31, "g": [31, 69, 75, 88, 147], "elbo": 31, "variat": 31, "log_marginal_likelihood": 31, "predict_f": 31, "xnew": 31, "full_cov": 31, "full_output_cov": 31, "noisi": [31, 43, 45], "regardless": 31, "avoid": 31, "ambigu": 31, "calc_num_latent_gp": 31, "nice": 31, "awar": 31, "specif": [31, 63, 64], "howev": [31, 69], "num_latent_gp": 31, "bit": 31, "broken": 31, "fix": [31, 99, 115, 129, 137], "There": 31, "slightli": 31, "problemat": 31, "assumpt": 31, "github": [0, 31, 147], "com": [0, 31, 147], "issu": 31, "1343": 31, "calc_num_latent_gps_from_data": 31, "log_posterior_dens": 31, "arg": 31, "posterior": 31, "respect": 31, "gpmc": 31, "sgpmc": 31, "sensibli": 31, "log_prior_dens": 31, "sum": 31, "constrain": 31, "predict_f_sampl": 31, "num_sampl": 31, "draw": 31, "extra": 31, "correl": 31, "dens": 31, "num_data": 31, "uncorrel": 31, "predict_i": 31, "held": 31, "out": [31, 77], "training_loss": 31, "loss": 31, "training_loss_closur": 31, "conveni": 31, "closur": 31, "itself": [31, 84], "minim": [31, 45, 49, 51], "scipi": [31, 45, 69], "callabl": [31, 76, 83, 84], "interfac": [40, 43, 48, 62, 67, 86], "contract": 40, "share": [40, 41], "anisotrop": [87, 88], "isotrop": [40, 41, 43, 45, 87, 88, 97, 113], "mere": [40, 41, 44], "type_identifi": [40, 41], "__module__": 40, "__name__": 40, "typefromidentifi": [40, 41], "typeidentifi": [40, 41], "_typeidentifi": [40, 41], "typefromparamet": [40, 41], "recogn": [40, 41], "across": [40, 41, 80, 81, 87, 88], "broadcast_paramet": [40, 41, 43, 45], "variance_shap": [40, 41], "higher": [40, 41, 43, 45], "shrinkag": [40, 41, 43, 45], "unchang": [40, 41, 43, 45], "silent": [40, 41, 43, 45], "nop": [40, 41], "expans": [40, 41], "straightforward": [40, 41], "per": [40, 41], "attempt": [40, 41], "made": [40, 41], "shrink": [40, 41], "implemented_in_": [], "off_diagon": [], "is_read": [43, 45, 87], "is_independ": [], "is_isotrop": [43, 45, 87, 88], "kernel_paramet": [43, 45, 87], "gpinterfac": [], "setup": [], "hous": [43, 45, 80, 84, 87, 88, 91, 106, 123, 132, 143, 146], "restrict": [43, 45], "read_from_fil": [43, 45], "mi": [43, 45], "hyper": [43, 45], "bfg": 45, "algorithm": 45, "format": 45, "y_instead_of_f": [43, 45], "o": [0, 43, 45, 74, 147], "nois": [43, 45, 85, 92, 98, 99, 103, 108, 114, 115, 120, 125, 126, 128, 129, 131, 133, 136, 137, 140], "std": [43, 45], "k_cho": [43, 45], "lnxln": [43, 45], "els": [43, 45, 77], "k_inv_i": [43, 45], "pre": [43, 45], "loxln": [43, 45], "lo": [43, 45], "chosolv": [43, 45], "check_k_inv_i": 45, "FOR": 45, "purpos": [45, 49, 51], "toler": [9, 45], "kernel_folder_nam": [43, 45], "identifi": [], "never": [], "extern": [], "desir": [], "noth": [43, 45], "_fold": [43, 45], "compris": [43, 45, 77, 147], "three": [43, 45], "score": [43, 45], "frame": [5, 7, 40, 41, 43, 44, 45, 63, 64], "test_result_csv": [43, 45], "up": [43, 45, 69], "0001": [], "log_margin": [], "coeffici": [0, 147], "close": [58, 59, 60, 61, 63, 64, 88, 118], "wide": [59, 60, 61], "collect": [59, 60, 61, 84], "especi": [59, 60, 61], "_calcul": [59, 60, 61], "everyth": [59, 60, 61], "closedindex": [], "is_t_parti": [60, 64], "forc": [60, 64], "mm": 60, "effect": [60, 77], "free": 60, "wmm": [60, 64], "rankequ": 60, "j": 60, "mix": 60, "instantiat": [], "expon": [49, 54], "variance_cho_diagon": [49, 51, 54], "log_pdf": [49, 54], "variance_cho": [49, 51], "is_variance_diagon": [49, 51], "float64": [13, 49, 51], "lbunch": [49, 51], "logarithm": [49, 51], "un": [49, 51, 84], "det": [49, 51], "factor": [49, 51], "effici": [49, 51], "accuraci": [49, 51], "ratio": [49, 51, 103, 120, 131, 140], "popul": [49, 51], "adequ": [49, 51], "embrac": [49, 51], "consecut": [49, 51, 88], "insert": [49, 51, 77, 80], "usual": [49, 51], "sometim": [49, 51], "ein": [53, 55, 56], "lijk": [53, 55, 56], "kind": [63, 64, 88], "is_error_calcul": [63, 64, 88], "sobol": [0, 58, 59, 60, 61, 63, 75, 88, 147], "dispos": [63, 64], "useless": [63, 64], "onc": [63, 64], "total": [63, 64, 88, 118], "le": [63, 64], "outsid": [63, 64, 88, 147], "memori": [63, 64, 88], "intens": [63, 64, 88], "leav": [63, 64, 88], "flag": [63, 64, 88], "v": [77, 127], "stddev": [0, 2, 103, 120, 131, 140], "enum": [63, 64], "manag": [68, 69, 70], "environ": [10, 11], "undertak": [62, 87, 88], "ed": [69, 70], "what": [69, 70], "undertaken": [], "end": 69, "regex": 69, "pu": 69, "logic": 69, "alloc": 69, "straight": [6, 64, 69, 80, 84, 87], "inop": 69, "due": [69, 95, 111], "config": 69, "run_functions_eagerli": 69, "api_doc": [], "_": [0, 71, 147], "is_inlin": 70, "inlin": 70, "linebreak": 70, "top": 70, "tail": 70, "paragraph": 70, "taken": 71, "salib": 71, "readthedoc": 71, "en": 71, "latest": 71, "test_funct": 71, "ishigami": [72, 135], "balanc": [72, 73, 94, 110, 135], "scalar": [72, 73, 74, 75, 77, 94, 110, 135], "sin": [72, 73, 94, 110, 135], "oakley2004": [72, 135], "balanced_quad7": [72, 74, 135], "lin7": [72, 74, 135], "quad7": [72, 74, 135], "sobol_g": [72, 135], "strong5_2": [72, 75, 135], "strong5_4": [72, 75, 135], "weak5_2": [72, 75, 135], "oaklei": 74, "hagan": 74, "2004": 74, "loc": 76, "vectorlik": 76, "offset": 76, "functon": 77, "littl": 77, "than": 77, "item": [77, 147], "concat": 77, "subvector": 77, "pseudo": 77, "clear": 77, "copi": [5, 6, 7, 16, 19, 40, 41, 43, 44, 45, 63, 64, 77], "shallow": 77, "fromkei": 77, "iter": [6, 77], "like": [77, 84], "view": 77, "pop": 77, "keyerror": 77, "popitem": 77, "lifo": 77, "setdefault": 77, "lack": 77, "throughout": 78, "prod": 78, "endpoint": 78, "newshap": 78, "ignore_miss": 80, "minu": 80, "to_csv": [6, 80], "write_opt": 80, "float_format": 80, "6f": 80, "from_fold": 80, "dst": [16, 19, 80, 81], "is_existing_delet": 80, "destin": [5, 7, 40, 41, 43, 44, 45, 63, 64, 80], "delet": [5, 7, 40, 41, 43, 44, 45, 63, 64, 80], "recreat": 80, "src": 81, "rel": [81, 88], "filenotfounderror": [81, 87, 88], "ignore_except": [87, 88], "nearest": 87, "ancestor": 87, "isotropi": 87, "hierarchi": [1, 87], "continu": 87, "throw": 87, "aggreg": 87, "first_ord": [88, 118], "furthermor": 88, "ignor": [88, 95, 111], "encount": 88, "halt": 88, "experi": 82, "signatur": 83, "latin_hypercub": 83, "is_cent": [83, 93, 109, 134], "latin": [83, 93, 109, 134], "hypercub": [83, 93, 109, 134], "boolean": [83, 93, 109, 134], "centr": [83, 93, 109, 134], "cell": [83, 93, 109, 134], "randomli": [83, 93, 109, 134], "full_factori": 83, "factori": 83, "base_fold": [], "function_vector": 84, "overwrite_exist": 84, "gaussiannois": 84, "sit": 84, "experiment": 84, "noise_magnitud": 84, "homoskedast": [84, 85], "sub_fold": 84, "extra_column": 84, "stochastic_rot": [], "stochast": [0, 99, 115, 129, 137, 147], "rotate_fold": 84, "uniformli": 84, "un_rotate_fold": 84, "matrixlik": 85, "co": 85, "magnitud": 85, "is_stochast": [], "artifici": 85, "label": [63, 64, 85], "scheme": 85, "suitabl": 85, "__format__": 85, "cannib": [89, 90, 147], "fc1ram": [91, 106, 123, 127, 132, 143, 146], "research": [91, 106, 123, 127, 132, 143, 146], "dat": [91, 106, 123, 127, 132, 143, 146], "softwaretest": [91, 106, 123, 127, 132, 143, 146], "welcom": 147, "reduct": [0, 147], "novel": [0, 147], "approach": [0, 147], "subspac": [0, 147], "AS": [0, 147], "those": 147, "unfamiliar": 147, "hyperlink": 147, "semin": [], "mathemat": 147, "behind": 147, "softwar": 147, "cover": [0, 147], "paper": [0, 147], "peer": 147, "review": 147, "public": 147, "simpli": 147, "place": 147, "pythonpath": 147, "site": 147, "installation_test": 147, "anywher": 147, "pyproject": 147, "toml": 147, "organ": 147, "modular": 147, "old": 147, "context": [10, 11, 147], "script": [89, 90, 147], "No": 147, "tabl": 147, "expos": 147, "task": [], "highli": [], "advanc": 147, "achiev": [], "directori": [0, 2], "mathsf": 85, "mathtt": [], "ymbj": [], "abbr": [], "ymca": [], "glossari": [1, 2], "technic": [0, 147], "direct": 147, "regard": 147, "bespok": 147, "subsapc": [], "techniqu": [0, 147], "constantin": [0, 147], "2014": [0, 147], "align": [0, 147], "eigenvector": [0, 147], "jacobian": [0, 147], "assess": [0, 147], "system": [0, 147], "varieti": [0, 147], "broadli": [0, 147], "saltelli": [0, 147], "et": [0, 147], "al": [0, 147], "2007": [0, 147], "razavi": [0, 147], "2021": [0, 147], "deal": [0, 147], "exclus": [0, 147], "ilya": [0, 147], "somewhat": [0, 147], "describ": [0, 147], "gori": [0, 147], "2023": [0, 147], "blob": [0, 147], "theori": [0, 147], "20of": [0, 147], "20determin": [0, 147], "gaussianwithout2pi": [], "quit": [0, 147], "thoroughli": [0, 147], "rasmussen": [0, 147], "william": [0, 147], "2005": [0, 147], "mogp": [25, 31, 40, 42, 43, 44, 62, 87], "is_covari": [40, 41, 43, 45, 85, 87, 88], "variant": [41, 88], "likelihood_vari": [43, 45, 87], "stabil": 49, "pi": [49, 51], "logpdf": [], "mnemon": [], "closedsobol": [60, 61, 64], "marginalis": [63, 64], "ad": [92, 103, 108, 120, 125, 131, 133, 140], "25": [127, 131, 140], "normalis": [103, 120, 131, 140], "400": [121, 127, 141], "datapoint": [104, 121, 141], "add": 126, "00": 127, "topic": 147, "advis": 147, "advic": 147, "much": 147, "benchmark_gsa": 147, "gpr_from_funct": 147, "gsa_from_funct": 147, "repo_from_csv": 147, "repo_from_funct": 147, "sai": 147, "galleri": 147, "archetyp": 147, "root": 84, "ext": 84, "suffix": 84, "orthogon": 84, "wrong": 84, "is_random": 85, "summaris": 147, "term": [], "cunt": [], "part": 147, "penultim": 147, "conceptu": 1, "interc": 49, "sigma": 49, "determinant_vector": [], "_namedtupl": [], "field_default": [], "asdict": [], "move": [5, 7, 40, 41, 43, 44, 45, 63, 64], "dst_folder": [5, 7, 40, 41, 43, 44, 45, 63, 64], "src_folder": [5, 7, 40, 41, 43, 44, 45, 63, 64], "anyth": [5, 7, 40, 41, 43, 44, 45, 63, 64], "arraylik": 6, "written": 6, "whenev": 6, "clean_copi": [16, 19], "clean": [16, 19], "64": 9, "contextmanag": [], "nan": 13, "u14": [5, 7, 63], "member": [5, 7, 63], "read_data": [7, 40, 41, 44], "toi": 147, "calibr": [7, 40, 41, 44, 45, 63, 64, 87, 147], "sqrt": 49, "expand_dim": 49, "ax": 49, "dim": 49, "cho_diag": 49, "intenum": [63, 64], "overriden": [63, 64], "super": [63, 64], "200": 104, "04": 120}, "objects": {"": [[2, 0, 0, "-", "romcomma"]], "romcomma": [[3, 0, 0, "-", "base"], [14, 0, 0, "-", "data"], [20, 0, 0, "-", "gpf"], [38, 0, 0, "-", "gpr"], [46, 0, 0, "-", "gsa"], [65, 0, 0, "-", "rom"], [67, 0, 0, "-", "run"], [89, 0, 0, "-", "user"]], "romcomma.base": [[4, 0, 0, "-", "classes"], [8, 0, 0, "-", "definitions"]], "romcomma.base.classes": [[5, 1, 1, "", "Data"], [6, 1, 1, "", "Frame"], [7, 1, 1, "", "Model"]], "romcomma.base.classes.Data": [[5, 1, 1, "", "NamedTuple"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "delete"], [5, 3, 1, "", "empty"], [5, 3, 1, "", "move"], [5, 3, 1, "", "read"]], "romcomma.base.classes.Data.NamedTuple": [[5, 2, 1, "", "NotImplemented"], [5, 3, 1, "", "count"], [5, 3, 1, "", "index"]], "romcomma.base.classes.Frame": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "broadcast_value"], [6, 2, 1, "", "csv"], [6, 3, 1, "", "write"]], "romcomma.base.classes.Model": [[7, 1, 1, "", "Data"], [7, 4, 1, "", "META"], [7, 3, 1, "", "__init__"]], "romcomma.base.classes.Model.Data": [[7, 1, 1, "", "NamedTuple"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "delete"], [7, 3, 1, "", "empty"], [7, 3, 1, "", "move"], [7, 3, 1, "", "read"]], "romcomma.base.classes.Model.Data.NamedTuple": [[7, 2, 1, "", "NotImplemented"], [7, 3, 1, "", "count"], [7, 3, 1, "", "index"]], "romcomma.base.definitions": [[9, 5, 1, "", "EFFECTIVELY_ZERO"], [10, 6, 1, "", "FLOAT"], [11, 6, 1, "", "INT"], [12, 1, 1, "", "NP"], [13, 1, 1, "", "TF"]], "romcomma.base.definitions.NP": [[12, 2, 1, "", "Array"], [12, 2, 1, "", "Covector"], [12, 2, 1, "", "Matrix"], [12, 2, 1, "", "Tensor"], [12, 2, 1, "", "Tensor1"], [12, 2, 1, "", "Tensor2"], [12, 2, 1, "", "Tensor3"], [12, 2, 1, "", "Tensor4"], [12, 2, 1, "", "Tensor5"], [12, 2, 1, "", "Tensor6"], [12, 2, 1, "", "Tensor7"], [12, 2, 1, "", "Tensor8"], [12, 2, 1, "", "Vector"], [12, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF": [[13, 2, 1, "", "Array"], [13, 2, 1, "", "Covector"], [13, 2, 1, "", "Matrix"], [13, 2, 1, "", "NaN"], [13, 2, 1, "", "PairOfInts"], [13, 2, 1, "", "Slice"], [13, 1, 1, "", "Tensor"], [13, 2, 1, "", "Tensor1"], [13, 2, 1, "", "Tensor2"], [13, 2, 1, "", "Tensor3"], [13, 2, 1, "", "Tensor4"], [13, 2, 1, "", "Tensor5"], [13, 2, 1, "", "Tensor6"], [13, 2, 1, "", "Tensor7"], [13, 2, 1, "", "Tensor8"], [13, 2, 1, "", "Vector"], [13, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF.Tensor": [[13, 3, 1, "", "consumers"], [13, 4, 1, "", "device"], [13, 4, 1, "", "dtype"], [13, 3, 1, "", "eval"], [13, 3, 1, "", "experimental_ref"], [13, 3, 1, "", "get_shape"], [13, 4, 1, "", "graph"], [13, 4, 1, "", "name"], [13, 4, 1, "", "op"], [13, 3, 1, "", "ref"], [13, 3, 1, "", "set_shape"], [13, 4, 1, "", "shape"], [13, 4, 1, "", "value_index"]], "romcomma.data": [[15, 0, 0, "-", "storage"]], "romcomma.data.storage": [[16, 1, 1, "", "Fold"], [17, 1, 1, "", "Frame"], [18, 1, 1, "", "Normalization"], [19, 1, 1, "", "Repository"]], "romcomma.data.storage.Fold": [[16, 4, 1, "", "K"], [16, 4, 1, "", "L"], [16, 4, 1, "", "M"], [16, 4, 1, "", "N"], [16, 4, 1, "", "X"], [16, 4, 1, "", "X_rotation"], [16, 4, 1, "", "Y"], [16, 3, 1, "", "Y_split"], [16, 4, 1, "", "Y_splits"], [16, 3, 1, "", "__init__"], [16, 3, 1, "", "clean_copy"], [16, 4, 1, "", "folds"], [16, 3, 1, "", "from_csv"], [16, 3, 1, "", "from_df"], [16, 3, 1, "", "from_dfs"], [16, 3, 1, "", "into_K_folds"], [16, 4, 1, "", "test_x"], [16, 4, 1, "", "test_y"]], "romcomma.data.storage.Frame": [[17, 4, 1, "", "CSV_OPTIONS"], [17, 3, 1, "", "__init__"], [17, 4, 1, "", "is_empty"], [17, 3, 1, "", "write"]], "romcomma.data.storage.Normalization": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "apply_to"], [18, 3, 1, "", "undo_from"]], "romcomma.data.storage.Repository": [[19, 4, 1, "", "K"], [19, 4, 1, "", "L"], [19, 4, 1, "", "M"], [19, 4, 1, "", "N"], [19, 4, 1, "", "X"], [19, 4, 1, "", "Y"], [19, 3, 1, "", "Y_split"], [19, 4, 1, "", "Y_splits"], [19, 3, 1, "", "__init__"], [19, 3, 1, "", "clean_copy"], [19, 4, 1, "", "folds"], [19, 3, 1, "", "from_csv"], [19, 3, 1, "", "from_df"], [19, 3, 1, "", "into_K_folds"]], "romcomma.gpf": [[21, 0, 0, "-", "base"], [23, 0, 0, "-", "kernels"], [26, 0, 0, "-", "likelihoods"], [28, 0, 0, "-", "mean_functions"], [30, 0, 0, "-", "models"], [32, 0, 0, "-", "tests"]], "romcomma.gpf.base": [[22, 1, 1, "", "Variance"]], "romcomma.gpf.base.Variance": [[22, 3, 1, "", "__init__"], [22, 4, 1, "", "cholesky"], [22, 4, 1, "", "name"], [22, 4, 1, "", "name_scope"], [22, 4, 1, "", "non_trainable_variables"], [22, 4, 1, "", "shape"], [22, 4, 1, "", "submodules"], [22, 4, 1, "", "trainable_variables"], [22, 4, 1, "", "value"], [22, 3, 1, "", "value_times_eye"], [22, 4, 1, "", "value_to_broadcast"], [22, 4, 1, "", "variables"], [22, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels": [[24, 1, 1, "", "MOStationary"], [25, 1, 1, "", "RBF"]], "romcomma.gpf.kernels.MOStationary": [[24, 3, 1, "", "K_d"], [24, 3, 1, "", "K_d_apply_variance"], [24, 3, 1, "", "K_d_unit_variance"], [24, 3, 1, "", "K_diag"], [24, 3, 1, "", "K_unit_variance"], [24, 3, 1, "", "__init__"], [24, 4, 1, "", "ard"], [24, 4, 1, "", "lengthscales_neat"], [24, 4, 1, "", "name"], [24, 4, 1, "", "name_scope"], [24, 4, 1, "", "non_trainable_variables"], [24, 3, 1, "", "on_separate_dims"], [24, 3, 1, "", "scaled_difference_matrix"], [24, 3, 1, "", "slice"], [24, 3, 1, "", "slice_cov"], [24, 4, 1, "", "submodules"], [24, 4, 1, "", "trainable_variables"], [24, 4, 1, "", "variables"], [24, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels.RBF": [[25, 3, 1, "", "K_d"], [25, 3, 1, "", "K_d_apply_variance"], [25, 3, 1, "", "K_d_unit_variance"], [25, 3, 1, "", "K_diag"], [25, 3, 1, "", "K_unit_variance"], [25, 3, 1, "", "__init__"], [25, 4, 1, "", "ard"], [25, 4, 1, "", "lengthscales_neat"], [25, 4, 1, "", "name"], [25, 4, 1, "", "name_scope"], [25, 4, 1, "", "non_trainable_variables"], [25, 3, 1, "", "on_separate_dims"], [25, 3, 1, "", "scaled_difference_matrix"], [25, 3, 1, "", "slice"], [25, 3, 1, "", "slice_cov"], [25, 4, 1, "", "submodules"], [25, 4, 1, "", "trainable_variables"], [25, 4, 1, "", "variables"], [25, 3, 1, "", "with_name_scope"]], "romcomma.gpf.likelihoods": [[27, 1, 1, "", "MOGaussian"]], "romcomma.gpf.likelihoods.MOGaussian": [[27, 3, 1, "", "N"], [27, 3, 1, "", "__init__"], [27, 3, 1, "", "conditional_mean"], [27, 3, 1, "", "conditional_variance"], [27, 3, 1, "", "log_prob"], [27, 4, 1, "", "name"], [27, 4, 1, "", "name_scope"], [27, 4, 1, "", "non_trainable_variables"], [27, 3, 1, "", "predict_log_density"], [27, 3, 1, "", "predict_mean_and_var"], [27, 3, 1, "", "split_axis_shape"], [27, 4, 1, "", "submodules"], [27, 4, 1, "", "trainable_variables"], [27, 4, 1, "", "variables"], [27, 3, 1, "", "variational_expectations"], [27, 3, 1, "", "with_name_scope"]], "romcomma.gpf.mean_functions": [[29, 1, 1, "", "MOMeanFunction"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[29, 3, 1, "", "__init__"], [29, 4, 1, "", "functions"], [29, 4, 1, "", "name"], [29, 4, 1, "", "name_scope"], [29, 4, 1, "", "non_trainable_variables"], [29, 4, 1, "", "output_dim"], [29, 4, 1, "", "submodules"], [29, 4, 1, "", "trainable_variables"], [29, 4, 1, "", "variables"], [29, 3, 1, "", "with_name_scope"]], "romcomma.gpf.models": [[31, 1, 1, "", "MOGPR"]], "romcomma.gpf.models.MOGPR": [[31, 4, 1, "", "L"], [31, 4, 1, "", "M"], [31, 3, 1, "", "__init__"], [31, 3, 1, "", "calc_num_latent_gps"], [31, 3, 1, "", "calc_num_latent_gps_from_data"], [31, 3, 1, "", "log_marginal_likelihood"], [31, 3, 1, "", "log_posterior_density"], [31, 3, 1, "", "log_prior_density"], [31, 3, 1, "", "maximum_log_likelihood_objective"], [31, 4, 1, "", "name"], [31, 4, 1, "", "name_scope"], [31, 4, 1, "", "non_trainable_variables"], [31, 3, 1, "", "predict_f"], [31, 3, 1, "", "predict_f_samples"], [31, 3, 1, "", "predict_log_density"], [31, 3, 1, "", "predict_y"], [31, 4, 1, "", "submodules"], [31, 4, 1, "", "trainable_variables"], [31, 3, 1, "", "training_loss"], [31, 3, 1, "", "training_loss_closure"], [31, 4, 1, "", "variables"], [31, 3, 1, "", "with_name_scope"]], "romcomma.gpf.tests": [[33, 6, 1, "", "covariance"], [34, 6, 1, "", "increment"], [35, 6, 1, "", "kernel"], [36, 6, 1, "", "likelihood"], [37, 6, 1, "", "regression_data"]], "romcomma.gpr": [[39, 0, 0, "-", "kernels"], [42, 0, 0, "-", "models"]], "romcomma.gpr.kernels": [[40, 1, 1, "", "Kernel"], [41, 1, 1, "", "RBF"]], "romcomma.gpr.kernels.Kernel": [[40, 1, 1, "", "Data"], [40, 4, 1, "", "L"], [40, 4, 1, "", "M"], [40, 4, 1, "", "META"], [40, 4, 1, "", "TYPE_IDENTIFIER"], [40, 3, 1, "", "TypeFromIdentifier"], [40, 3, 1, "", "TypeFromParameters"], [40, 3, 1, "", "__init__"], [40, 3, 1, "", "broadcast_parameters"], [40, 3, 1, "", "calibrate"], [40, 4, 1, "", "implementation"], [40, 4, 1, "", "is_covariant"]], "romcomma.gpr.kernels.Kernel.Data": [[40, 2, 1, "", "NamedTuple"], [40, 3, 1, "", "copy"], [40, 3, 1, "", "delete"], [40, 3, 1, "", "empty"], [40, 3, 1, "", "move"], [40, 3, 1, "", "read"]], "romcomma.gpr.kernels.RBF": [[41, 1, 1, "", "Data"], [41, 4, 1, "", "L"], [41, 4, 1, "", "M"], [41, 2, 1, "", "META"], [41, 2, 1, "", "TYPE_IDENTIFIER"], [41, 3, 1, "", "TypeFromIdentifier"], [41, 3, 1, "", "TypeFromParameters"], [41, 3, 1, "", "__init__"], [41, 3, 1, "", "broadcast_parameters"], [41, 3, 1, "", "calibrate"], [41, 4, 1, "", "implementation"], [41, 4, 1, "", "is_covariant"]], "romcomma.gpr.kernels.RBF.Data": [[41, 2, 1, "", "NamedTuple"], [41, 3, 1, "", "copy"], [41, 3, 1, "", "delete"], [41, 3, 1, "", "empty"], [41, 3, 1, "", "move"], [41, 3, 1, "", "read"]], "romcomma.gpr.models": [[43, 1, 1, "", "GPR"], [44, 1, 1, "", "Likelihood"], [45, 1, 1, "", "MOGP"]], "romcomma.gpr.models.GPR": [[43, 1, 1, "", "Data"], [43, 4, 1, "", "KERNEL_FOLDER_NAME"], [43, 4, 1, "", "K_cho"], [43, 4, 1, "", "K_inv_Y"], [43, 4, 1, "", "L"], [43, 4, 1, "", "M"], [43, 4, 1, "", "META"], [43, 4, 1, "", "N"], [43, 4, 1, "", "X"], [43, 4, 1, "", "Y"], [43, 3, 1, "", "__init__"], [43, 3, 1, "", "broadcast_parameters"], [43, 4, 1, "", "fold"], [43, 4, 1, "", "implementation"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "test"]], "romcomma.gpr.models.GPR.Data": [[43, 2, 1, "", "NamedTuple"], [43, 3, 1, "", "copy"], [43, 3, 1, "", "delete"], [43, 3, 1, "", "empty"], [43, 3, 1, "", "move"], [43, 3, 1, "", "read"]], "romcomma.gpr.models.Likelihood": [[44, 1, 1, "", "Data"], [44, 4, 1, "", "META"], [44, 3, 1, "", "__init__"], [44, 3, 1, "", "calibrate"]], "romcomma.gpr.models.Likelihood.Data": [[44, 2, 1, "", "NamedTuple"], [44, 3, 1, "", "copy"], [44, 3, 1, "", "delete"], [44, 3, 1, "", "empty"], [44, 3, 1, "", "move"], [44, 3, 1, "", "read"]], "romcomma.gpr.models.MOGP": [[45, 1, 1, "", "Data"], [45, 2, 1, "", "KERNEL_FOLDER_NAME"], [45, 4, 1, "", "K_cho"], [45, 4, 1, "", "K_inv_Y"], [45, 4, 1, "", "L"], [45, 4, 1, "", "M"], [45, 4, 1, "", "META"], [45, 4, 1, "", "N"], [45, 4, 1, "", "X"], [45, 4, 1, "", "Y"], [45, 3, 1, "", "__init__"], [45, 3, 1, "", "broadcast_parameters"], [45, 3, 1, "", "calibrate"], [45, 3, 1, "", "check_K_inv_Y"], [45, 4, 1, "", "fold"], [45, 4, 1, "", "implementation"], [45, 3, 1, "", "predict"], [45, 3, 1, "", "test"]], "romcomma.gpr.models.MOGP.Data": [[45, 2, 1, "", "NamedTuple"], [45, 3, 1, "", "copy"], [45, 3, 1, "", "delete"], [45, 3, 1, "", "empty"], [45, 3, 1, "", "move"], [45, 3, 1, "", "read"]], "romcomma.gsa": [[47, 0, 0, "-", "base"], [58, 0, 0, "-", "calibrators"], [62, 0, 0, "-", "models"]], "romcomma.gsa.base": [[48, 1, 1, "", "Calibrator"], [49, 1, 1, "", "Gaussian"], [50, 6, 1, "", "det"], [51, 6, 1, "", "log_pdf"], [52, 6, 1, "", "mean"], [53, 6, 1, "", "ms"], [54, 6, 1, "", "pdf"], [55, 6, 1, "", "rms"], [56, 6, 1, "", "sos"], [57, 6, 1, "", "sym_check"]], "romcomma.gsa.base.Calibrator": [[48, 3, 1, "", "__init__"]], "romcomma.gsa.base.Gaussian": [[49, 3, 1, "", "__init__"], [49, 2, 1, "", "cho_diag"], [49, 4, 1, "", "det"], [49, 3, 1, "", "expand_dims"], [49, 2, 1, "", "exponent"], [49, 4, 1, "", "pdf"]], "romcomma.gsa.calibrators": [[59, 1, 1, "", "ClosedSobol"], [60, 1, 1, "", "ClosedSobolWithError"], [61, 1, 1, "", "ClosedSobolWithRotation"]], "romcomma.gsa.calibrators.ClosedSobol": [[59, 4, 1, "", "META"], [59, 3, 1, "", "__init__"], [59, 3, 1, "", "marginalize"], [59, 4, 1, "", "name"], [59, 4, 1, "", "name_scope"], [59, 4, 1, "", "non_trainable_variables"], [59, 4, 1, "", "submodules"], [59, 4, 1, "", "trainable_variables"], [59, 4, 1, "", "variables"], [59, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calibrators.ClosedSobolWithError": [[60, 4, 1, "", "META"], [60, 1, 1, "", "RankEquation"], [60, 1, 1, "", "RankEquations"], [60, 3, 1, "", "__init__"], [60, 3, 1, "", "marginalize"], [60, 4, 1, "", "name"], [60, 4, 1, "", "name_scope"], [60, 4, 1, "", "non_trainable_variables"], [60, 4, 1, "", "submodules"], [60, 4, 1, "", "trainable_variables"], [60, 4, 1, "", "variables"], [60, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation": [[60, 3, 1, "", "count"], [60, 2, 1, "", "i"], [60, 3, 1, "", "index"], [60, 2, 1, "", "j"], [60, 2, 1, "", "k"], [60, 2, 1, "", "l"]], "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations": [[60, 2, 1, "", "DIAGONAL"], [60, 2, 1, "", "MIXED"], [60, 3, 1, "", "count"], [60, 3, 1, "", "index"]], "romcomma.gsa.calibrators.ClosedSobolWithRotation": [[61, 2, 1, "", "META"], [61, 3, 1, "", "__init__"], [61, 3, 1, "", "marginalize"], [61, 4, 1, "", "name"], [61, 4, 1, "", "name_scope"], [61, 4, 1, "", "non_trainable_variables"], [61, 4, 1, "", "submodules"], [61, 4, 1, "", "trainable_variables"], [61, 4, 1, "", "variables"], [61, 3, 1, "", "with_name_scope"]], "romcomma.gsa.models": [[63, 1, 1, "", "GSA"], [64, 1, 1, "", "Sobol"]], "romcomma.gsa.models.GSA": [[63, 1, 1, "", "Data"], [63, 1, 1, "", "Kind"], [63, 2, 1, "", "META"], [63, 3, 1, "", "__init__"], [63, 3, 1, "", "calibrate"], [63, 4, 1, "", "calibrator"]], "romcomma.gsa.models.GSA.Data": [[63, 1, 1, "", "NamedTuple"], [63, 3, 1, "", "copy"], [63, 3, 1, "", "delete"], [63, 3, 1, "", "empty"], [63, 3, 1, "", "move"], [63, 3, 1, "", "read"]], "romcomma.gsa.models.GSA.Data.NamedTuple": [[63, 2, 1, "", "NotImplemented"], [63, 3, 1, "", "count"], [63, 3, 1, "", "index"]], "romcomma.gsa.models.Sobol": [[64, 1, 1, "", "Data"], [64, 1, 1, "", "Kind"], [64, 4, 1, "", "META"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "calibrate"], [64, 4, 1, "", "calibrator"]], "romcomma.gsa.models.Sobol.Data": [[64, 2, 1, "", "NamedTuple"], [64, 3, 1, "", "copy"], [64, 3, 1, "", "delete"], [64, 3, 1, "", "empty"], [64, 3, 1, "", "move"], [64, 3, 1, "", "read"]], "romcomma.rom": [[66, 0, 0, "-", "old"]], "romcomma.run": [[68, 0, 0, "-", "context"], [71, 0, 0, "-", "function"], [79, 0, 0, "-", "results"], [82, 0, 0, "-", "sample"], [86, 0, 0, "-", "summarised"]], "romcomma.run.context": [[69, 6, 1, "", "Environment"], [70, 6, 1, "", "Timer"]], "romcomma.run.function": [[72, 5, 1, "", "ALL"], [73, 5, 1, "", "ISHIGAMI"], [74, 5, 1, "", "OAKLEY2004"], [75, 5, 1, "", "SOBOL_G"], [76, 1, 1, "", "Scalar"], [77, 1, 1, "", "Vector"], [78, 6, 1, "", "linspace"]], "romcomma.run.function.Scalar": [[76, 3, 1, "", "__init__"]], "romcomma.run.function.Vector": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "clear"], [77, 3, 1, "", "concat"], [77, 3, 1, "", "copy"], [77, 3, 1, "", "fromkeys"], [77, 3, 1, "", "get"], [77, 3, 1, "", "items"], [77, 3, 1, "", "keys"], [77, 4, 1, "", "meta"], [77, 3, 1, "", "pop"], [77, 3, 1, "", "popitem"], [77, 3, 1, "", "setdefault"], [77, 3, 1, "", "subVector"], [77, 3, 1, "", "update"], [77, 3, 1, "", "values"]], "romcomma.run.results": [[80, 1, 1, "", "Collect"], [81, 6, 1, "", "copy"]], "romcomma.run.results.Collect": [[80, 3, 1, "", "__init__"], [80, 2, 1, "", "csvs"], [80, 2, 1, "", "folders"], [80, 3, 1, "", "from_folders"], [80, 3, 1, "", "from_folds"], [80, 2, 1, "", "ignore_missing"], [80, 2, 1, "", "write_options"]], "romcomma.run.sample": [[83, 1, 1, "", "DOE"], [84, 1, 1, "", "Function"], [85, 1, 1, "", "GaussianNoise"]], "romcomma.run.sample.DOE": [[83, 2, 1, "", "Method"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "full_factorial"], [83, 3, 1, "", "latin_hypercube"]], "romcomma.run.sample.Function": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "collection"], [84, 3, 1, "", "into_K_folds"], [84, 4, 1, "", "repo"], [84, 3, 1, "", "rotate_folds"], [84, 3, 1, "", "un_rotate_folds"]], "romcomma.run.sample.GaussianNoise": [[85, 1, 1, "", "Variance"], [85, 3, 1, "", "__init__"]], "romcomma.run.sample.GaussianNoise.Variance": [[85, 4, 1, "", "matrix"], [85, 4, 1, "", "meta"]], "romcomma.run.summarised": [[87, 6, 1, "", "gpr"], [88, 6, 1, "", "gsa"]], "romcomma.user": [[90, 0, 0, "-", "benchmark_gsa"], [92, 0, 0, "-", "gpr_from_function"], [108, 0, 0, "-", "gsa_from_function"], [125, 0, 0, "-", "repo_from_csv"], [133, 0, 0, "-", "repo_from_function"], [145, 0, 0, "-", "toy"]], "romcomma.user.benchmark_gsa": [[91, 5, 1, "", "BASE_FOLDER"]], "romcomma.user.gpr_from_function": [[93, 6, 1, "", "DOE"], [94, 5, 1, "", "FUNCTION_VECTOR"], [95, 5, 1, "", "IGNORE_EXCEPTIONS"], [96, 5, 1, "", "IS_COVARIANT"], [97, 5, 1, "", "IS_ISOTROPIC"], [98, 5, 1, "", "IS_NOISE_COVARIANT"], [99, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [100, 5, 1, "", "IS_READ"], [101, 5, 1, "", "K"], [102, 5, 1, "", "Ms"], [103, 5, 1, "", "NOISE_MAGNITUDES"], [104, 5, 1, "", "Ns"], [105, 5, 1, "", "READ"], [106, 5, 1, "", "ROOT"], [107, 5, 1, "", "ROTATIONS"]], "romcomma.user.gsa_from_function": [[109, 6, 1, "", "DOE"], [110, 5, 1, "", "FUNCTION_VECTOR"], [111, 5, 1, "", "IGNORE_EXCEPTIONS"], [112, 5, 1, "", "IS_COVARIANT"], [113, 5, 1, "", "IS_ISOTROPIC"], [114, 5, 1, "", "IS_NOISE_COVARIANT"], [115, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [116, 5, 1, "", "IS_READ"], [117, 5, 1, "", "K"], [118, 5, 1, "", "KINDS"], [119, 5, 1, "", "Ms"], [120, 5, 1, "", "NOISE_MAGNITUDES"], [121, 5, 1, "", "Ns"], [122, 5, 1, "", "READ"], [123, 5, 1, "", "ROOT"], [124, 5, 1, "", "ROTATIONS"]], "romcomma.user.repo_from_csv": [[126, 5, 1, "", "ADD_NOISE"], [127, 5, 1, "", "CSV"], [128, 5, 1, "", "IS_NOISE_COVARIANT"], [129, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [130, 5, 1, "", "K"], [131, 5, 1, "", "NOISE_MAGNITUDES"], [132, 5, 1, "", "ROOT"]], "romcomma.user.repo_from_function": [[134, 6, 1, "", "DOE"], [135, 5, 1, "", "FUNCTION_VECTOR"], [136, 5, 1, "", "IS_NOISE_COVARIANT"], [137, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [138, 5, 1, "", "K"], [139, 5, 1, "", "Ms"], [140, 5, 1, "", "NOISE_MAGNITUDES"], [141, 5, 1, "", "Ns"], [142, 5, 1, "", "READ"], [143, 5, 1, "", "ROOT"], [144, 5, 1, "", "ROTATIONS"]], "romcomma.user.toy": [[146, 5, 1, "", "ROOT"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"rom": [1, 65, 66], "comma": 1, "user": [1, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "guid": 1, "content": 1, "indic": 1, "tabl": 1, "packag": [], "refer": 2, "romcomma": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "class": [4, 5, 6, 7], "model": [7, 30, 31, 42, 43, 44, 45, 62, 63, 64], "paramet": [], "definit": [8, 9, 10, 11, 12, 13], "float": 10, "int": 11, "np": 12, "tf": 13, "data": [5, 14, 15, 16, 17, 18, 19], "storag": [15, 16, 17, 18, 19], "fold": 16, "frame": [6, 17], "normal": 18, "repositori": 19, "gpf": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "varianc": 22, "kernel": [23, 24, 25, 35, 39, 40, 41], "mostationari": 24, "rbf": [25, 41], "likelihood": [26, 27, 36, 44], "mogaussian": 27, "mean_funct": [28, 29], "momeanfunct": 29, "mogpr": 31, "test": [32, 33, 34, 35, 36, 37], "covari": 33, "increment": 34, "regression_data": 37, "gpr": [38, 39, 40, 41, 42, 43, 44, 45, 87], "gp": [], "gpinterfac": [], "gsa": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88], "sobol": 64, "closedindex": [], "closedindexwitherror": [], "closedindexwithrot": [], "gaussian": 49, "det": 50, "mean": 52, "m": [53, 102, 119, 139], "rm": 55, "so": 56, "sym_check": 57, "undertak": [], "old": 66, "context": [68, 69, 70], "setup": [], "timer": 70, "function": [71, 72, 73, 74, 75, 76, 77, 78, 84], "all": 72, "ishigami": 73, "oakley2004": 74, "sobol_g": 75, "scalar": 76, "vector": 77, "linspac": 78, "result": [79, 80, 81], "collect": 80, "copi": 81, "run": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "sampl": [82, 83, 84, 85], "doe": [83, 93, 109, 134], "gaussiannois": 85, "script": [], "base_fold": 91, "get": 147, "start": 147, "instal": 147, "structur": [], "glossari": [0, 147], "abbrevi": [], "modul": [2, 147], "hierarchi": 147, "mogp": 45, "calcul": [], "gaussianwithout2pi": [], "closedsobol": 59, "closedsobolwitherror": 60, "closedsobolwithrot": 61, "benchmark_gsa": [90, 91], "gpr_from_funct": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "function_vector": [94, 110, 135], "ignore_except": [95, 111], "is_covari": [96, 112], "is_isotrop": [97, 113], "is_noise_covari": [98, 114, 128, 136], "is_noise_variance_random": [99, 115, 129, 137], "is_read": [100, 116], "k": [101, 117, 130, 138], "noise_magnitud": [103, 120, 131, 140], "n": [104, 121, 141], "read": [105, 122, 142], "root": [106, 123, 132, 143, 146], "rotat": [107, 124, 144], "gsa_from_funct": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "kind": 118, "repo_from_csv": [125, 126, 127, 128, 129, 130, 131, 132], "add_nois": 126, "csv": 127, "repo_from_funct": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "summaris": [86, 87, 88], "conceptu": 147, "toi": [145, 146], "effectively_zero": 9, "environ": 69, "calibr": [48, 58, 59, 60, 61], "log_pdf": 51, "pdf": 54}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Glossary": [[0, "glossary"], [147, "glossary"]], "rom-comma User Guide": [[1, "rom-comma-user-guide"]], "Contents": [[1, "contents"]], "Indices and Tables": [[1, "indices-and-tables"]], "Module Reference": [[2, "module-romcomma"]], "romcomma.base": [[3, "module-romcomma.base"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "romcomma.base.classes.Data": [[5, "romcomma-base-classes-data"]], "romcomma.base.classes.Frame": [[6, "romcomma-base-classes-frame"]], "romcomma.base.classes.Model": [[7, "romcomma-base-classes-model"]], "romcomma.base.definitions": [[8, "module-romcomma.base.definitions"]], "romcomma.base.definitions.EFFECTIVELY_ZERO": [[9, "romcomma-base-definitions-effectively-zero"]], "romcomma.base.definitions.FLOAT": [[10, "romcomma-base-definitions-float"]], "romcomma.base.definitions.INT": [[11, "romcomma-base-definitions-int"]], "romcomma.base.definitions.NP": [[12, "romcomma-base-definitions-np"]], "romcomma.base.definitions.TF": [[13, "romcomma-base-definitions-tf"]], "romcomma.data": [[14, "module-romcomma.data"]], "romcomma.data.storage": [[15, "module-romcomma.data.storage"]], "romcomma.data.storage.Fold": [[16, "romcomma-data-storage-fold"]], "romcomma.data.storage.Frame": [[17, "romcomma-data-storage-frame"]], "romcomma.data.storage.Normalization": [[18, "romcomma-data-storage-normalization"]], "romcomma.data.storage.Repository": [[19, "romcomma-data-storage-repository"]], "romcomma.gpf": [[20, "module-romcomma.gpf"]], "romcomma.gpf.base": [[21, "module-romcomma.gpf.base"]], "romcomma.gpf.base.Variance": [[22, "romcomma-gpf-base-variance"]], "romcomma.gpf.kernels": [[23, "module-romcomma.gpf.kernels"]], "romcomma.gpf.kernels.MOStationary": [[24, "romcomma-gpf-kernels-mostationary"]], "romcomma.gpf.kernels.RBF": [[25, "romcomma-gpf-kernels-rbf"]], "romcomma.gpf.likelihoods": [[26, "module-romcomma.gpf.likelihoods"]], "romcomma.gpf.likelihoods.MOGaussian": [[27, "romcomma-gpf-likelihoods-mogaussian"]], "romcomma.gpf.mean_functions": [[28, "module-romcomma.gpf.mean_functions"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[29, "romcomma-gpf-mean-functions-momeanfunction"]], "romcomma.gpf.models": [[30, "module-romcomma.gpf.models"]], "romcomma.gpf.models.MOGPR": [[31, "romcomma-gpf-models-mogpr"]], "romcomma.gpf.tests": [[32, "module-romcomma.gpf.tests"]], "romcomma.gpf.tests.covariance": [[33, "romcomma-gpf-tests-covariance"]], "romcomma.gpf.tests.increment": [[34, "romcomma-gpf-tests-increment"]], "romcomma.gpf.tests.kernel": [[35, "romcomma-gpf-tests-kernel"]], "romcomma.gpf.tests.likelihood": [[36, "romcomma-gpf-tests-likelihood"]], "romcomma.gpf.tests.regression_data": [[37, "romcomma-gpf-tests-regression-data"]], "romcomma.gpr": [[38, "module-romcomma.gpr"]], "romcomma.gpr.kernels": [[39, "module-romcomma.gpr.kernels"]], "romcomma.gpr.kernels.Kernel": [[40, "romcomma-gpr-kernels-kernel"]], "romcomma.gpr.kernels.RBF": [[41, "romcomma-gpr-kernels-rbf"]], "romcomma.gpr.models": [[42, "module-romcomma.gpr.models"]], "romcomma.gpr.models.GPR": [[43, "romcomma-gpr-models-gpr"]], "romcomma.gpr.models.Likelihood": [[44, "romcomma-gpr-models-likelihood"]], "romcomma.gpr.models.MOGP": [[45, "romcomma-gpr-models-mogp"]], "romcomma.gsa": [[46, "module-romcomma.gsa"]], "romcomma.gsa.base": [[47, "module-romcomma.gsa.base"]], "romcomma.gsa.base.Calibrator": [[48, "romcomma-gsa-base-calibrator"]], "romcomma.gsa.base.Gaussian": [[49, "romcomma-gsa-base-gaussian"]], "romcomma.gsa.base.det": [[50, "romcomma-gsa-base-det"]], "romcomma.gsa.base.log_pdf": [[51, "romcomma-gsa-base-log-pdf"]], "romcomma.gsa.base.mean": [[52, "romcomma-gsa-base-mean"]], "romcomma.gsa.base.ms": [[53, "romcomma-gsa-base-ms"]], "romcomma.gsa.base.pdf": [[54, "romcomma-gsa-base-pdf"]], "romcomma.gsa.base.rms": [[55, "romcomma-gsa-base-rms"]], "romcomma.gsa.base.sos": [[56, "romcomma-gsa-base-sos"]], "romcomma.gsa.base.sym_check": [[57, "romcomma-gsa-base-sym-check"]], "romcomma.gsa.models": [[62, "module-romcomma.gsa.models"]], "romcomma.gsa.models.GSA": [[63, "romcomma-gsa-models-gsa"]], "romcomma.gsa.models.Sobol": [[64, "romcomma-gsa-models-sobol"]], "romcomma.rom": [[65, "module-romcomma.rom"]], "romcomma.rom.old": [[66, "module-romcomma.rom.old"]], "romcomma.run": [[67, "module-romcomma.run"]], "romcomma.run.context": [[68, "module-romcomma.run.context"]], "romcomma.run.context.Environment": [[69, "romcomma-run-context-environment"]], "romcomma.run.context.Timer": [[70, "romcomma-run-context-timer"]], "romcomma.run.function": [[71, "module-romcomma.run.function"]], "romcomma.run.function.ALL": [[72, "romcomma-run-function-all"]], "romcomma.run.function.ISHIGAMI": [[73, "romcomma-run-function-ishigami"]], "romcomma.run.function.OAKLEY2004": [[74, "romcomma-run-function-oakley2004"]], "romcomma.run.function.SOBOL_G": [[75, "romcomma-run-function-sobol-g"]], "romcomma.run.function.Scalar": [[76, "romcomma-run-function-scalar"]], "romcomma.run.function.Vector": [[77, "romcomma-run-function-vector"]], "romcomma.run.function.linspace": [[78, "romcomma-run-function-linspace"]], "romcomma.run.results": [[79, "module-romcomma.run.results"]], "romcomma.run.results.Collect": [[80, "romcomma-run-results-collect"]], "romcomma.run.results.copy": [[81, "romcomma-run-results-copy"]], "romcomma.run.sample": [[82, "module-romcomma.run.sample"]], "romcomma.run.sample.DOE": [[83, "romcomma-run-sample-doe"]], "romcomma.run.sample.Function": [[84, "romcomma-run-sample-function"]], "romcomma.run.sample.GaussianNoise": [[85, "romcomma-run-sample-gaussiannoise"]], "romcomma.run.summarised": [[86, "module-romcomma.run.summarised"]], "romcomma.run.summarised.gpr": [[87, "romcomma-run-summarised-gpr"]], "romcomma.run.summarised.gsa": [[88, "romcomma-run-summarised-gsa"]], "romcomma.user": [[89, "module-romcomma.user"]], "romcomma.user.benchmark_gsa": [[90, "module-romcomma.user.benchmark_gsa"]], "romcomma.user.benchmark_gsa.BASE_FOLDER": [[91, "romcomma-user-benchmark-gsa-base-folder"]], "romcomma.user.gpr_from_function": [[92, "module-romcomma.user.gpr_from_function"]], "romcomma.user.gpr_from_function.DOE": [[93, "romcomma-user-gpr-from-function-doe"]], "romcomma.user.gpr_from_function.FUNCTION_VECTOR": [[94, "romcomma-user-gpr-from-function-function-vector"]], "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS": [[95, "romcomma-user-gpr-from-function-ignore-exceptions"]], "romcomma.user.gpr_from_function.IS_COVARIANT": [[96, "romcomma-user-gpr-from-function-is-covariant"]], "romcomma.user.gpr_from_function.IS_ISOTROPIC": [[97, "romcomma-user-gpr-from-function-is-isotropic"]], "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT": [[98, "romcomma-user-gpr-from-function-is-noise-covariant"]], "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM": [[99, "romcomma-user-gpr-from-function-is-noise-variance-random"]], "romcomma.user.gpr_from_function.IS_READ": [[100, "romcomma-user-gpr-from-function-is-read"]], "romcomma.user.gpr_from_function.K": [[101, "romcomma-user-gpr-from-function-k"]], "romcomma.user.gpr_from_function.Ms": [[102, "romcomma-user-gpr-from-function-ms"]], "romcomma.user.gpr_from_function.NOISE_MAGNITUDES": [[103, "romcomma-user-gpr-from-function-noise-magnitudes"]], "romcomma.user.gpr_from_function.Ns": [[104, "romcomma-user-gpr-from-function-ns"]], "romcomma.user.gpr_from_function.READ": [[105, "romcomma-user-gpr-from-function-read"]], "romcomma.user.gpr_from_function.ROOT": [[106, "romcomma-user-gpr-from-function-root"]], "romcomma.user.gpr_from_function.ROTATIONS": [[107, "romcomma-user-gpr-from-function-rotations"]], "romcomma.user.gsa_from_function": [[108, "module-romcomma.user.gsa_from_function"]], "romcomma.user.gsa_from_function.DOE": [[109, "romcomma-user-gsa-from-function-doe"]], "romcomma.user.gsa_from_function.FUNCTION_VECTOR": [[110, "romcomma-user-gsa-from-function-function-vector"]], "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS": [[111, "romcomma-user-gsa-from-function-ignore-exceptions"]], "romcomma.user.gsa_from_function.IS_COVARIANT": [[112, "romcomma-user-gsa-from-function-is-covariant"]], "romcomma.user.gsa_from_function.IS_ISOTROPIC": [[113, "romcomma-user-gsa-from-function-is-isotropic"]], "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT": [[114, "romcomma-user-gsa-from-function-is-noise-covariant"]], "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM": [[115, "romcomma-user-gsa-from-function-is-noise-variance-random"]], "romcomma.user.gsa_from_function.IS_READ": [[116, "romcomma-user-gsa-from-function-is-read"]], "romcomma.user.gsa_from_function.K": [[117, "romcomma-user-gsa-from-function-k"]], "romcomma.user.gsa_from_function.KINDS": [[118, "romcomma-user-gsa-from-function-kinds"]], "romcomma.user.gsa_from_function.Ms": [[119, "romcomma-user-gsa-from-function-ms"]], "romcomma.user.gsa_from_function.NOISE_MAGNITUDES": [[120, "romcomma-user-gsa-from-function-noise-magnitudes"]], "romcomma.user.gsa_from_function.Ns": [[121, "romcomma-user-gsa-from-function-ns"]], "romcomma.user.gsa_from_function.READ": [[122, "romcomma-user-gsa-from-function-read"]], "romcomma.user.gsa_from_function.ROOT": [[123, "romcomma-user-gsa-from-function-root"]], "romcomma.user.gsa_from_function.ROTATIONS": [[124, "romcomma-user-gsa-from-function-rotations"]], "romcomma.user.repo_from_csv": [[125, "module-romcomma.user.repo_from_csv"]], "romcomma.user.repo_from_csv.ADD_NOISE": [[126, "romcomma-user-repo-from-csv-add-noise"]], "romcomma.user.repo_from_csv.CSV": [[127, "romcomma-user-repo-from-csv-csv"]], "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT": [[128, "romcomma-user-repo-from-csv-is-noise-covariant"]], "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM": [[129, "romcomma-user-repo-from-csv-is-noise-variance-random"]], "romcomma.user.repo_from_csv.K": [[130, "romcomma-user-repo-from-csv-k"]], "romcomma.user.repo_from_csv.NOISE_MAGNITUDES": [[131, "romcomma-user-repo-from-csv-noise-magnitudes"]], "romcomma.user.repo_from_csv.ROOT": [[132, "romcomma-user-repo-from-csv-root"]], "romcomma.user.repo_from_function": [[133, "module-romcomma.user.repo_from_function"]], "romcomma.user.repo_from_function.DOE": [[134, "romcomma-user-repo-from-function-doe"]], "romcomma.user.repo_from_function.FUNCTION_VECTOR": [[135, "romcomma-user-repo-from-function-function-vector"]], "romcomma.user.repo_from_function.IS_NOISE_COVARIANT": [[136, "romcomma-user-repo-from-function-is-noise-covariant"]], "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM": [[137, "romcomma-user-repo-from-function-is-noise-variance-random"]], "romcomma.user.repo_from_function.K": [[138, "romcomma-user-repo-from-function-k"]], "romcomma.user.repo_from_function.Ms": [[139, "romcomma-user-repo-from-function-ms"]], "romcomma.user.repo_from_function.NOISE_MAGNITUDES": [[140, "romcomma-user-repo-from-function-noise-magnitudes"]], "romcomma.user.repo_from_function.Ns": [[141, "romcomma-user-repo-from-function-ns"]], "romcomma.user.repo_from_function.READ": [[142, "romcomma-user-repo-from-function-read"]], "romcomma.user.repo_from_function.ROOT": [[143, "romcomma-user-repo-from-function-root"]], "romcomma.user.repo_from_function.ROTATIONS": [[144, "romcomma-user-repo-from-function-rotations"]], "romcomma.user.toy": [[145, "module-romcomma.user.toy"]], "romcomma.user.toy.ROOT": [[146, "romcomma-user-toy-root"]], "Getting Started": [[147, "getting-started"]], "Installation": [[147, "installation"]], "Conceptual Hierarchy": [[147, "conceptual-hierarchy"]], "Module Hierarchy": [[147, "module-hierarchy"]], "romcomma.gsa.calibrators": [[58, "module-romcomma.gsa.calibrators"]], "romcomma.gsa.calibrators.ClosedSobol": [[59, "romcomma-gsa-calibrators-closedsobol"]], "romcomma.gsa.calibrators.ClosedSobolWithError": [[60, "romcomma-gsa-calibrators-closedsobolwitherror"]], "romcomma.gsa.calibrators.ClosedSobolWithRotation": [[61, "romcomma-gsa-calibrators-closedsobolwithrotation"]]}, "indexentries": {"module": [[46, "module-romcomma.gsa"], [58, "module-romcomma.gsa.calibrators"]], "romcomma.gsa": [[46, "module-romcomma.gsa"]], "romcomma.gsa.calibrators": [[58, "module-romcomma.gsa.calibrators"]], "closedsobol (class in romcomma.gsa.calibrators)": [[59, "romcomma.gsa.calibrators.ClosedSobol"]], "meta (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.META"]], "__init__() (closedsobol method)": [[59, "romcomma.gsa.calibrators.ClosedSobol.__init__"]], "marginalize() (closedsobol method)": [[59, "romcomma.gsa.calibrators.ClosedSobol.marginalize"]], "name (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.name"]], "name_scope (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.name_scope"]], "non_trainable_variables (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.non_trainable_variables"]], "submodules (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.submodules"]], "trainable_variables (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.trainable_variables"]], "variables (closedsobol property)": [[59, "romcomma.gsa.calibrators.ClosedSobol.variables"]], "with_name_scope() (closedsobol class method)": [[59, "romcomma.gsa.calibrators.ClosedSobol.with_name_scope"]], "closedsobolwitherror (class in romcomma.gsa.calibrators)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError"]], "closedsobolwitherror.rankequation (class in romcomma.gsa.calibrators)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation"]], "closedsobolwitherror.rankequations (class in romcomma.gsa.calibrators)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations"]], "diagonal (closedsobolwitherror.rankequations attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations.DIAGONAL"]], "meta (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.META"]], "mixed (closedsobolwitherror.rankequations attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations.MIXED"]], "__init__() (closedsobolwitherror method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.__init__"]], "count() (closedsobolwitherror.rankequation method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.count"]], "count() (closedsobolwitherror.rankequations method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations.count"]], "i (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.i"]], "index() (closedsobolwitherror.rankequation method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.index"]], "index() (closedsobolwitherror.rankequations method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations.index"]], "j (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.j"]], "k (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.k"]], "l (closedsobolwitherror.rankequation attribute)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation.l"]], "marginalize() (closedsobolwitherror method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.marginalize"]], "name (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.name"]], "name_scope (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.name_scope"]], "non_trainable_variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.non_trainable_variables"]], "submodules (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.submodules"]], "trainable_variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.trainable_variables"]], "variables (closedsobolwitherror property)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.variables"]], "with_name_scope() (closedsobolwitherror class method)": [[60, "romcomma.gsa.calibrators.ClosedSobolWithError.with_name_scope"]], "closedsobolwithrotation (class in romcomma.gsa.calibrators)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation"]], "meta (closedsobolwithrotation attribute)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.META"]], "__init__() (closedsobolwithrotation method)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.__init__"]], "marginalize() (closedsobolwithrotation method)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.marginalize"]], "name (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.name"]], "name_scope (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.name_scope"]], "non_trainable_variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.non_trainable_variables"]], "submodules (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.submodules"]], "trainable_variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.trainable_variables"]], "variables (closedsobolwithrotation property)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.variables"]], "with_name_scope() (closedsobolwithrotation class method)": [[61, "romcomma.gsa.calibrators.ClosedSobolWithRotation.with_name_scope"]]}})