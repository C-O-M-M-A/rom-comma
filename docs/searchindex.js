Search.setIndex({"docnames": ["glossary", "index", "pages/package/reference", "pages/package/romcomma.base", "pages/package/romcomma.base.classes", "pages/package/romcomma.base.classes.Data", "pages/package/romcomma.base.classes.Frame", "pages/package/romcomma.base.classes.Model", "pages/package/romcomma.base.definitions", "pages/package/romcomma.base.definitions.EFFECTIVELY_ZERO", "pages/package/romcomma.base.definitions.FLOAT", "pages/package/romcomma.base.definitions.INT", "pages/package/romcomma.base.definitions.NP", "pages/package/romcomma.base.definitions.TF", "pages/package/romcomma.data", "pages/package/romcomma.data.storage", "pages/package/romcomma.data.storage.Fold", "pages/package/romcomma.data.storage.Frame", "pages/package/romcomma.data.storage.Normalization", "pages/package/romcomma.data.storage.Repository", "pages/package/romcomma.gpf", "pages/package/romcomma.gpf.base", "pages/package/romcomma.gpf.base.Variance", "pages/package/romcomma.gpf.kernels", "pages/package/romcomma.gpf.kernels.MOStationary", "pages/package/romcomma.gpf.kernels.RBF", "pages/package/romcomma.gpf.likelihoods", "pages/package/romcomma.gpf.likelihoods.MOGaussian", "pages/package/romcomma.gpf.mean_functions", "pages/package/romcomma.gpf.mean_functions.MOMeanFunction", "pages/package/romcomma.gpf.models", "pages/package/romcomma.gpf.models.MOGPR", "pages/package/romcomma.gpf.tests", "pages/package/romcomma.gpf.tests.covariance", "pages/package/romcomma.gpf.tests.increment", "pages/package/romcomma.gpf.tests.kernel", "pages/package/romcomma.gpf.tests.likelihood", "pages/package/romcomma.gpf.tests.regression_data", "pages/package/romcomma.gpr", "pages/package/romcomma.gpr.kernels", "pages/package/romcomma.gpr.kernels.Kernel", "pages/package/romcomma.gpr.kernels.RBF", "pages/package/romcomma.gpr.models", "pages/package/romcomma.gpr.models.GPR", "pages/package/romcomma.gpr.models.Likelihood", "pages/package/romcomma.gpr.models.MOGP", "pages/package/romcomma.gsa", "pages/package/romcomma.gsa.base", "pages/package/romcomma.gsa.base.Calibrator", "pages/package/romcomma.gsa.base.Gaussian", "pages/package/romcomma.gsa.base.diag_det", "pages/package/romcomma.gsa.base.mean", "pages/package/romcomma.gsa.base.ms", "pages/package/romcomma.gsa.base.rms", "pages/package/romcomma.gsa.base.sos", "pages/package/romcomma.gsa.base.sym_check", "pages/package/romcomma.gsa.calibrators", "pages/package/romcomma.gsa.calibrators.ClosedSobol", "pages/package/romcomma.gsa.calibrators.ClosedSobolWithError", "pages/package/romcomma.gsa.calibrators.ClosedSobolWithRotation", "pages/package/romcomma.gsa.models", "pages/package/romcomma.gsa.models.GSA", "pages/package/romcomma.gsa.models.Sobol", "pages/package/romcomma.rom", "pages/package/romcomma.rom.old", "pages/package/romcomma.run", "pages/package/romcomma.run.context", "pages/package/romcomma.run.context.Environment", "pages/package/romcomma.run.context.Timer", "pages/package/romcomma.run.function", "pages/package/romcomma.run.function.ALL", "pages/package/romcomma.run.function.ISHIGAMI", "pages/package/romcomma.run.function.OAKLEY2004", "pages/package/romcomma.run.function.SOBOL_G", "pages/package/romcomma.run.function.Scalar", "pages/package/romcomma.run.function.Vector", "pages/package/romcomma.run.function.linspace", "pages/package/romcomma.run.results", "pages/package/romcomma.run.results.Collect", "pages/package/romcomma.run.results.copy", "pages/package/romcomma.run.sample", "pages/package/romcomma.run.sample.DOE", "pages/package/romcomma.run.sample.Function", "pages/package/romcomma.run.sample.GaussianNoise", "pages/package/romcomma.run.summarised", "pages/package/romcomma.run.summarised.gpr", "pages/package/romcomma.run.summarised.gsa", "pages/package/romcomma.user", "pages/package/romcomma.user.benchmark", "pages/package/romcomma.user.benchmark.DOE", "pages/package/romcomma.user.benchmark.FUNCTION_VECTOR", "pages/package/romcomma.user.benchmark.GSA_KINDS", "pages/package/romcomma.user.benchmark.IS_GPR_COVARIANT", "pages/package/romcomma.user.benchmark.IS_GPR_ISOTROPIC", "pages/package/romcomma.user.benchmark.IS_GPR_READ", "pages/package/romcomma.user.benchmark.IS_GSA_ERROR_CALCULATED", "pages/package/romcomma.user.benchmark.IS_GSA_ERROR_PARTIAL", "pages/package/romcomma.user.benchmark.IS_NOISE_COVARIANT", "pages/package/romcomma.user.benchmark.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.benchmark.K", "pages/package/romcomma.user.benchmark.Ms", "pages/package/romcomma.user.benchmark.NOISE_MAGNITUDES", "pages/package/romcomma.user.benchmark.Ns", "pages/package/romcomma.user.benchmark.ROTATIONS", "pages/package/romcomma.user.benchmark.benchmark", "pages/package/romcomma.user.benchmark_gsa", "pages/package/romcomma.user.benchmark_gsa.BASE_FOLDER", "pages/package/romcomma.user.benchmark_gsa2", "pages/package/romcomma.user.benchmark_gsa2.BASE_FOLDER", "pages/package/romcomma.user.gpr_from_function", "pages/package/romcomma.user.gpr_from_function.DOE", "pages/package/romcomma.user.gpr_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gpr_from_function.IS_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gpr_from_function.IS_READ", "pages/package/romcomma.user.gpr_from_function.K", "pages/package/romcomma.user.gpr_from_function.Ms", "pages/package/romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gpr_from_function.Ns", "pages/package/romcomma.user.gpr_from_function.READ", "pages/package/romcomma.user.gpr_from_function.ROOT", "pages/package/romcomma.user.gpr_from_function.ROTATIONS", "pages/package/romcomma.user.gsa_from_csv", "pages/package/romcomma.user.gsa_from_csv.IS_COVARIANT", "pages/package/romcomma.user.gsa_from_csv.IS_ISOTROPIC", "pages/package/romcomma.user.gsa_from_csv.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gsa_from_csv.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gsa_from_csv.K", "pages/package/romcomma.user.gsa_from_csv.KINDS", "pages/package/romcomma.user.gsa_from_csv.NOISE_MAGNITUDE", "pages/package/romcomma.user.gsa_from_csv.ROTATION", "pages/package/romcomma.user.gsa_from_csv.run_gsa_from_function", "pages/package/romcomma.user.gsa_from_function", "pages/package/romcomma.user.gsa_from_function.DOE", "pages/package/romcomma.user.gsa_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "pages/package/romcomma.user.gsa_from_function.IS_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_ISOTROPIC", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.gsa_from_function.IS_READ", "pages/package/romcomma.user.gsa_from_function.K", "pages/package/romcomma.user.gsa_from_function.KINDS", "pages/package/romcomma.user.gsa_from_function.Ms", "pages/package/romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.gsa_from_function.Ns", "pages/package/romcomma.user.gsa_from_function.READ", "pages/package/romcomma.user.gsa_from_function.ROOT", "pages/package/romcomma.user.gsa_from_function.ROTATIONS", "pages/package/romcomma.user.gsa_from_function.run_gsa_from_function", "pages/package/romcomma.user.repo_from_csv", "pages/package/romcomma.user.repo_from_csv.ADD_NOISE", "pages/package/romcomma.user.repo_from_csv.CSV", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_csv.K", "pages/package/romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_csv.ROOT", "pages/package/romcomma.user.repo_from_function", "pages/package/romcomma.user.repo_from_function.DOE", "pages/package/romcomma.user.repo_from_function.FUNCTION_VECTOR", "pages/package/romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "pages/package/romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "pages/package/romcomma.user.repo_from_function.K", "pages/package/romcomma.user.repo_from_function.Ms", "pages/package/romcomma.user.repo_from_function.NOISE_MAGNITUDES", "pages/package/romcomma.user.repo_from_function.Ns", "pages/package/romcomma.user.repo_from_function.READ", "pages/package/romcomma.user.repo_from_function.ROOT", "pages/package/romcomma.user.repo_from_function.ROTATIONS", "pages/start"], "filenames": ["glossary.rst", "index.rst", "pages\\package\\reference.rst", "pages\\package\\romcomma.base.rst", "pages\\package\\romcomma.base.classes.rst", "pages\\package\\romcomma.base.classes.Data.rst", "pages\\package\\romcomma.base.classes.Frame.rst", "pages\\package\\romcomma.base.classes.Model.rst", "pages\\package\\romcomma.base.definitions.rst", "pages\\package\\romcomma.base.definitions.EFFECTIVELY_ZERO.rst", "pages\\package\\romcomma.base.definitions.FLOAT.rst", "pages\\package\\romcomma.base.definitions.INT.rst", "pages\\package\\romcomma.base.definitions.NP.rst", "pages\\package\\romcomma.base.definitions.TF.rst", "pages\\package\\romcomma.data.rst", "pages\\package\\romcomma.data.storage.rst", "pages\\package\\romcomma.data.storage.Fold.rst", "pages\\package\\romcomma.data.storage.Frame.rst", "pages\\package\\romcomma.data.storage.Normalization.rst", "pages\\package\\romcomma.data.storage.Repository.rst", "pages\\package\\romcomma.gpf.rst", "pages\\package\\romcomma.gpf.base.rst", "pages\\package\\romcomma.gpf.base.Variance.rst", "pages\\package\\romcomma.gpf.kernels.rst", "pages\\package\\romcomma.gpf.kernels.MOStationary.rst", "pages\\package\\romcomma.gpf.kernels.RBF.rst", "pages\\package\\romcomma.gpf.likelihoods.rst", "pages\\package\\romcomma.gpf.likelihoods.MOGaussian.rst", "pages\\package\\romcomma.gpf.mean_functions.rst", "pages\\package\\romcomma.gpf.mean_functions.MOMeanFunction.rst", "pages\\package\\romcomma.gpf.models.rst", "pages\\package\\romcomma.gpf.models.MOGPR.rst", "pages\\package\\romcomma.gpf.tests.rst", "pages\\package\\romcomma.gpf.tests.covariance.rst", "pages\\package\\romcomma.gpf.tests.increment.rst", "pages\\package\\romcomma.gpf.tests.kernel.rst", "pages\\package\\romcomma.gpf.tests.likelihood.rst", "pages\\package\\romcomma.gpf.tests.regression_data.rst", "pages\\package\\romcomma.gpr.rst", "pages\\package\\romcomma.gpr.kernels.rst", "pages\\package\\romcomma.gpr.kernels.Kernel.rst", "pages\\package\\romcomma.gpr.kernels.RBF.rst", "pages\\package\\romcomma.gpr.models.rst", "pages\\package\\romcomma.gpr.models.GPR.rst", "pages\\package\\romcomma.gpr.models.Likelihood.rst", "pages\\package\\romcomma.gpr.models.MOGP.rst", "pages\\package\\romcomma.gsa.rst", "pages\\package\\romcomma.gsa.base.rst", "pages\\package\\romcomma.gsa.base.Calibrator.rst", "pages\\package\\romcomma.gsa.base.Gaussian.rst", "pages\\package\\romcomma.gsa.base.diag_det.rst", "pages\\package\\romcomma.gsa.base.mean.rst", "pages\\package\\romcomma.gsa.base.ms.rst", "pages\\package\\romcomma.gsa.base.rms.rst", "pages\\package\\romcomma.gsa.base.sos.rst", "pages\\package\\romcomma.gsa.base.sym_check.rst", "pages\\package\\romcomma.gsa.calibrators.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobol.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobolWithError.rst", "pages\\package\\romcomma.gsa.calibrators.ClosedSobolWithRotation.rst", "pages\\package\\romcomma.gsa.models.rst", "pages\\package\\romcomma.gsa.models.GSA.rst", "pages\\package\\romcomma.gsa.models.Sobol.rst", "pages\\package\\romcomma.rom.rst", "pages\\package\\romcomma.rom.old.rst", "pages\\package\\romcomma.run.rst", "pages\\package\\romcomma.run.context.rst", "pages\\package\\romcomma.run.context.Environment.rst", "pages\\package\\romcomma.run.context.Timer.rst", "pages\\package\\romcomma.run.function.rst", "pages\\package\\romcomma.run.function.ALL.rst", "pages\\package\\romcomma.run.function.ISHIGAMI.rst", "pages\\package\\romcomma.run.function.OAKLEY2004.rst", "pages\\package\\romcomma.run.function.SOBOL_G.rst", "pages\\package\\romcomma.run.function.Scalar.rst", "pages\\package\\romcomma.run.function.Vector.rst", "pages\\package\\romcomma.run.function.linspace.rst", "pages\\package\\romcomma.run.results.rst", "pages\\package\\romcomma.run.results.Collect.rst", "pages\\package\\romcomma.run.results.copy.rst", "pages\\package\\romcomma.run.sample.rst", "pages\\package\\romcomma.run.sample.DOE.rst", "pages\\package\\romcomma.run.sample.Function.rst", "pages\\package\\romcomma.run.sample.GaussianNoise.rst", "pages\\package\\romcomma.run.summarised.rst", "pages\\package\\romcomma.run.summarised.gpr.rst", "pages\\package\\romcomma.run.summarised.gsa.rst", "pages\\package\\romcomma.user.rst", "pages\\package\\romcomma.user.benchmark.rst", "pages\\package\\romcomma.user.benchmark.DOE.rst", "pages\\package\\romcomma.user.benchmark.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.benchmark.GSA_KINDS.rst", "pages\\package\\romcomma.user.benchmark.IS_GPR_COVARIANT.rst", "pages\\package\\romcomma.user.benchmark.IS_GPR_ISOTROPIC.rst", "pages\\package\\romcomma.user.benchmark.IS_GPR_READ.rst", "pages\\package\\romcomma.user.benchmark.IS_GSA_ERROR_CALCULATED.rst", "pages\\package\\romcomma.user.benchmark.IS_GSA_ERROR_PARTIAL.rst", "pages\\package\\romcomma.user.benchmark.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.benchmark.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.benchmark.K.rst", "pages\\package\\romcomma.user.benchmark.Ms.rst", "pages\\package\\romcomma.user.benchmark.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.benchmark.Ns.rst", "pages\\package\\romcomma.user.benchmark.ROTATIONS.rst", "pages\\package\\romcomma.user.benchmark.benchmark.rst", "pages\\package\\romcomma.user.benchmark_gsa.rst", "pages\\package\\romcomma.user.benchmark_gsa.BASE_FOLDER.rst", "pages\\package\\romcomma.user.benchmark_gsa2.rst", "pages\\package\\romcomma.user.benchmark_gsa2.BASE_FOLDER.rst", "pages\\package\\romcomma.user.gpr_from_function.rst", "pages\\package\\romcomma.user.gpr_from_function.DOE.rst", "pages\\package\\romcomma.user.gpr_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gpr_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gpr_from_function.K.rst", "pages\\package\\romcomma.user.gpr_from_function.Ms.rst", "pages\\package\\romcomma.user.gpr_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gpr_from_function.Ns.rst", "pages\\package\\romcomma.user.gpr_from_function.READ.rst", "pages\\package\\romcomma.user.gpr_from_function.ROOT.rst", "pages\\package\\romcomma.user.gpr_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.gsa_from_csv.rst", "pages\\package\\romcomma.user.gsa_from_csv.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_csv.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gsa_from_csv.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_csv.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gsa_from_csv.K.rst", "pages\\package\\romcomma.user.gsa_from_csv.KINDS.rst", "pages\\package\\romcomma.user.gsa_from_csv.NOISE_MAGNITUDE.rst", "pages\\package\\romcomma.user.gsa_from_csv.ROTATION.rst", "pages\\package\\romcomma.user.gsa_from_csv.run_gsa_from_function.rst", "pages\\package\\romcomma.user.gsa_from_function.rst", "pages\\package\\romcomma.user.gsa_from_function.DOE.rst", "pages\\package\\romcomma.user.gsa_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_ISOTROPIC.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.gsa_from_function.IS_READ.rst", "pages\\package\\romcomma.user.gsa_from_function.K.rst", "pages\\package\\romcomma.user.gsa_from_function.KINDS.rst", "pages\\package\\romcomma.user.gsa_from_function.Ms.rst", "pages\\package\\romcomma.user.gsa_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.gsa_from_function.Ns.rst", "pages\\package\\romcomma.user.gsa_from_function.READ.rst", "pages\\package\\romcomma.user.gsa_from_function.ROOT.rst", "pages\\package\\romcomma.user.gsa_from_function.ROTATIONS.rst", "pages\\package\\romcomma.user.gsa_from_function.run_gsa_from_function.rst", "pages\\package\\romcomma.user.repo_from_csv.rst", "pages\\package\\romcomma.user.repo_from_csv.ADD_NOISE.rst", "pages\\package\\romcomma.user.repo_from_csv.CSV.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_csv.K.rst", "pages\\package\\romcomma.user.repo_from_csv.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_csv.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.rst", "pages\\package\\romcomma.user.repo_from_function.DOE.rst", "pages\\package\\romcomma.user.repo_from_function.FUNCTION_VECTOR.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_COVARIANT.rst", "pages\\package\\romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM.rst", "pages\\package\\romcomma.user.repo_from_function.K.rst", "pages\\package\\romcomma.user.repo_from_function.Ms.rst", "pages\\package\\romcomma.user.repo_from_function.NOISE_MAGNITUDES.rst", "pages\\package\\romcomma.user.repo_from_function.Ns.rst", "pages\\package\\romcomma.user.repo_from_function.READ.rst", "pages\\package\\romcomma.user.repo_from_function.ROOT.rst", "pages\\package\\romcomma.user.repo_from_function.ROTATIONS.rst", "pages\\start.rst"], "titles": ["Glossary", "rom-comma User Guide", "Module Reference", "romcomma.base", "romcomma.base.classes", "romcomma.base.classes.Data", "romcomma.base.classes.Frame", "romcomma.base.classes.Model", "romcomma.base.definitions", "romcomma.base.definitions.EFFECTIVELY_ZERO", "romcomma.base.definitions.FLOAT", "romcomma.base.definitions.INT", "romcomma.base.definitions.NP", "romcomma.base.definitions.TF", "romcomma.data", "romcomma.data.storage", "romcomma.data.storage.Fold", "romcomma.data.storage.Frame", "romcomma.data.storage.Normalization", "romcomma.data.storage.Repository", "romcomma.gpf", "romcomma.gpf.base", "romcomma.gpf.base.Variance", "romcomma.gpf.kernels", "romcomma.gpf.kernels.MOStationary", "romcomma.gpf.kernels.RBF", "romcomma.gpf.likelihoods", "romcomma.gpf.likelihoods.MOGaussian", "romcomma.gpf.mean_functions", "romcomma.gpf.mean_functions.MOMeanFunction", "romcomma.gpf.models", "romcomma.gpf.models.MOGPR", "romcomma.gpf.tests", "romcomma.gpf.tests.covariance", "romcomma.gpf.tests.increment", "romcomma.gpf.tests.kernel", "romcomma.gpf.tests.likelihood", "romcomma.gpf.tests.regression_data", "romcomma.gpr", "romcomma.gpr.kernels", "romcomma.gpr.kernels.Kernel", "romcomma.gpr.kernels.RBF", "romcomma.gpr.models", "romcomma.gpr.models.GPR", "romcomma.gpr.models.Likelihood", "romcomma.gpr.models.MOGP", "romcomma.gsa", "romcomma.gsa.base", "romcomma.gsa.base.Calibrator", "romcomma.gsa.base.Gaussian", "romcomma.gsa.base.diag_det", "romcomma.gsa.base.mean", "romcomma.gsa.base.ms", "romcomma.gsa.base.rms", "romcomma.gsa.base.sos", "romcomma.gsa.base.sym_check", "romcomma.gsa.calibrators", "romcomma.gsa.calibrators.ClosedSobol", "romcomma.gsa.calibrators.ClosedSobolWithError", "romcomma.gsa.calibrators.ClosedSobolWithRotation", "romcomma.gsa.models", "romcomma.gsa.models.GSA", "romcomma.gsa.models.Sobol", "romcomma.rom", "romcomma.rom.old", "romcomma.run", "romcomma.run.context", "romcomma.run.context.Environment", "romcomma.run.context.Timer", "romcomma.run.function", "romcomma.run.function.ALL", "romcomma.run.function.ISHIGAMI", "romcomma.run.function.OAKLEY2004", "romcomma.run.function.SOBOL_G", "romcomma.run.function.Scalar", "romcomma.run.function.Vector", "romcomma.run.function.linspace", "romcomma.run.results", "romcomma.run.results.Collect", "romcomma.run.results.copy", "romcomma.run.sample", "romcomma.run.sample.DOE", "romcomma.run.sample.Function", "romcomma.run.sample.GaussianNoise", "romcomma.run.summarised", "romcomma.run.summarised.gpr", "romcomma.run.summarised.gsa", "romcomma.user", "romcomma.user.benchmark", "romcomma.user.benchmark.DOE", "romcomma.user.benchmark.FUNCTION_VECTOR", "romcomma.user.benchmark.GSA_KINDS", "romcomma.user.benchmark.IS_GPR_COVARIANT", "romcomma.user.benchmark.IS_GPR_ISOTROPIC", "romcomma.user.benchmark.IS_GPR_READ", "romcomma.user.benchmark.IS_GSA_ERROR_CALCULATED", "romcomma.user.benchmark.IS_GSA_ERROR_PARTIAL", "romcomma.user.benchmark.IS_NOISE_COVARIANT", "romcomma.user.benchmark.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.benchmark.K", "romcomma.user.benchmark.Ms", "romcomma.user.benchmark.NOISE_MAGNITUDES", "romcomma.user.benchmark.Ns", "romcomma.user.benchmark.ROTATIONS", "romcomma.user.benchmark.benchmark", "romcomma.user.benchmark_gsa", "romcomma.user.benchmark_gsa.BASE_FOLDER", "romcomma.user.benchmark_gsa2", "romcomma.user.benchmark_gsa2.BASE_FOLDER", "romcomma.user.gpr_from_function", "romcomma.user.gpr_from_function.DOE", "romcomma.user.gpr_from_function.FUNCTION_VECTOR", "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gpr_from_function.IS_COVARIANT", "romcomma.user.gpr_from_function.IS_ISOTROPIC", "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT", "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gpr_from_function.IS_READ", "romcomma.user.gpr_from_function.K", "romcomma.user.gpr_from_function.Ms", "romcomma.user.gpr_from_function.NOISE_MAGNITUDES", "romcomma.user.gpr_from_function.Ns", "romcomma.user.gpr_from_function.READ", "romcomma.user.gpr_from_function.ROOT", "romcomma.user.gpr_from_function.ROTATIONS", "romcomma.user.gsa_from_csv", "romcomma.user.gsa_from_csv.IS_COVARIANT", "romcomma.user.gsa_from_csv.IS_ISOTROPIC", "romcomma.user.gsa_from_csv.IS_NOISE_COVARIANT", "romcomma.user.gsa_from_csv.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gsa_from_csv.K", "romcomma.user.gsa_from_csv.KINDS", "romcomma.user.gsa_from_csv.NOISE_MAGNITUDE", "romcomma.user.gsa_from_csv.ROTATION", "romcomma.user.gsa_from_csv.run_gsa_from_function", "romcomma.user.gsa_from_function", "romcomma.user.gsa_from_function.DOE", "romcomma.user.gsa_from_function.FUNCTION_VECTOR", "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS", "romcomma.user.gsa_from_function.IS_COVARIANT", "romcomma.user.gsa_from_function.IS_ISOTROPIC", "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT", "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.gsa_from_function.IS_READ", "romcomma.user.gsa_from_function.K", "romcomma.user.gsa_from_function.KINDS", "romcomma.user.gsa_from_function.Ms", "romcomma.user.gsa_from_function.NOISE_MAGNITUDES", "romcomma.user.gsa_from_function.Ns", "romcomma.user.gsa_from_function.READ", "romcomma.user.gsa_from_function.ROOT", "romcomma.user.gsa_from_function.ROTATIONS", "romcomma.user.gsa_from_function.run_gsa_from_function", "romcomma.user.repo_from_csv", "romcomma.user.repo_from_csv.ADD_NOISE", "romcomma.user.repo_from_csv.CSV", "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT", "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_csv.K", "romcomma.user.repo_from_csv.NOISE_MAGNITUDES", "romcomma.user.repo_from_csv.ROOT", "romcomma.user.repo_from_function", "romcomma.user.repo_from_function.DOE", "romcomma.user.repo_from_function.FUNCTION_VECTOR", "romcomma.user.repo_from_function.IS_NOISE_COVARIANT", "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM", "romcomma.user.repo_from_function.K", "romcomma.user.repo_from_function.Ms", "romcomma.user.repo_from_function.NOISE_MAGNITUDES", "romcomma.user.repo_from_function.Ns", "romcomma.user.repo_from_function.READ", "romcomma.user.repo_from_function.ROOT", "romcomma.user.repo_from_function.ROTATIONS", "Getting Started"], "terms": {"reduc": [1, 16, 61, 62, 86], "order": [0, 1, 61, 62, 75, 78, 173], "model": [1, 4, 5, 13, 40, 41, 58, 86, 94, 117, 143, 173], "via": [1, 57, 58, 59, 61, 62, 173], "global": [0, 1, 19, 46, 93, 104, 173], "sensit": [0, 1, 46, 93, 104, 173], "analysi": [0, 1, 46, 93, 104, 173], "us": [0, 1, 7, 13, 16, 17, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 67, 82, 83, 85, 173], "gaussian": [0, 1, 20, 27, 28, 31, 38, 42, 43, 45, 61, 62, 83, 97, 103, 104, 115, 128, 141, 153, 154, 156, 164, 173], "process": [0, 1, 20, 27, 31, 38, 42, 43, 45, 61, 62, 77, 103, 104, 173], "regress": [0, 1, 20, 31, 38, 42, 103, 104, 173], "robert": 1, "A": [0, 1, 5, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 57, 58, 59, 61, 74, 75, 76, 78, 79, 82, 85, 86, 91, 130, 131, 145, 173], "milton": [0, 1, 173], "The": [1, 2, 5, 6, 7, 10, 11, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 50, 57, 58, 59, 61, 62, 65, 67, 68, 70, 74, 75, 76, 78, 79, 81, 82, 85, 86, 89, 90, 99, 100, 101, 102, 104, 106, 108, 110, 111, 118, 119, 120, 121, 123, 130, 132, 136, 137, 144, 146, 147, 148, 150, 155, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 173], "univers": 1, "sheffield": 1, "thi": [0, 1, 5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 67, 68, 74, 75, 82, 83, 85, 86, 104, 173], "document": [1, 106, 108, 123, 155, 160, 171, 173], "i": [0, 1, 5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 67, 68, 75, 78, 79, 81, 82, 85, 86, 89, 92, 96, 97, 98, 101, 110, 113, 114, 115, 116, 120, 126, 127, 128, 129, 132, 136, 139, 140, 141, 142, 147, 156, 157, 159, 162, 164, 165, 168, 173], "current": [1, 13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 173], "under": [1, 64, 82, 173], "construct": [1, 6, 13, 22, 40, 41, 57, 58, 59, 61, 62, 64, 75, 78, 82, 83, 85], "get": [0, 1, 13, 75], "start": [0, 1, 5, 7, 13, 58, 61, 76], "instal": 1, "packag": [0, 32, 173], "structur": 15, "refer": [0, 1, 13, 45, 173], "romcomma": [1, 173], "base": [0, 1, 16, 17, 18, 19, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 74, 75, 78, 81, 82, 83, 106, 108, 173], "data": [1, 6, 7, 13, 27, 29, 31, 40, 41, 43, 44, 45, 61, 62, 74, 75, 82, 83, 85, 104, 106, 108, 123, 130, 150, 155, 160, 171, 173], "gpf": [1, 173], "gpr": [0, 1, 31, 57, 58, 59, 61, 62, 84, 92, 94, 112, 113, 114, 117, 126, 127, 138, 139, 140, 143, 173], "gsa": [0, 1, 84, 91, 95, 96, 131, 145, 173], "pd": [0, 2, 6, 16, 17, 18, 19, 78], "alias": [], "panda": [0, 2, 6, 13, 16, 17, 19], "code": [27, 40], "np": [0, 2, 6, 7, 13, 40, 41, 43, 44, 45, 70, 71, 72, 73, 74, 76, 83, 90, 111, 137, 163], "numpi": [0, 2, 12, 13, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59], "tf": [0, 2, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 61, 62, 67], "tensorflow": [0, 2, 13, 22, 27, 31], "gf": [0, 2, 27], "gpflow": [0, 2, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 43, 45, 67], "ddev": [], "standard": [0, 2, 61, 62, 70, 71, 90, 95, 96, 111, 137, 163], "deviat": [0, 2], "index": [0, 1, 5, 6, 7, 13, 16, 17, 19, 56, 58, 61, 62, 78, 82, 86, 173], "modul": [0, 1, 3, 8, 14, 20, 22, 24, 25, 27, 29, 31, 38, 46, 57, 58, 59, 63, 65, 69, 87, 88, 104, 105, 107, 109, 125, 135, 153, 161], "search": 1, "page": [1, 173], "rom": [0, 2, 84, 106, 108, 123, 155, 160, 171, 173], "comma": [0, 2, 106, 108, 123, 155, 160, 171, 173], "librari": [2, 3, 13, 20], "class": [3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 69, 74, 75, 77, 78, 80, 81, 82, 83, 173], "definit": [3, 22, 24, 25, 27, 173], "underpin": [3, 47, 62], "entir": [3, 61, 62], "contain": [13, 16, 19, 21, 23, 26, 30, 31, 32, 39, 42, 50, 56, 75, 78, 79, 82, 85, 86], "paramet": [5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 85, 86, 89, 90, 93, 103, 104, 110, 111, 134, 136, 137, 162, 163], "folder": [0, 2, 5, 7, 16, 19, 40, 41, 43, 44, 45, 61, 62, 78, 79, 82, 85, 86, 106, 108, 123, 150, 160, 171, 173], "read_paramet": [], "fals": [7, 16, 19, 24, 25, 31, 40, 41, 44, 61, 62, 78, 81, 82, 83, 85, 86, 89, 92, 93, 96, 97, 98, 110, 112, 113, 114, 115, 116, 122, 126, 127, 128, 129, 136, 138, 139, 140, 141, 142, 149, 154, 156, 157, 162, 164, 165, 170], "kwarg": [5, 6, 7, 16, 17, 19, 27, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 67, 74, 75, 78, 82, 85, 86], "sourc": [5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 67, 68, 74, 75, 76, 78, 79, 81, 82, 83, 85, 86, 89, 104, 110, 134, 136, 152, 162], "abc": [5, 7, 48], "abstract": [5, 7, 24, 40, 43, 61], "ani": [5, 6, 7, 13, 17, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 78, 81, 82, 83, 86, 173], "implement": [7, 13, 24, 31, 40, 41, 42, 43, 45, 61, 67, 85, 173], "gener": [0, 7, 16, 17, 19, 31, 40, 41, 45, 61, 62, 77, 82, 83, 90, 104, 111, 137, 163, 173], "file": [6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 78, 82, 86, 94, 117, 143, 153, 155], "storag": [7, 14, 75, 83, 173], "handl": [7, 16], "latter": 7, "dealt": 7, "each": [7, 13, 16, 19, 29, 31, 43, 45, 49, 75, 81, 82, 85, 86, 89, 110, 136, 162], "subclass": [7, 31, 44, 61, 62], "overrid": [7, 57, 58, 59, 61, 62], "valu": [5, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 75, 76, 78, 82, 130], "its": [0, 7, 13, 22, 24, 25, 27, 29, 31, 40, 41, 57, 58, 59, 81, 85, 89, 110, 136, 162, 173], "own": [7, 22, 24, 25, 27, 29, 31, 57, 58, 59], "type": [5, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 22, 24, 25, 27, 31, 34, 40, 41, 43, 44, 45, 49, 55, 57, 58, 59, 61, 62, 70, 71, 72, 73, 75, 76, 78, 82, 85, 86, 90, 104, 111, 137, 163], "namedtupl": [5, 7, 40, 41, 43, 44, 45, 58, 61, 62], "defin": [7, 13, 16, 17, 19, 24, 25, 29, 31, 40, 41], "set": [5, 7, 13, 40, 41, 43, 44, 45, 62, 67, 75], "take": [7, 49], "matric": [7, 24, 25], "also": [7, 13, 24, 25, 29, 31], "mai": [7, 13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 173], "includ": [7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 43, 45, 49, 57, 58, 59, 75, 82, 130, 173], "an": [0, 5, 7, 13, 16, 17, 19, 22, 24, 25, 29, 31, 40, 41, 43, 44, 45, 49, 57, 61, 62, 75, 78, 81, 82, 83, 85, 89, 110, 122, 130, 136, 149, 162, 170, 173], "optim": [13, 27, 31, 43, 45, 85], "method": [0, 5, 6, 7, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 48, 49, 57, 58, 59, 61, 62, 74, 75, 78, 81, 82, 83, 173], "option": [6, 13, 16, 17, 18, 19, 45, 62, 78, 82, 86, 88, 109, 125, 135, 153, 161], "store": [5, 6, 7, 16, 40, 41, 43, 44, 45, 56, 61, 62], "json": [7, 16, 19], "which": [7, 13, 17, 18, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 57, 58, 59, 61, 74, 75, 76, 79, 81, 82, 85, 86, 89, 101, 110, 120, 132, 136, 147, 159, 162, 168, 173], "default": [5, 7, 13, 16, 17, 19, 24, 25, 27, 31, 40, 41, 43, 44, 45, 57, 58, 61, 62, 67, 68, 75, 81, 82, 85, 86, 89, 110, 136, 162], "cl": 7, "pathlik": [], "bool": [6, 7, 16, 17, 19, 24, 25, 31, 40, 41, 43, 44, 45, 49, 61, 62, 67, 68, 78, 81, 82, 83, 85, 86, 89, 92, 93, 94, 95, 96, 97, 98, 110, 112, 113, 114, 115, 116, 117, 122, 126, 127, 128, 129, 134, 136, 138, 139, 140, 141, 142, 143, 149, 154, 156, 157, 162, 164, 165, 170], "matrix": [5, 6, 7, 12, 13, 16, 19, 22, 24, 25, 27, 31, 40, 41, 43, 44, 45, 61, 62, 70, 71, 72, 73, 74, 81, 82, 83, 89, 90, 110, 111, 136, 137, 162, 163], "__init__": [5, 6, 7, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 48, 49, 57, 58, 59, 61, 62, 74, 75, 78, 81, 82, 83], "constructor": [5, 7, 24, 25, 27, 44, 61, 62], "call": [5, 6, 7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 74, 173], "all": [7, 13, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 44, 57, 58, 59, 61, 62, 75, 82, 86, 106, 108, 123, 130, 150, 155, 160, 171], "matter": [7, 40, 41, 44, 61, 62], "prioriti": [7, 40, 41, 44, 61, 62], "str": [5, 6, 7, 16, 17, 19, 22, 40, 41, 43, 44, 45, 52, 53, 54, 57, 58, 59, 61, 62, 67, 68, 75, 78, 79, 82, 83, 85, 86, 134], "path": [5, 6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 61, 62, 78, 79, 82, 86, 104, 123, 134, 150, 155, 160, 171], "locat": [0, 7, 16, 19, 31, 40, 41, 44, 81, 89, 110, 136, 162, 173], "If": [5, 6, 7, 13, 16, 17, 18, 24, 25, 31, 40, 41, 43, 44, 45, 49, 58, 61, 62, 67, 75, 79, 82, 85, 86], "true": [6, 7, 13, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 68, 76, 81, 85, 89, 95, 110, 136, 162], "ar": [5, 7, 13, 16, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 75, 85, 86, 173], "read": [5, 6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 61, 62, 85, 94, 117, 143, 154, 155], "from": [5, 6, 7, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 69, 75, 78, 83, 85, 94, 117, 143, 153, 173], "otherwis": [6, 7, 17, 24, 25, 40, 41, 43, 44, 45, 67, 75, 85], "ndarrai": [5, 6, 7, 12, 16, 24, 25, 27, 31, 40, 41, 43, 44, 45, 61, 62, 74, 76, 81, 82, 83, 85, 133], "field": [5, 7, 40, 41, 43, 44, 45, 58, 61, 62], "replac": [7, 40, 41, 43, 44, 45, 85], "after": [7, 22, 40, 41, 44, 124, 133, 151, 172], "attribut": [5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 69, 74, 75, 78, 81, 82, 83, 88, 105, 107, 109, 125, 135, 153, 161], "none": [6, 13, 16, 18, 19, 24, 25, 31, 43, 45, 61, 62, 75, 78, 82, 85, 86, 92, 93, 94, 103, 113, 114, 117, 124, 126, 127, 132, 133, 139, 140, 143, 151], "placehold": [7, 13, 61], "must": [5, 7, 13, 19, 31, 40, 41, 43, 44, 45, 50, 61, 62], "overridden": [5, 7, 61], "notimpl": [5, 7, 61], "arrai": [5, 6, 7, 12, 13, 40, 41, 61, 172], "Not": [61, 62], "dtype": [5, 6, 7, 10, 11, 13, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 61], "u15": [], "alia": [12, 13, 40, 41, 43, 44, 45, 58, 62, 81], "number": [5, 7, 13, 16, 19, 27, 29, 31, 40, 41, 43, 45, 49, 58, 61, 74, 81, 82, 83, 89, 99, 100, 102, 110, 118, 119, 121, 130, 136, 144, 146, 148, 158, 162, 166, 167, 169], "0": [5, 7, 13, 16, 18, 22, 24, 25, 27, 29, 31, 45, 49, 57, 58, 59, 61, 62, 76, 83, 86, 101, 120, 147, 155, 159, 168, 171, 172], "count": [5, 7, 49, 58, 61], "return": [5, 6, 7, 10, 11, 13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 50, 55, 57, 58, 59, 61, 62, 70, 71, 72, 73, 75, 76, 81, 82, 85, 86, 89, 90, 104, 110, 111, 136, 137, 162, 163], "occurr": [5, 7, 58, 61], "stop": [5, 7, 58, 61, 76], "9223372036854775807": [5, 7, 58, 61], "first": [0, 5, 7, 22, 24, 25, 27, 29, 31, 57, 58, 59, 61, 62, 75, 173], "rais": [5, 6, 7, 13, 16, 19, 40, 41, 43, 45, 58, 61, 75, 78, 79, 82, 85, 86], "valueerror": [5, 7, 13, 58, 61], "present": [5, 7, 58, 61, 75], "broadcast_valu": 6, "model_nam": [], "target_shap": 6, "is_diagon": 6, "broadcast": [6, 22, 27, 29, 31, 40, 41, 43, 45, 49, 85, 86], "ordin": [5, 7, 31, 40, 41, 43, 44, 45, 49, 61, 62, 81, 89, 110, 136, 162], "onli": [13, 16, 19, 22, 24, 25, 27, 45, 86], "error": [13, 40, 41, 43, 45, 58, 61, 62, 86, 95, 96], "report": 68, "name": [13, 22, 24, 25, 27, 29, 31, 43, 45, 57, 58, 59, 67, 68, 75, 78, 82, 85, 86], "whose": [22, 24, 25, 27, 29, 31, 57, 58, 59, 61, 62], "we": [13, 22, 31, 173], "tupl": [6, 13, 16, 19, 22, 24, 25, 27, 31, 40, 41, 43, 45, 75, 97, 98, 100, 101, 102, 115, 116, 119, 120, 121, 141, 142, 146, 147, 148, 156, 157, 159, 164, 165, 167, 168, 169], "int": [6, 16, 19, 22, 27, 29, 31, 40, 41, 43, 45, 49, 55, 57, 58, 59, 61, 62, 74, 76, 81, 82, 83, 86, 89, 99, 100, 102, 110, 118, 119, 121, 130, 133, 136, 144, 146, 148, 158, 162, 166, 167, 169], "shape": [6, 13, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 50, 57, 58, 59, 76], "whether": [6, 16, 19, 24, 25, 40, 41, 43, 45, 61, 62, 68, 78, 81, 82, 85, 86, 89, 92, 94, 95, 96, 97, 98, 110, 112, 113, 114, 115, 116, 117, 122, 126, 127, 128, 129, 136, 138, 139, 140, 141, 142, 143, 149, 154, 156, 157, 162, 164, 165, 170], "zero": [6, 18, 29, 31, 45, 83], "off": 6, "diagon": [6, 22, 24, 25, 27, 31, 40, 41, 49, 50, 58, 86], "element": [6, 13, 27], "squar": [0, 6, 25, 40, 41, 173], "self": [5, 6, 7, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 74, 75, 78, 82, 83], "chain": [5, 6, 7, 16, 19, 40, 41, 43, 44, 45, 49, 61, 62], "indexerror": [6, 16, 19, 40, 41, 43, 45, 82], "imposs": 6, "csv": [6, 16, 17, 19, 78, 82, 153], "assertionerror": [], "write": [6, 13, 17, 78], "chang": [6, 13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "unless": [16, 19, 61, 62, 82, 86], "properti": [7, 13, 16, 17, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 49, 57, 58, 59, 61, 62, 75, 82, 83], "dict": [6, 7, 16, 17, 19, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 75, 78, 82, 83, 85, 86], "param": [40, 41, 57, 58, 59, 62], "shorthand": [], "save": [], "_paramet": [], "essenti": [5, 40], "back": [6, 16, 17, 43, 45], "note": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 67], "lazi": [], "explicitli": 13, "design": [16, 19, 43, 45, 80, 82], "most": [5, 13, 173], "simpl": 5, "wrapper": [5, 29], "annoyingli": 5, "underscor": 5, "shouldn": [], "t": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "need": [13, 31, 61, 62, 86], "doe": [13, 31, 75, 80, 82, 90, 111, 130, 137, 163], "record": [5, 7, 16, 19, 40, 41, 43, 44, 45, 61, 62], "kei": [5, 7, 13, 40, 41, 43, 44, 45, 61, 62, 75, 78], "initi": [5, 7, 13, 16, 17, 18, 40, 41, 43, 44, 45, 61, 62, 83], "pair": [5, 7, 27, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 75], "precis": [5, 7, 40, 41, 43, 44, 45, 61, 62], "It": [13, 31], "caller": 13, "": [0, 13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 75, 173], "respons": [43, 45], "ensur": 13, "everi": [16, 19], "miss": [5, 7, 40, 41, 43, 44, 45, 61, 62, 78], "receiv": [5, 7, 40, 41, 43, 44, 45, 61, 62], "so": [5, 7, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 86], "import": [], "constant": [8, 13, 27], "hint": [], "function": [0, 8, 13, 25, 27, 28, 29, 31, 32, 38, 46, 47, 49, 66, 77, 80, 81, 84, 88, 90, 101, 109, 111, 120, 124, 125, 132, 133, 135, 137, 147, 151, 159, 161, 163, 168, 172, 173], "object": [6, 12, 13, 17, 18, 19, 27, 29, 31, 40, 49, 57, 58, 59, 61, 62, 70, 71, 72, 73, 74, 75, 78, 81, 82, 83, 90, 111, 137, 163], "extend": [0, 12, 13, 27, 173], "tensor": [5, 7, 12, 13, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62], "tensor1": [12, 13], "tensor2": [12, 13], "vector": [0, 12, 13, 43, 45, 49, 82, 90, 111, 124, 133, 137, 151, 163, 172, 173], "covector": [12, 13], "tensor3": [12, 13], "tensor4": [12, 13], "tensor5": [12, 13], "tensor6": [12, 13], "tensor7": [12, 13], "tensor8": [12, 13], "op": 13, "value_index": 13, "nativeobject": 13, "repres": [0, 13, 27, 173], "multidimension": 13, "singl": [13, 31, 40, 41, 56, 61, 62, 86], "known": [13, 29], "when": [9, 13, 78, 85, 86], "program": 13, "main": [0, 13, 173], "manipul": 13, "pass": [6, 13, 17, 22, 24, 25, 27, 29, 31, 45, 57, 58, 59, 62, 67, 78, 82, 85, 104], "around": 13, "ha": [0, 13, 18, 24, 25, 31, 75, 82, 86, 124, 133, 151, 172, 173], "follow": [13, 18, 22, 24, 25, 27, 29, 31, 45, 57, 58, 59, 75, 86, 173], "float32": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 67], "int32": 13, "string": [13, 40, 41, 67, 68], "exampl": [13, 71, 72, 73, 87, 105, 107], "support": [13, 20, 31], "eager": [13, 67], "execut": 13, "graph": [13, 31], "In": [0, 13, 75, 173], "oper": [13, 67, 68], "evalu": [13, 24, 27], "immedi": 13, "comput": [13, 27, 31, 49], "later": 13, "below": [13, 173], "multipl": [13, 31], "result": [13, 22, 24, 25, 27, 29, 31, 43, 45, 57, 58, 59, 61, 62, 82, 85, 86, 104, 173], "calcul": [13, 18, 31, 49, 56, 57, 58, 59, 61, 62, 86, 95, 96], "some": [13, 31, 173], "c": [0, 13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 67, 106, 108, 123, 155, 160, 171, 173], "1": [13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 57, 58, 59, 61, 62, 76, 82, 86, 91, 99, 106, 108, 120, 131, 144, 145, 171], "2": [13, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 75, 86, 91, 123, 130, 131, 145, 155, 166, 171], "3": [13, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 71, 72, 73, 86, 91, 106, 108, 123, 131, 145], "4": 13, "d": [13, 24, 25, 31, 75], "e": [13, 24, 27, 28, 31, 43, 45, 75, 78, 86, 173], "matmul": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "print": [13, 67, 68], "7": [13, 72, 155, 167], "dure": [13, 24, 25, 27], "you": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59, 61, 62, 86], "discov": 13, "your": [13, 173], "actual": 13, "eagertensor": 13, "intern": [13, 49], "detail": [0, 13, 16, 17, 19, 173], "give": [13, 16, 19, 29, 43, 45, 49, 82], "access": 13, "common": 13, "wai": 13, "rank": [0, 13, 31, 49, 173], "size": [13, 31], "dimens": [13, 22, 24, 25, 27, 31, 40, 41, 43, 45, 49, 74, 81, 82, 89, 110, 136, 162], "alwai": 13, "fulli": 13, "partial": [13, 96], "produc": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "input": [0, 13, 16, 19, 24, 25, 31, 40, 41, 43, 45, 74, 81, 82, 88, 89, 90, 100, 109, 110, 111, 119, 124, 125, 133, 135, 136, 137, 146, 151, 161, 162, 163, 167, 172, 173], "case": [13, 75], "possibl": 13, "find": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "time": [13, 67, 68], "special": 13, "avail": [13, 85], "see": [6, 13, 31, 45], "variabl": [13, 16, 22, 24, 25, 27, 29, 31, 57, 58, 59], "spars": [13, 31], "sparsetensor": 13, "raggedtensor": 13, "caution": 13, "datafram": [5, 6, 7, 13, 16, 17, 18, 19, 40, 41, 43, 44, 45, 61, 62, 153], "underli": [13, 61, 62], "buffer": 13, "re": [13, 31], "python": [0, 13, 173], "b": [13, 22, 24, 25, 27, 29, 31, 45, 57, 58, 59], "int64": 13, "subject": 13, "user": [13, 60, 65, 82, 84, 85, 173], "should": [13, 24, 31, 45, 49, 61, 62], "reli": 13, "behaviour": [13, 24, 25], "For": [13, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 61, 62, 86], "more": [13, 31, 75], "guid": [13, 173], "http": [0, 13, 16, 17, 19, 31, 45, 69, 173], "org": [13, 16, 17, 19, 45], "consum": 13, "list": [13, 16, 19, 22, 24, 25, 27, 29, 31, 55, 57, 58, 59, 85, 86, 91, 131, 145, 173], "devic": [13, 67, 78, 134], "eval": 13, "feed_dict": 13, "session": 13, "compat": 13, "v1": 13, "within": [13, 16, 19, 45, 79, 81, 89, 110, 136, 162], "do": [13, 43, 45, 61, 62, 91, 131, 145], "preced": 13, "n": [13, 16, 18, 19, 22, 24, 25, 27, 31, 43, 45, 49, 81, 82, 83, 89, 110, 136, 155, 162], "befor": [13, 16, 19, 49, 82], "invok": 13, "have": [5, 7, 13, 17, 24, 25, 27, 61, 85, 86], "been": [0, 13, 18, 27, 85, 86, 124, 133, 151, 172, 173], "launch": 13, "either": [13, 75], "specifi": [13, 19, 24, 25, 40, 41, 43, 45, 49, 61, 62, 75, 85], "dictionari": [13, 57, 61, 62, 75], "map": 13, "feed": 13, "run": [1, 10, 11, 13, 90, 93, 103, 104, 111, 137, 163, 173], "descript": 13, "valid": 13, "correspond": [13, 24, 75], "experimental_ref": 13, "deprec": 13, "remov": [13, 75], "futur": [13, 31], "version": [13, 27, 76], "instruct": 13, "updat": [13, 16, 17, 19, 75, 86], "ref": 13, "instead": [13, 43, 45, 82], "get_shap": 13, "tensorshap": 13, "5": [13, 100, 118, 146, 158], "6": [13, 119], "equival": 13, "build": 13, "kera": 13, "unknown": 13, "10": 13, "batch": [13, 31, 49], "infer": 13, "regist": 13, "determin": [13, 22, 24, 25, 27, 29, 31, 49, 50, 57, 58, 59], "without": [6, 13, 56], "kernel": [13, 31, 43, 45, 85, 86, 114, 127, 140, 173], "convert": [13, 40, 41], "debug": 13, "provid": [13, 75, 83, 85], "earli": 13, "trace": 13, "being": [13, 61, 62, 67, 68, 86, 154], "concret": 13, "www": 13, "concrete_funct": 13, "def": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "my_matmul": 13, "propag": 13, "extent": 13, "f": [13, 27, 29, 31, 43, 45, 75, 86], "get_concrete_funct": 13, "tensorspec": 13, "fail": [13, 112, 138], "missmatch": 13, "can": [5, 7, 13, 16, 24, 25, 27, 31, 61], "detect": 13, "cf": 13, "traceback": 13, "recent": 13, "last": [13, 24, 27, 50, 75], "equal": [9, 13, 101, 120, 132, 147, 159, 168], "addit": 13, "inform": 13, "about": 13, "ensure_shap": 13, "set_shap": 13, "augment": 13, "my_fun": 13, "output": [0, 13, 16, 19, 20, 24, 25, 31, 40, 41, 43, 45, 49, 85, 86, 97, 101, 115, 120, 128, 132, 141, 147, 150, 153, 154, 156, 159, 164, 168, 173], "hashabl": 13, "primari": [13, 65], "api": [13, 69], "put": 13, "__hash__": 13, "longer": 13, "except": [13, 78, 85, 86, 112, 138], "x": [13, 16, 18, 19, 22, 24, 25, 27, 29, 31, 34, 40, 41, 43, 45, 57, 58, 59, 70, 71, 72, 73, 74, 75, 90, 111, 137, 163], "y": [13, 16, 18, 19, 27, 31, 40, 41, 43, 45], "z": [13, 43, 45, 49], "tensor_set": 13, "typeerror": [13, 16, 19], "unhash": 13, "tensor_dict": 13, "five": 13, "ten": 13, "deref": 13, "origin": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "recommend": 13, "becaus": 13, "better": 13, "check": [13, 24, 25, 27, 43, 45], "creat": [13, 16, 17, 19, 61, 62, 75, 82, 88, 109, 122, 125, 135, 149, 153, 161, 170], "guarante": 13, "compil": [13, 31], "With": 13, "assert": [13, 58], "here": [13, 31], "match": [13, 49, 83], "new": [13, 16, 19, 31, 40, 41, 75, 99, 118, 122, 144, 149, 158, 166, 170], "allow": 13, "axi": [13, 24, 27, 50], "incompat": 13, "suppli": [13, 49, 82], "merg": 13, "given": [13, 27, 31, 75], "merge_with": 13, "224": 13, "cannot": 13, "alon": 13, "know": 13, "imag": 13, "dataset": [0, 13, 19, 173], "28": 13, "load_imag": 13, "filenam": 13, "raw": 13, "io": [13, 69], "read_fil": 13, "decode_png": 13, "channel": 13, "final": [13, 27, 57, 58, 59, 61, 62], "similarli": 13, "parse_tensor": 13, "could": 13, "even": [13, 173], "serial": 13, "2d": 13, "my_pars": 13, "string_tensor": 13, "out_typ": 13, "concrete_pars": 13, "make": [13, 16, 19, 173], "sure": [13, 61, 62, 86], "work": [13, 27], "ones": [13, 22, 24, 25, 27, 29, 31, 57, 58, 59], "serialize_tensor": 13, "t2": 13, "appli": [13, 16, 18, 74, 82, 90, 97, 111, 115, 124, 128, 133, 137, 141, 151, 156, 163, 164, 172, 173], "exist": [5, 7, 13, 16, 40, 41, 43, 44, 45, 61, 62, 78, 82, 122, 149, 170], "runtim": [13, 173], "incorrect": 13, "inconsist": 13, "between": [13, 16, 19, 25, 40, 41, 82, 97, 115, 128, 141, 156, 164], "static": [5, 7, 13, 31, 40, 41, 43, 44, 45, 61, 62, 81], "modifi": [13, 72, 73], "still": 13, "though": 13, "tensorshapeproto": 13, "thei": [13, 24, 25, 86, 173], "slice": [13, 24, 25, 57, 58, 59, 75], "pairofint": 13, "parent": [16, 22, 24, 25, 27, 29, 31, 43, 44, 45, 57, 58, 59, 173], "k": [16, 19, 25, 27, 43, 45, 58, 75, 78, 82], "repositori": [16, 78, 79, 82, 85, 86, 88, 99, 106, 108, 109, 118, 122, 123, 125, 135, 144, 149, 150, 153, 158, 160, 161, 166, 170, 171], "meta": [7, 16, 19, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 75, 83, 86], "equip": 16, "test_data": [16, 43, 45, 85], "addition": 16, "dimension": [16, 31, 40, 41, 43, 45, 76, 82, 83, 86], "m": [0, 16, 19, 24, 25, 31, 40, 41, 43, 45, 49, 50, 57, 58, 59, 61, 62, 71, 72, 73, 74, 81, 82, 86, 89, 110, 136, 155, 162, 173], "creation": 16, "classmethod": [5, 7, 16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62, 75], "from_df": [16, 19], "column": [6, 16, 17, 19, 24, 25, 31, 78, 81, 82, 89, 110, 136, 162], "lt": [16, 19, 61, 62], "test_x": 16, "head": [16, 19], "test_i": 16, "l": [16, 19, 22, 24, 25, 27, 29, 31, 40, 41, 43, 45, 49, 58, 78, 82, 83], "x_rotat": 16, "rotat": [0, 16, 59, 82, 88, 109, 125, 135, 161, 173], "__x_rotat": 16, "cumul": 16, "normal": [16, 19, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 82, 112, 138], "train": [16, 19, 29, 31, 43, 45, 82, 130], "test": [9, 16, 19, 43, 45, 69, 82, 85, 88, 109, 125, 135, 161, 173], "sampl": [16, 19, 27, 31, 43, 45, 88, 89, 102, 109, 110, 121, 124, 125, 133, 135, 136, 148, 151, 161, 162, 169, 172, 173], "row": [16, 19, 24, 25, 31, 81, 82, 83, 89, 110, 136, 162], "y_split": [16, 19], "split": [16, 19, 27], "just": [16, 17, 19], "lth": [16, 19], "rang": [16, 19, 57, 58, 59, 61, 62, 82, 86], "indic": [0, 16, 19, 24, 25, 57, 58, 59, 86, 173], "from_csv": [16, 19], "target": [16, 19], "metadata": [16, 19], "csv_option": [16, 17, 19], "pydata": [16, 17, 19], "doc": [16, 17, 19, 45], "stabl": [16, 17, 19], "read_csv": [6, 16, 17, 19, 78], "html": [16, 17, 19, 45, 69], "df": [16, 17, 18, 19, 27], "into_k_fold": [16, 19, 82], "shuffle_before_fold": [16, 19, 82], "repo": [16, 19, 79, 82, 85, 86], "absolut": [16, 19, 82], "inclus": [16, 19, 82], "improp": [16, 19, 82], "both": [16, 19, 27, 31, 82], "To": [16, 19, 31, 82], "suppress": [16, 19, 82], "neg": [16, 19, 82, 130], "integ": [16, 19, 31, 82], "shuffl": [16, 19, 82], "windowspath": [17, 106, 108, 123, 150, 155, 160, 171], "empti": [5, 7, 17, 40, 41, 43, 44, 45, 57, 61, 62, 67, 68, 75], "encapsul": [6, 17, 18, 49, 59, 61, 62], "overwrit": [17, 82, 122, 149, 170], "keyword": [17, 27], "argument": [17, 27, 104], "relev": [0, 17, 173], "is_empti": 17, "accord": [17, 43, 45], "fold": [18, 19, 43, 45, 78, 79, 82, 85, 86, 99, 118, 130, 144, 158, 166], "assum": [18, 27, 31, 49], "uniform": 18, "distribut": [18, 27, 43, 45, 76], "u": [18, 59], "invers": 18, "probabl": [18, 27, 31, 49], "transform": 18, "mean": [18, 24, 25, 27, 28, 29, 31, 43, 45, 49, 83], "unit": [18, 24, 25], "varianc": [0, 18, 24, 25, 27, 31, 40, 41, 43, 45, 49, 58, 82, 83, 86, 98, 116, 129, 142, 157, 165, 173], "alreadi": 18, "apply_to": 18, "undo_from": 18, "undo": 18, "unnorm": 18, "These": [19, 29], "analyz": [19, 57, 58, 59], "further": 19, "extens": [20, 21, 23, 26, 30, 78, 173], "multi": [20, 40, 41, 43, 45, 76], "mutual": 20, "depend": [20, 24, 43, 45, 85, 86, 173], "cholesky_diagonal_lower_bound": 22, "001": 22, "non": [5, 7, 22, 24, 25, 27, 29, 31, 40, 41, 43, 44, 45, 57, 58, 59, 61, 62], "float": [6, 9, 22, 31, 67, 74, 76, 83, 101, 120, 132, 133, 147, 159, 168], "covari": [22, 24, 25, 27, 31, 40, 41, 49, 83, 86, 92, 113, 126, 139], "mutabl": 22, "through": 22, "cholesky_diagon": [22, 27], "cholesky_lower_triangl": 22, "symmetr": [22, 24, 25], "posit": [22, 24, 25, 27, 31, 130], "express": [22, 27], "lower": [22, 27, 31], "bound": [22, 27, 31], "choleski": [22, 27, 31, 43, 45, 49], "decomposit": [22, 27, 43, 45, 49], "triangular": 22, "value_to_broadcast": 22, "readi": 22, "value_times_ey": 22, "cartesian": 22, "product": [22, 49], "ey": 22, "transpos": 22, "ident": [22, 82], "multipli": [22, 24, 25, 43, 45], "transposit": [22, 55], "ctor": [22, 24, 25, 27, 29, 31, 57, 58, 59], "same": [22, 24, 25, 27, 29, 31, 57, 58, 59], "name_scop": [22, 24, 25, 27, 29, 31, 57, 58, 59], "instanc": [22, 24, 25, 27, 29, 31, 57, 58, 59, 75], "non_trainable_vari": [22, 24, 25, 27, 29, 31, 57, 58, 59], "sequenc": [6, 22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 74, 75, 76, 83, 86, 133], "trainabl": [22, 24, 25, 27, 29, 31, 40, 41, 44, 57, 58, 59], "submodul": [22, 24, 25, 27, 29, 31, 57, 58, 59], "reflect": [22, 24, 25, 27, 29, 31, 57, 58, 59], "perform": [22, 24, 25, 27, 29, 31, 57, 58, 59, 61, 62], "reason": [22, 24, 25, 27, 29, 31, 57, 58, 59], "wish": [22, 24, 25, 27, 29, 31, 57, 58, 59], "cach": [22, 24, 25, 27, 29, 31, 57, 58, 59], "don": [22, 24, 25, 27, 29, 31, 57, 58, 59], "expect": [22, 24, 25, 27, 29, 31, 57, 58, 59], "sort": [22, 24, 25, 27, 29, 31, 57, 58, 59], "recurs": [22, 24, 25, 27, 29, 31, 57, 58, 59, 79, 85, 86], "breadth": [22, 24, 25, 27, 29, 31, 57, 58, 59], "sub": [22, 24, 25, 27, 29, 31, 57, 58, 59], "found": [22, 24, 25, 27, 29, 31, 57, 58, 59, 75, 86], "trainable_vari": [22, 24, 25, 27, 29, 31, 57, 58, 59], "with_name_scop": [22, 24, 25, 27, 29, 31, 57, 58, 59], "decor": [22, 24, 25, 27, 29, 31, 57, 58, 59], "automat": [22, 24, 25, 27, 29, 31, 49, 57, 58, 59, 67], "enter": [22, 24, 25, 27, 29, 31, 57, 58, 59], "scope": [22, 24, 25, 27, 29, 31, 57, 58, 59], "mymodul": [22, 24, 25, 27, 29, 31, 57, 58, 59], "__call__": [22, 24, 25, 27, 29, 31, 57, 58, 59], "hasattr": [22, 24, 25, 27, 29, 31, 57, 58, 59], "w": [22, 24, 25, 27, 29, 31, 57, 58, 59], "random": [22, 24, 25, 27, 29, 31, 57, 58, 59, 82], "abov": [22, 24, 25, 27, 29, 31, 57, 58, 59], "would": [22, 24, 25, 27, 29, 31, 57, 58, 59], "mod": [22, 24, 25, 27, 29, 31, 57, 58, 59], "my_modul": [22, 24, 25, 27, 29, 31, 57, 58, 59], "wrap": [22, 24, 25, 27, 29, 31, 57, 58, 59], "lengthscal": [24, 25, 31, 40, 41], "active_dim": [24, 25], "anisotropicstationari": 24, "stationari": 24, "deriv": 24, "k_d": [24, 25], "pairwis": 24, "differ": [24, 25], "scale": [24, 25, 43, 45, 74], "\u2113": [24, 25], "x2\u1d40": [24, 25], "signal": [24, 25, 101, 120, 132, 147, 159, 168], "is_lengthscales_train": [24, 25], "them": [24, 25], "lengthscales_neat": [24, 25], "k_diag": [24, 25], "k_unit_vari": [24, 25], "x2": [24, 25], "optimis": [24, 25, 112, 138], "where": [24, 25, 27, 31, 43], "k_d_unit_vari": [24, 25], "k_d_apply_vari": [24, 25], "reshap": [24, 25, 76], "ln": [24, 25, 27, 43, 45], "ard": [24, 25], "activ": [0, 24, 25, 173], "on_separate_dim": [24, 25], "other": [24, 25, 40, 41, 49, 85, 86], "over": [24, 25, 31, 82, 85], "overlap": [24, 25], "separ": [24, 25], "scaled_difference_matrix": [24, 25], "correct": [24, 25], "slice_cov": [24, 25], "cov": [24, 25], "requir": [24, 25, 29, 31, 61, 62, 71, 72, 73, 86], "turn": [24, 25, 29], "flatten": [24, 25], "full": [24, 25, 58, 81], "mostationari": [25, 31], "radial": 25, "basi": [0, 25, 88, 109, 124, 125, 133, 135, 151, 161, 172, 173], "exponenti": [25, 49], "equat": 25, "\u03c3\u00b2": 25, "exp": 25, "\u00bd": 25, "r\u00b2": 25, "r": [25, 31, 78], "euclidean": 25, "distanc": 25, "point": [25, 31], "drawn": [25, 31], "gp": [31, 57, 58, 59, 61, 62, 85, 86], "infinit": 25, "differenti": 25, "quadraturelikelihood": 27, "multivari": [27, 83], "appropri": [27, 82], "uncertainti": 27, "associ": 27, "believ": 27, "veri": 27, "small": 27, "lead": 27, "numer": [27, 45, 49], "instabl": 27, "1e": [9, 27], "therefor": 27, "impos": 27, "symmetri": 27, "forward": 27, "concaten": [27, 70, 75, 78], "split_axis_shap": 27, "length": 27, "conditional_mean": 27, "condit": [0, 27, 173], "y\u2081": 27, "y\u2096": 27, "observation_dim": 27, "latent_dim": 27, "conditional_vari": 27, "margin": [0, 13, 27, 31, 57, 58, 59, 173], "var": 27, "log_prob": 27, "log": [27, 31], "densiti": [27, 31, 49], "p": [27, 31], "observ": [27, 31], "pdf": [0, 27, 49, 173], "predict_log_dens": [27, 31], "fmu": 27, "fvar": 27, "latent": [27, 31], "datum": 27, "predict": [27, 28, 29, 31, 43, 45], "q": 27, "predict_mean_and_var": 27, "dy": 27, "y\u00b2": 27, "\u00b2": 27, "variational_expect": 27, "statist": [27, 97, 115, 128, 141, 156, 164], "prior": [28, 29, 31], "output_dim": [29, 31], "meanfunct": 29, "mogpr": 29, "basic": [29, 47, 61, 62], "one": [29, 122, 149, 170], "constitut": 29, "absenc": 29, "union": 29, "mean_funct": [31, 173], "noise_vari": [31, 43, 45, 82], "gpmodel": 31, "internaldatatraininglossmixin": 31, "vanilla": 31, "likelihood": [31, 43, 45, 92, 113, 126, 139, 173], "treat": [31, 43, 45], "independ": [31, 43, 45, 85, 86, 97, 115, 128, 141, 156, 164], "mathbf": 31, "mathcal": 31, "sigma_n": 31, "maximis": [0, 31, 173], "_marginal_": 31, "hyperparamet": 31, "theta": [31, 59], "integr": 31, "form": 31, "kxx": 31, "momeanfunct": 31, "inputdata": 31, "outputdata": 31, "well": 31, "necessari": [31, 85], "maximum_log_likelihood_object": 31, "maximum": 31, "estim": 31, "maxim": 31, "g": [31, 67, 73, 86, 173], "elbo": 31, "variat": 31, "log_marginal_likelihood": 31, "predict_f": 31, "xnew": 31, "full_cov": 31, "full_output_cov": 31, "noisi": [31, 43, 45], "regardless": 31, "avoid": 31, "ambigu": 31, "calc_num_latent_gp": 31, "nice": 31, "awar": 31, "specif": [31, 61, 62], "howev": [31, 67], "num_latent_gp": 31, "bit": 31, "broken": 31, "fix": [31, 98, 116, 129, 142, 157, 165], "There": 31, "slightli": 31, "problemat": 31, "assumpt": 31, "github": [0, 31, 173], "com": [0, 31, 173], "issu": 31, "1343": 31, "calc_num_latent_gps_from_data": 31, "log_posterior_dens": 31, "arg": [31, 104], "posterior": 31, "respect": 31, "gpmc": 31, "sgpmc": 31, "sensibli": 31, "log_prior_dens": 31, "sum": 31, "constrain": 31, "predict_f_sampl": 31, "num_sampl": 31, "draw": 31, "extra": [31, 130], "correl": 31, "dens": 31, "num_data": 31, "uncorrel": 31, "predict_i": 31, "held": 31, "out": [31, 75], "training_loss": 31, "loss": 31, "training_loss_closur": 31, "conveni": 31, "closur": 31, "itself": [31, 82], "minim": [31, 45, 49], "scipi": [31, 45, 67], "callabl": [31, 74, 81, 82], "interfac": [40, 43, 48, 60, 65, 84], "contract": 40, "share": [40, 41], "anisotrop": [85, 86], "isotrop": [40, 41, 43, 45, 85, 86, 114, 127, 140], "mere": [40, 41, 44], "type_identifi": [40, 41], "__module__": 40, "__name__": 40, "typefromidentifi": [40, 41], "typeidentifi": [40, 41], "_typeidentifi": [40, 41], "typefromparamet": [40, 41], "recogn": [40, 41], "across": [40, 41, 78, 79, 85, 86], "broadcast_paramet": [40, 41, 43, 45], "variance_shap": [40, 41], "higher": [40, 41, 43, 45], "shrinkag": [40, 41, 43, 45], "unchang": [40, 41, 43, 45], "silent": [40, 41, 43, 45], "nop": [40, 41], "expans": [40, 41], "straightforward": [40, 41], "per": [40, 41], "attempt": [40, 41], "made": [40, 41], "shrink": [40, 41], "implemented_in_": [], "off_diagon": [], "is_read": [43, 45, 85], "is_independ": [], "is_isotrop": [43, 45, 85, 86], "kernel_paramet": [43, 45, 85], "gpinterfac": [], "setup": [], "hous": [43, 45, 78, 82, 85, 86, 106, 108, 123, 150, 160, 171], "restrict": [43, 45], "read_from_fil": [43, 45], "mi": [43, 45], "hyper": [43, 45], "bfg": 45, "algorithm": 45, "format": 45, "y_instead_of_f": [43, 45], "o": [0, 43, 45, 72, 173], "nois": [43, 45, 83, 88, 97, 98, 101, 109, 115, 116, 120, 125, 128, 129, 132, 135, 141, 142, 147, 153, 154, 156, 157, 159, 161, 164, 165, 168], "std": [43, 45], "k_cho": [43, 45], "lnxln": [43, 45], "els": [43, 45, 75], "k_inv_i": [43, 45], "pre": [43, 45], "loxln": [43, 45], "lo": [43, 45], "chosolv": [43, 45], "check_k_inv_i": 45, "FOR": 45, "purpos": [45, 49], "toler": [9, 45], "kernel_folder_nam": [43, 45], "identifi": [], "never": [], "extern": [], "desir": [], "noth": [43, 45], "_fold": [43, 45], "compris": [43, 45, 75, 173], "three": [43, 45], "score": [43, 45], "frame": [5, 7, 40, 41, 43, 44, 45, 61, 62], "test_result_csv": [43, 45], "up": [43, 45, 67], "0001": [], "log_margin": [], "coeffici": [0, 173], "close": [56, 57, 58, 59, 61, 62, 86, 91, 131, 145], "wide": [57, 58, 59], "collect": [57, 58, 59, 82, 104], "especi": [57, 58, 59], "_calcul": [], "everyth": [57, 58, 59], "closedindex": [], "is_t_parti": [58, 62], "forc": [58, 62], "mm": 58, "effect": [58, 75], "free": 58, "wmm": [58, 62], "rankequ": 58, "j": 58, "mix": 58, "instantiat": [], "expon": 49, "variance_cho_diagon": 49, "log_pdf": [], "variance_cho": 49, "is_variance_diagon": 49, "float64": [13, 49], "lbunch": 49, "logarithm": 49, "un": [49, 82], "det": 49, "factor": 49, "effici": 49, "accuraci": 49, "ratio": [49, 101, 120, 132, 147, 159, 168], "popul": 49, "adequ": 49, "embrac": 49, "consecut": [49, 86], "insert": [49, 75, 78], "usual": 49, "sometim": 49, "ein": [52, 53, 54], "lijk": [52, 53, 54], "kind": [61, 62, 86, 91], "is_error_calcul": [61, 62, 86], "sobol": [0, 56, 57, 58, 59, 61, 73, 86, 173], "dispos": [61, 62], "useless": [61, 62], "onc": [61, 62], "total": [61, 62, 86, 91, 131, 145], "le": [61, 62], "outsid": [61, 62, 86, 173], "memori": [61, 62, 86], "intens": [61, 62, 86], "leav": [61, 62, 86], "flag": [61, 62, 86], "v": [75, 155], "stddev": [0, 2, 101, 120, 132, 147, 159, 168], "enum": [61, 62], "manag": [66, 67, 68], "environ": [10, 11], "undertak": [60, 85, 86], "ed": [67, 68], "what": [67, 68], "undertaken": [], "end": 67, "regex": 67, "pu": 67, "logic": 67, "alloc": 67, "straight": [6, 62, 67, 78, 82, 85], "inop": 67, "due": [67, 112, 138], "config": 67, "run_functions_eagerli": 67, "api_doc": [], "_": [0, 69, 173], "is_inlin": 68, "inlin": 68, "linebreak": 68, "top": 68, "tail": 68, "paragraph": 68, "taken": 69, "salib": 69, "readthedoc": 69, "en": 69, "latest": 69, "test_funct": 69, "ishigami": [70, 163], "balanc": [70, 71, 90, 111, 137, 163], "scalar": [70, 71, 72, 73, 75, 90, 111, 137, 163], "sin": [70, 71, 90, 111, 137, 163], "oakley2004": [70, 163], "balanced_quad7": [70, 72, 163], "lin7": [70, 72, 163], "quad7": [70, 72, 163], "sobol_g": [70, 163], "strong5_2": [70, 73, 163], "strong5_4": [70, 73, 163], "weak5_2": [70, 73, 163], "oaklei": 72, "hagan": 72, "2004": 72, "loc": 74, "vectorlik": 74, "offset": 74, "functon": 75, "littl": 75, "than": 75, "item": [75, 173], "concat": 75, "subvector": 75, "pseudo": 75, "clear": 75, "copi": [5, 6, 7, 16, 19, 40, 41, 43, 44, 45, 61, 62, 75], "shallow": 75, "fromkei": 75, "iter": [6, 75], "like": [75, 82], "view": 75, "pop": 75, "keyerror": 75, "popitem": 75, "lifo": 75, "setdefault": 75, "lack": 75, "throughout": 76, "prod": 76, "endpoint": 76, "newshap": 76, "ignore_miss": 78, "minu": 78, "to_csv": [6, 78], "write_opt": 78, "float_format": 78, "6f": 78, "from_fold": 78, "dst": [16, 19, 78, 79], "is_existing_delet": 78, "destin": [5, 7, 40, 41, 43, 44, 45, 61, 62, 78], "delet": [5, 7, 40, 41, 43, 44, 45, 61, 62, 78], "recreat": 78, "src": 79, "rel": [79, 86], "filenotfounderror": [79, 85, 86], "ignore_except": [85, 86, 134], "nearest": 85, "ancestor": 85, "isotropi": 85, "hierarchi": [1, 85], "continu": 85, "throw": 85, "aggreg": 85, "first_ord": [86, 91, 131, 145], "furthermor": 86, "ignor": [86, 112, 138], "encount": 86, "halt": 86, "experi": 80, "signatur": 81, "latin_hypercub": 81, "is_cent": [81, 89, 110, 136, 162], "latin": [81, 89, 110, 136, 162], "hypercub": [81, 89, 110, 136, 162], "boolean": [81, 89, 110, 136, 162], "centr": [81, 89, 110, 136, 162], "cell": [81, 89, 110, 136, 162], "randomli": [81, 89, 110, 136, 162], "full_factori": 81, "factori": 81, "base_fold": [], "function_vector": 82, "overwrite_exist": 82, "gaussiannois": 82, "sit": 82, "experiment": 82, "noise_magnitud": 82, "homoskedast": [82, 83], "sub_fold": 82, "extra_column": 82, "stochastic_rot": [], "stochast": [0, 98, 116, 129, 142, 157, 165, 173], "rotate_fold": 82, "uniformli": 82, "un_rotate_fold": 82, "matrixlik": 83, "co": 83, "magnitud": 83, "is_stochast": [], "artifici": 83, "label": [61, 62, 83], "scheme": 83, "suitabl": 83, "__format__": 83, "cannib": [87, 105, 107, 173], "fc1ram": [106, 108, 123, 155, 160, 171], "research": [106, 108, 123, 155, 160, 171], "dat": [106, 108, 123, 155, 160, 171], "softwaretest": [106, 108, 123, 155, 160, 171], "welcom": 173, "reduct": [0, 173], "novel": [0, 173], "approach": [0, 173], "subspac": [0, 173], "AS": [0, 173], "those": 173, "unfamiliar": 173, "hyperlink": 173, "semin": [], "mathemat": 173, "behind": 173, "softwar": 173, "cover": [0, 173], "paper": [0, 173], "peer": 173, "review": 173, "public": 173, "simpli": 173, "place": 173, "pythonpath": 173, "site": 173, "installation_test": 173, "anywher": 173, "pyproject": 173, "toml": 173, "organ": 173, "modular": 173, "old": 173, "context": [10, 11, 173], "script": [87, 105, 107, 173], "No": 173, "tabl": 173, "expos": 173, "task": [], "highli": [], "advanc": 173, "achiev": [], "directori": [0, 2], "mathsf": 83, "mathtt": [], "ymbj": [], "abbr": [], "ymca": [], "glossari": [1, 2], "technic": [0, 173], "direct": 173, "regard": 173, "bespok": 173, "subsapc": [], "techniqu": [0, 173], "constantin": [0, 173], "2014": [0, 173], "align": [0, 173], "eigenvector": [0, 173], "jacobian": [0, 173], "assess": [0, 173], "system": [0, 173], "varieti": [0, 173], "broadli": [0, 173], "saltelli": [0, 173], "et": [0, 173], "al": [0, 173], "2007": [0, 173], "razavi": [0, 173], "2021": [0, 173], "deal": [0, 173], "exclus": [0, 173], "ilya": [0, 173], "somewhat": [0, 173], "describ": [0, 173], "gori": [0, 173], "2023": [0, 173], "blob": [0, 173], "theori": [0, 173], "20of": [0, 173], "20determin": [0, 173], "gaussianwithout2pi": [], "quit": [0, 173], "thoroughli": [0, 173], "rasmussen": [0, 173], "william": [0, 173], "2005": [0, 173], "mogp": [25, 31, 40, 42, 43, 44, 60, 85], "is_covari": [40, 41, 43, 45, 83, 85, 86], "variant": [41, 86], "likelihood_vari": [43, 45, 85], "stabil": 49, "pi": 49, "logpdf": [], "mnemon": [], "closedsobol": [58, 59, 62], "marginalis": [61, 62], "ad": [88, 101, 109, 120, 125, 132, 135, 147, 153, 159, 161, 168], "25": [155, 159, 168], "normalis": [101, 120, 132, 147, 159, 168], "400": [102, 148, 155, 169], "datapoint": [102, 121, 148, 169], "add": 154, "00": 155, "topic": 173, "advis": 173, "advic": 173, "much": 173, "benchmark_gsa": 173, "gpr_from_funct": 173, "gsa_from_funct": 173, "repo_from_csv": 173, "repo_from_funct": 173, "sai": 173, "galleri": 173, "archetyp": 173, "root": [82, 134], "ext": 82, "suffix": 82, "orthogon": 82, "wrong": 82, "is_random": 83, "summaris": 173, "term": [], "cunt": [], "part": 173, "penultim": 173, "conceptu": 1, "interc": 49, "sigma": 49, "determinant_vector": [], "_namedtupl": [], "field_default": [], "asdict": [], "move": [5, 7, 40, 41, 43, 44, 45, 61, 62], "dst_folder": [5, 7, 40, 41, 43, 44, 45, 61, 62], "src_folder": [5, 7, 40, 41, 43, 44, 45, 61, 62], "anyth": [5, 7, 40, 41, 43, 44, 45, 61, 62], "arraylik": 6, "written": 6, "whenev": 6, "clean_copi": [16, 19], "clean": [16, 19], "64": 9, "contextmanag": [], "nan": 13, "u14": [5, 7, 61], "member": [5, 7, 61], "read_data": [7, 40, 41, 44], "toi": 173, "calibr": [7, 40, 41, 44, 45, 61, 62, 85, 173], "sqrt": 49, "expand_dim": 49, "ax": 49, "dim": 49, "cho_diag": 49, "intenum": [61, 62], "overriden": [61, 62], "super": [61, 62], "200": 121, "04": 147, "Of": 50, "_calibr": [57, 58, 59], "05": 101, "namespac": 104, "command": 104, "line": 104}, "objects": {"": [[2, 0, 0, "-", "romcomma"]], "romcomma": [[3, 0, 0, "-", "base"], [14, 0, 0, "-", "data"], [20, 0, 0, "-", "gpf"], [38, 0, 0, "-", "gpr"], [46, 0, 0, "-", "gsa"], [63, 0, 0, "-", "rom"], [65, 0, 0, "-", "run"], [87, 0, 0, "-", "user"]], "romcomma.base": [[4, 0, 0, "-", "classes"], [8, 0, 0, "-", "definitions"]], "romcomma.base.classes": [[5, 1, 1, "", "Data"], [6, 1, 1, "", "Frame"], [7, 1, 1, "", "Model"]], "romcomma.base.classes.Data": [[5, 1, 1, "", "NamedTuple"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "delete"], [5, 3, 1, "", "empty"], [5, 3, 1, "", "move"], [5, 3, 1, "", "read"]], "romcomma.base.classes.Data.NamedTuple": [[5, 2, 1, "", "NotImplemented"], [5, 3, 1, "", "count"], [5, 3, 1, "", "index"]], "romcomma.base.classes.Frame": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "broadcast_value"], [6, 2, 1, "", "csv"], [6, 3, 1, "", "write"]], "romcomma.base.classes.Model": [[7, 1, 1, "", "Data"], [7, 4, 1, "", "META"], [7, 3, 1, "", "__init__"]], "romcomma.base.classes.Model.Data": [[7, 1, 1, "", "NamedTuple"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "delete"], [7, 3, 1, "", "empty"], [7, 3, 1, "", "move"], [7, 3, 1, "", "read"]], "romcomma.base.classes.Model.Data.NamedTuple": [[7, 2, 1, "", "NotImplemented"], [7, 3, 1, "", "count"], [7, 3, 1, "", "index"]], "romcomma.base.definitions": [[9, 5, 1, "", "EFFECTIVELY_ZERO"], [10, 6, 1, "", "FLOAT"], [11, 6, 1, "", "INT"], [12, 1, 1, "", "NP"], [13, 1, 1, "", "TF"]], "romcomma.base.definitions.NP": [[12, 2, 1, "", "Array"], [12, 2, 1, "", "Covector"], [12, 2, 1, "", "Matrix"], [12, 2, 1, "", "Tensor"], [12, 2, 1, "", "Tensor1"], [12, 2, 1, "", "Tensor2"], [12, 2, 1, "", "Tensor3"], [12, 2, 1, "", "Tensor4"], [12, 2, 1, "", "Tensor5"], [12, 2, 1, "", "Tensor6"], [12, 2, 1, "", "Tensor7"], [12, 2, 1, "", "Tensor8"], [12, 2, 1, "", "Vector"], [12, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF": [[13, 2, 1, "", "Array"], [13, 2, 1, "", "Covector"], [13, 2, 1, "", "Matrix"], [13, 2, 1, "", "NaN"], [13, 2, 1, "", "PairOfInts"], [13, 2, 1, "", "Slice"], [13, 1, 1, "", "Tensor"], [13, 2, 1, "", "Tensor1"], [13, 2, 1, "", "Tensor2"], [13, 2, 1, "", "Tensor3"], [13, 2, 1, "", "Tensor4"], [13, 2, 1, "", "Tensor5"], [13, 2, 1, "", "Tensor6"], [13, 2, 1, "", "Tensor7"], [13, 2, 1, "", "Tensor8"], [13, 2, 1, "", "Vector"], [13, 3, 1, "", "__init__"]], "romcomma.base.definitions.TF.Tensor": [[13, 3, 1, "", "consumers"], [13, 4, 1, "", "device"], [13, 4, 1, "", "dtype"], [13, 3, 1, "", "eval"], [13, 3, 1, "", "experimental_ref"], [13, 3, 1, "", "get_shape"], [13, 4, 1, "", "graph"], [13, 4, 1, "", "name"], [13, 4, 1, "", "op"], [13, 3, 1, "", "ref"], [13, 3, 1, "", "set_shape"], [13, 4, 1, "", "shape"], [13, 4, 1, "", "value_index"]], "romcomma.data": [[15, 0, 0, "-", "storage"]], "romcomma.data.storage": [[16, 1, 1, "", "Fold"], [17, 1, 1, "", "Frame"], [18, 1, 1, "", "Normalization"], [19, 1, 1, "", "Repository"]], "romcomma.data.storage.Fold": [[16, 4, 1, "", "K"], [16, 4, 1, "", "L"], [16, 4, 1, "", "M"], [16, 4, 1, "", "N"], [16, 4, 1, "", "X"], [16, 4, 1, "", "X_rotation"], [16, 4, 1, "", "Y"], [16, 3, 1, "", "Y_split"], [16, 4, 1, "", "Y_splits"], [16, 3, 1, "", "__init__"], [16, 3, 1, "", "clean_copy"], [16, 4, 1, "", "folds"], [16, 3, 1, "", "from_csv"], [16, 3, 1, "", "from_df"], [16, 3, 1, "", "from_dfs"], [16, 3, 1, "", "into_K_folds"], [16, 4, 1, "", "test_x"], [16, 4, 1, "", "test_y"]], "romcomma.data.storage.Frame": [[17, 4, 1, "", "CSV_OPTIONS"], [17, 3, 1, "", "__init__"], [17, 4, 1, "", "is_empty"], [17, 3, 1, "", "write"]], "romcomma.data.storage.Normalization": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "apply_to"], [18, 3, 1, "", "undo_from"]], "romcomma.data.storage.Repository": [[19, 4, 1, "", "K"], [19, 4, 1, "", "L"], [19, 4, 1, "", "M"], [19, 4, 1, "", "N"], [19, 4, 1, "", "X"], [19, 4, 1, "", "Y"], [19, 3, 1, "", "Y_split"], [19, 4, 1, "", "Y_splits"], [19, 3, 1, "", "__init__"], [19, 3, 1, "", "clean_copy"], [19, 4, 1, "", "folds"], [19, 3, 1, "", "from_csv"], [19, 3, 1, "", "from_df"], [19, 3, 1, "", "into_K_folds"]], "romcomma.gpf": [[21, 0, 0, "-", "base"], [23, 0, 0, "-", "kernels"], [26, 0, 0, "-", "likelihoods"], [28, 0, 0, "-", "mean_functions"], [30, 0, 0, "-", "models"], [32, 0, 0, "-", "tests"]], "romcomma.gpf.base": [[22, 1, 1, "", "Variance"]], "romcomma.gpf.base.Variance": [[22, 3, 1, "", "__init__"], [22, 4, 1, "", "cholesky"], [22, 4, 1, "", "name"], [22, 4, 1, "", "name_scope"], [22, 4, 1, "", "non_trainable_variables"], [22, 4, 1, "", "shape"], [22, 4, 1, "", "submodules"], [22, 4, 1, "", "trainable_variables"], [22, 4, 1, "", "value"], [22, 3, 1, "", "value_times_eye"], [22, 4, 1, "", "value_to_broadcast"], [22, 4, 1, "", "variables"], [22, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels": [[24, 1, 1, "", "MOStationary"], [25, 1, 1, "", "RBF"]], "romcomma.gpf.kernels.MOStationary": [[24, 3, 1, "", "K_d"], [24, 3, 1, "", "K_d_apply_variance"], [24, 3, 1, "", "K_d_unit_variance"], [24, 3, 1, "", "K_diag"], [24, 3, 1, "", "K_unit_variance"], [24, 3, 1, "", "__init__"], [24, 4, 1, "", "ard"], [24, 4, 1, "", "lengthscales_neat"], [24, 4, 1, "", "name"], [24, 4, 1, "", "name_scope"], [24, 4, 1, "", "non_trainable_variables"], [24, 3, 1, "", "on_separate_dims"], [24, 3, 1, "", "scaled_difference_matrix"], [24, 3, 1, "", "slice"], [24, 3, 1, "", "slice_cov"], [24, 4, 1, "", "submodules"], [24, 4, 1, "", "trainable_variables"], [24, 4, 1, "", "variables"], [24, 3, 1, "", "with_name_scope"]], "romcomma.gpf.kernels.RBF": [[25, 3, 1, "", "K_d"], [25, 3, 1, "", "K_d_apply_variance"], [25, 3, 1, "", "K_d_unit_variance"], [25, 3, 1, "", "K_diag"], [25, 3, 1, "", "K_unit_variance"], [25, 3, 1, "", "__init__"], [25, 4, 1, "", "ard"], [25, 4, 1, "", "lengthscales_neat"], [25, 4, 1, "", "name"], [25, 4, 1, "", "name_scope"], [25, 4, 1, "", "non_trainable_variables"], [25, 3, 1, "", "on_separate_dims"], [25, 3, 1, "", "scaled_difference_matrix"], [25, 3, 1, "", "slice"], [25, 3, 1, "", "slice_cov"], [25, 4, 1, "", "submodules"], [25, 4, 1, "", "trainable_variables"], [25, 4, 1, "", "variables"], [25, 3, 1, "", "with_name_scope"]], "romcomma.gpf.likelihoods": [[27, 1, 1, "", "MOGaussian"]], "romcomma.gpf.likelihoods.MOGaussian": [[27, 3, 1, "", "N"], [27, 3, 1, "", "__init__"], [27, 3, 1, "", "conditional_mean"], [27, 3, 1, "", "conditional_variance"], [27, 3, 1, "", "log_prob"], [27, 4, 1, "", "name"], [27, 4, 1, "", "name_scope"], [27, 4, 1, "", "non_trainable_variables"], [27, 3, 1, "", "predict_log_density"], [27, 3, 1, "", "predict_mean_and_var"], [27, 3, 1, "", "split_axis_shape"], [27, 4, 1, "", "submodules"], [27, 4, 1, "", "trainable_variables"], [27, 4, 1, "", "variables"], [27, 3, 1, "", "variational_expectations"], [27, 3, 1, "", "with_name_scope"]], "romcomma.gpf.mean_functions": [[29, 1, 1, "", "MOMeanFunction"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[29, 3, 1, "", "__init__"], [29, 4, 1, "", "functions"], [29, 4, 1, "", "name"], [29, 4, 1, "", "name_scope"], [29, 4, 1, "", "non_trainable_variables"], [29, 4, 1, "", "output_dim"], [29, 4, 1, "", "submodules"], [29, 4, 1, "", "trainable_variables"], [29, 4, 1, "", "variables"], [29, 3, 1, "", "with_name_scope"]], "romcomma.gpf.models": [[31, 1, 1, "", "MOGPR"]], "romcomma.gpf.models.MOGPR": [[31, 4, 1, "", "L"], [31, 4, 1, "", "M"], [31, 3, 1, "", "__init__"], [31, 3, 1, "", "calc_num_latent_gps"], [31, 3, 1, "", "calc_num_latent_gps_from_data"], [31, 3, 1, "", "log_marginal_likelihood"], [31, 3, 1, "", "log_posterior_density"], [31, 3, 1, "", "log_prior_density"], [31, 3, 1, "", "maximum_log_likelihood_objective"], [31, 4, 1, "", "name"], [31, 4, 1, "", "name_scope"], [31, 4, 1, "", "non_trainable_variables"], [31, 3, 1, "", "predict_f"], [31, 3, 1, "", "predict_f_samples"], [31, 3, 1, "", "predict_log_density"], [31, 3, 1, "", "predict_y"], [31, 4, 1, "", "submodules"], [31, 4, 1, "", "trainable_variables"], [31, 3, 1, "", "training_loss"], [31, 3, 1, "", "training_loss_closure"], [31, 4, 1, "", "variables"], [31, 3, 1, "", "with_name_scope"]], "romcomma.gpf.tests": [[33, 6, 1, "", "covariance"], [34, 6, 1, "", "increment"], [35, 6, 1, "", "kernel"], [36, 6, 1, "", "likelihood"], [37, 6, 1, "", "regression_data"]], "romcomma.gpr": [[39, 0, 0, "-", "kernels"], [42, 0, 0, "-", "models"]], "romcomma.gpr.kernels": [[40, 1, 1, "", "Kernel"], [41, 1, 1, "", "RBF"]], "romcomma.gpr.kernels.Kernel": [[40, 1, 1, "", "Data"], [40, 4, 1, "", "L"], [40, 4, 1, "", "M"], [40, 4, 1, "", "META"], [40, 4, 1, "", "TYPE_IDENTIFIER"], [40, 3, 1, "", "TypeFromIdentifier"], [40, 3, 1, "", "TypeFromParameters"], [40, 3, 1, "", "__init__"], [40, 3, 1, "", "broadcast_parameters"], [40, 3, 1, "", "calibrate"], [40, 4, 1, "", "implementation"], [40, 4, 1, "", "is_covariant"]], "romcomma.gpr.kernels.Kernel.Data": [[40, 2, 1, "", "NamedTuple"], [40, 3, 1, "", "copy"], [40, 3, 1, "", "delete"], [40, 3, 1, "", "empty"], [40, 3, 1, "", "move"], [40, 3, 1, "", "read"]], "romcomma.gpr.kernels.RBF": [[41, 1, 1, "", "Data"], [41, 4, 1, "", "L"], [41, 4, 1, "", "M"], [41, 2, 1, "", "META"], [41, 2, 1, "", "TYPE_IDENTIFIER"], [41, 3, 1, "", "TypeFromIdentifier"], [41, 3, 1, "", "TypeFromParameters"], [41, 3, 1, "", "__init__"], [41, 3, 1, "", "broadcast_parameters"], [41, 3, 1, "", "calibrate"], [41, 4, 1, "", "implementation"], [41, 4, 1, "", "is_covariant"]], "romcomma.gpr.kernels.RBF.Data": [[41, 2, 1, "", "NamedTuple"], [41, 3, 1, "", "copy"], [41, 3, 1, "", "delete"], [41, 3, 1, "", "empty"], [41, 3, 1, "", "move"], [41, 3, 1, "", "read"]], "romcomma.gpr.models": [[43, 1, 1, "", "GPR"], [44, 1, 1, "", "Likelihood"], [45, 1, 1, "", "MOGP"]], "romcomma.gpr.models.GPR": [[43, 1, 1, "", "Data"], [43, 4, 1, "", "KERNEL_FOLDER_NAME"], [43, 4, 1, "", "K_cho"], [43, 4, 1, "", "K_inv_Y"], [43, 4, 1, "", "L"], [43, 4, 1, "", "M"], [43, 4, 1, "", "META"], [43, 4, 1, "", "N"], [43, 4, 1, "", "X"], [43, 4, 1, "", "Y"], [43, 3, 1, "", "__init__"], [43, 3, 1, "", "broadcast_parameters"], [43, 4, 1, "", "fold"], [43, 4, 1, "", "implementation"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "test"]], "romcomma.gpr.models.GPR.Data": [[43, 2, 1, "", "NamedTuple"], [43, 3, 1, "", "copy"], [43, 3, 1, "", "delete"], [43, 3, 1, "", "empty"], [43, 3, 1, "", "move"], [43, 3, 1, "", "read"]], "romcomma.gpr.models.Likelihood": [[44, 1, 1, "", "Data"], [44, 4, 1, "", "META"], [44, 3, 1, "", "__init__"], [44, 3, 1, "", "calibrate"]], "romcomma.gpr.models.Likelihood.Data": [[44, 2, 1, "", "NamedTuple"], [44, 3, 1, "", "copy"], [44, 3, 1, "", "delete"], [44, 3, 1, "", "empty"], [44, 3, 1, "", "move"], [44, 3, 1, "", "read"]], "romcomma.gpr.models.MOGP": [[45, 1, 1, "", "Data"], [45, 2, 1, "", "KERNEL_FOLDER_NAME"], [45, 4, 1, "", "K_cho"], [45, 4, 1, "", "K_inv_Y"], [45, 4, 1, "", "L"], [45, 4, 1, "", "M"], [45, 4, 1, "", "META"], [45, 4, 1, "", "N"], [45, 4, 1, "", "X"], [45, 4, 1, "", "Y"], [45, 3, 1, "", "__init__"], [45, 3, 1, "", "broadcast_parameters"], [45, 3, 1, "", "calibrate"], [45, 3, 1, "", "check_K_inv_Y"], [45, 4, 1, "", "fold"], [45, 4, 1, "", "implementation"], [45, 3, 1, "", "predict"], [45, 3, 1, "", "test"]], "romcomma.gpr.models.MOGP.Data": [[45, 2, 1, "", "NamedTuple"], [45, 3, 1, "", "copy"], [45, 3, 1, "", "delete"], [45, 3, 1, "", "empty"], [45, 3, 1, "", "move"], [45, 3, 1, "", "read"]], "romcomma.gsa": [[47, 0, 0, "-", "base"], [56, 0, 0, "-", "calibrators"], [60, 0, 0, "-", "models"]], "romcomma.gsa.base": [[48, 1, 1, "", "Calibrator"], [49, 1, 1, "", "Gaussian"], [50, 6, 1, "", "diag_det"], [51, 6, 1, "", "mean"], [52, 6, 1, "", "ms"], [53, 6, 1, "", "rms"], [54, 6, 1, "", "sos"], [55, 6, 1, "", "sym_check"]], "romcomma.gsa.base.Calibrator": [[48, 3, 1, "", "__init__"]], "romcomma.gsa.base.Gaussian": [[49, 3, 1, "", "__init__"], [49, 2, 1, "", "cho_diag"], [49, 4, 1, "", "det"], [49, 3, 1, "", "expand_dims"], [49, 2, 1, "", "exponent"], [49, 4, 1, "", "pdf"]], "romcomma.gsa.calibrators": [[57, 1, 1, "", "ClosedSobol"], [58, 1, 1, "", "ClosedSobolWithError"], [59, 1, 1, "", "ClosedSobolWithRotation"]], "romcomma.gsa.calibrators.ClosedSobol": [[57, 4, 1, "", "META"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "marginalize"], [57, 4, 1, "", "name"], [57, 4, 1, "", "name_scope"], [57, 4, 1, "", "non_trainable_variables"], [57, 4, 1, "", "submodules"], [57, 4, 1, "", "trainable_variables"], [57, 4, 1, "", "variables"], [57, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calibrators.ClosedSobolWithError": [[58, 4, 1, "", "META"], [58, 1, 1, "", "RankEquation"], [58, 1, 1, "", "RankEquations"], [58, 3, 1, "", "__init__"], [58, 3, 1, "", "marginalize"], [58, 4, 1, "", "name"], [58, 4, 1, "", "name_scope"], [58, 4, 1, "", "non_trainable_variables"], [58, 4, 1, "", "submodules"], [58, 4, 1, "", "trainable_variables"], [58, 4, 1, "", "variables"], [58, 3, 1, "", "with_name_scope"]], "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquation": [[58, 3, 1, "", "count"], [58, 2, 1, "", "i"], [58, 3, 1, "", "index"], [58, 2, 1, "", "j"], [58, 2, 1, "", "k"], [58, 2, 1, "", "l"]], "romcomma.gsa.calibrators.ClosedSobolWithError.RankEquations": [[58, 2, 1, "", "DIAGONAL"], [58, 2, 1, "", "MIXED"], [58, 3, 1, "", "count"], [58, 3, 1, "", "index"]], "romcomma.gsa.calibrators.ClosedSobolWithRotation": [[59, 2, 1, "", "META"], [59, 3, 1, "", "__init__"], [59, 3, 1, "", "marginalize"], [59, 4, 1, "", "name"], [59, 4, 1, "", "name_scope"], [59, 4, 1, "", "non_trainable_variables"], [59, 4, 1, "", "submodules"], [59, 4, 1, "", "trainable_variables"], [59, 4, 1, "", "variables"], [59, 3, 1, "", "with_name_scope"]], "romcomma.gsa.models": [[61, 1, 1, "", "GSA"], [62, 1, 1, "", "Sobol"]], "romcomma.gsa.models.GSA": [[61, 1, 1, "", "Data"], [61, 1, 1, "", "Kind"], [61, 2, 1, "", "META"], [61, 3, 1, "", "__init__"], [61, 3, 1, "", "calibrate"], [61, 4, 1, "", "calibrator"]], "romcomma.gsa.models.GSA.Data": [[61, 1, 1, "", "NamedTuple"], [61, 3, 1, "", "copy"], [61, 3, 1, "", "delete"], [61, 3, 1, "", "empty"], [61, 3, 1, "", "move"], [61, 3, 1, "", "read"]], "romcomma.gsa.models.GSA.Data.NamedTuple": [[61, 2, 1, "", "NotImplemented"], [61, 3, 1, "", "count"], [61, 3, 1, "", "index"]], "romcomma.gsa.models.Sobol": [[62, 1, 1, "", "Data"], [62, 1, 1, "", "Kind"], [62, 4, 1, "", "META"], [62, 3, 1, "", "__init__"], [62, 3, 1, "", "calibrate"], [62, 4, 1, "", "calibrator"]], "romcomma.gsa.models.Sobol.Data": [[62, 2, 1, "", "NamedTuple"], [62, 3, 1, "", "copy"], [62, 3, 1, "", "delete"], [62, 3, 1, "", "empty"], [62, 3, 1, "", "move"], [62, 3, 1, "", "read"]], "romcomma.rom": [[64, 0, 0, "-", "old"]], "romcomma.run": [[66, 0, 0, "-", "context"], [69, 0, 0, "-", "function"], [77, 0, 0, "-", "results"], [80, 0, 0, "-", "sample"], [84, 0, 0, "-", "summarised"]], "romcomma.run.context": [[67, 6, 1, "", "Environment"], [68, 6, 1, "", "Timer"]], "romcomma.run.function": [[70, 5, 1, "", "ALL"], [71, 5, 1, "", "ISHIGAMI"], [72, 5, 1, "", "OAKLEY2004"], [73, 5, 1, "", "SOBOL_G"], [74, 1, 1, "", "Scalar"], [75, 1, 1, "", "Vector"], [76, 6, 1, "", "linspace"]], "romcomma.run.function.Scalar": [[74, 3, 1, "", "__init__"]], "romcomma.run.function.Vector": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "clear"], [75, 3, 1, "", "concat"], [75, 3, 1, "", "copy"], [75, 3, 1, "", "fromkeys"], [75, 3, 1, "", "get"], [75, 3, 1, "", "items"], [75, 3, 1, "", "keys"], [75, 4, 1, "", "meta"], [75, 3, 1, "", "pop"], [75, 3, 1, "", "popitem"], [75, 3, 1, "", "setdefault"], [75, 3, 1, "", "subVector"], [75, 3, 1, "", "update"], [75, 3, 1, "", "values"]], "romcomma.run.results": [[78, 1, 1, "", "Collect"], [79, 6, 1, "", "copy"]], "romcomma.run.results.Collect": [[78, 3, 1, "", "__init__"], [78, 2, 1, "", "csvs"], [78, 2, 1, "", "folders"], [78, 3, 1, "", "from_folders"], [78, 3, 1, "", "from_folds"], [78, 2, 1, "", "ignore_missing"], [78, 2, 1, "", "write_options"]], "romcomma.run.sample": [[81, 1, 1, "", "DOE"], [82, 1, 1, "", "Function"], [83, 1, 1, "", "GaussianNoise"]], "romcomma.run.sample.DOE": [[81, 2, 1, "", "Method"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "full_factorial"], [81, 3, 1, "", "latin_hypercube"]], "romcomma.run.sample.Function": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "collection"], [82, 3, 1, "", "into_K_folds"], [82, 4, 1, "", "repo"], [82, 3, 1, "", "rotate_folds"], [82, 3, 1, "", "un_rotate_folds"]], "romcomma.run.sample.GaussianNoise": [[83, 1, 1, "", "Variance"], [83, 3, 1, "", "__init__"]], "romcomma.run.sample.GaussianNoise.Variance": [[83, 4, 1, "", "matrix"], [83, 4, 1, "", "meta"]], "romcomma.run.summarised": [[85, 6, 1, "", "gpr"], [86, 6, 1, "", "gsa"]], "romcomma.user": [[88, 0, 0, "-", "benchmark"], [105, 0, 0, "-", "benchmark_gsa"], [107, 0, 0, "-", "benchmark_gsa2"], [109, 0, 0, "-", "gpr_from_function"], [125, 0, 0, "-", "gsa_from_csv"], [135, 0, 0, "-", "gsa_from_function"], [153, 0, 0, "-", "repo_from_csv"], [161, 0, 0, "-", "repo_from_function"]], "romcomma.user.benchmark": [[89, 6, 1, "", "DOE"], [90, 5, 1, "", "FUNCTION_VECTOR"], [91, 5, 1, "", "GSA_KINDS"], [92, 5, 1, "", "IS_GPR_COVARIANT"], [93, 5, 1, "", "IS_GPR_ISOTROPIC"], [94, 5, 1, "", "IS_GPR_READ"], [95, 5, 1, "", "IS_GSA_ERROR_CALCULATED"], [96, 5, 1, "", "IS_GSA_ERROR_PARTIAL"], [97, 5, 1, "", "IS_NOISE_COVARIANT"], [98, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [99, 5, 1, "", "K"], [100, 5, 1, "", "Ms"], [101, 5, 1, "", "NOISE_MAGNITUDES"], [102, 5, 1, "", "Ns"], [103, 5, 1, "", "ROTATIONS"], [104, 6, 1, "", "benchmark"]], "romcomma.user.benchmark_gsa": [[106, 5, 1, "", "BASE_FOLDER"]], "romcomma.user.benchmark_gsa2": [[108, 5, 1, "", "BASE_FOLDER"]], "romcomma.user.gpr_from_function": [[110, 6, 1, "", "DOE"], [111, 5, 1, "", "FUNCTION_VECTOR"], [112, 5, 1, "", "IGNORE_EXCEPTIONS"], [113, 5, 1, "", "IS_COVARIANT"], [114, 5, 1, "", "IS_ISOTROPIC"], [115, 5, 1, "", "IS_NOISE_COVARIANT"], [116, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [117, 5, 1, "", "IS_READ"], [118, 5, 1, "", "K"], [119, 5, 1, "", "Ms"], [120, 5, 1, "", "NOISE_MAGNITUDES"], [121, 5, 1, "", "Ns"], [122, 5, 1, "", "READ"], [123, 5, 1, "", "ROOT"], [124, 5, 1, "", "ROTATIONS"]], "romcomma.user.gsa_from_csv": [[126, 5, 1, "", "IS_COVARIANT"], [127, 5, 1, "", "IS_ISOTROPIC"], [128, 5, 1, "", "IS_NOISE_COVARIANT"], [129, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [130, 5, 1, "", "K"], [131, 5, 1, "", "KINDS"], [132, 5, 1, "", "NOISE_MAGNITUDE"], [133, 5, 1, "", "ROTATION"], [134, 6, 1, "", "run_gsa_from_function"]], "romcomma.user.gsa_from_function": [[136, 6, 1, "", "DOE"], [137, 5, 1, "", "FUNCTION_VECTOR"], [138, 5, 1, "", "IGNORE_EXCEPTIONS"], [139, 5, 1, "", "IS_COVARIANT"], [140, 5, 1, "", "IS_ISOTROPIC"], [141, 5, 1, "", "IS_NOISE_COVARIANT"], [142, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [143, 5, 1, "", "IS_READ"], [144, 5, 1, "", "K"], [145, 5, 1, "", "KINDS"], [146, 5, 1, "", "Ms"], [147, 5, 1, "", "NOISE_MAGNITUDES"], [148, 5, 1, "", "Ns"], [149, 5, 1, "", "READ"], [150, 5, 1, "", "ROOT"], [151, 5, 1, "", "ROTATIONS"], [152, 6, 1, "", "run_gsa_from_function"]], "romcomma.user.repo_from_csv": [[154, 5, 1, "", "ADD_NOISE"], [155, 5, 1, "", "CSV"], [156, 5, 1, "", "IS_NOISE_COVARIANT"], [157, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [158, 5, 1, "", "K"], [159, 5, 1, "", "NOISE_MAGNITUDES"], [160, 5, 1, "", "ROOT"]], "romcomma.user.repo_from_function": [[162, 6, 1, "", "DOE"], [163, 5, 1, "", "FUNCTION_VECTOR"], [164, 5, 1, "", "IS_NOISE_COVARIANT"], [165, 5, 1, "", "IS_NOISE_VARIANCE_RANDOM"], [166, 5, 1, "", "K"], [167, 5, 1, "", "Ms"], [168, 5, 1, "", "NOISE_MAGNITUDES"], [169, 5, 1, "", "Ns"], [170, 5, 1, "", "READ"], [171, 5, 1, "", "ROOT"], [172, 5, 1, "", "ROTATIONS"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"rom": [1, 63, 64], "comma": 1, "user": [1, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "guid": 1, "content": 1, "indic": 1, "tabl": 1, "packag": [], "refer": 2, "romcomma": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55], "class": [4, 5, 6, 7], "model": [7, 30, 31, 42, 43, 44, 45, 60, 61, 62], "paramet": [], "definit": [8, 9, 10, 11, 12, 13], "float": 10, "int": 11, "np": 12, "tf": 13, "data": [5, 14, 15, 16, 17, 18, 19], "storag": [15, 16, 17, 18, 19], "fold": 16, "frame": [6, 17], "normal": 18, "repositori": 19, "gpf": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "varianc": 22, "kernel": [23, 24, 25, 35, 39, 40, 41], "mostationari": 24, "rbf": [25, 41], "likelihood": [26, 27, 36, 44], "mogaussian": 27, "mean_funct": [28, 29], "momeanfunct": 29, "mogpr": 31, "test": [32, 33, 34, 35, 36, 37], "covari": 33, "increment": 34, "regression_data": 37, "gpr": [38, 39, 40, 41, 42, 43, 44, 45, 85], "gp": [], "gpinterfac": [], "gsa": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 86], "sobol": 62, "closedindex": [], "closedindexwitherror": [], "closedindexwithrot": [], "gaussian": 49, "det": [], "mean": 51, "m": [52, 100, 119, 146, 167], "rm": 53, "so": 54, "sym_check": 55, "undertak": [], "old": 64, "context": [66, 67, 68], "setup": [], "timer": 68, "function": [69, 70, 71, 72, 73, 74, 75, 76, 82], "all": 70, "ishigami": 71, "oakley2004": 72, "sobol_g": 73, "scalar": 74, "vector": 75, "linspac": 76, "result": [77, 78, 79], "collect": 78, "copi": 79, "run": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "sampl": [80, 81, 82, 83], "doe": [81, 89, 110, 136, 162], "gaussiannois": 83, "script": [], "base_fold": [106, 108], "get": 173, "start": 173, "instal": 173, "structur": [], "glossari": [0, 173], "abbrevi": [], "modul": [2, 173], "hierarchi": 173, "mogp": 45, "calcul": [], "gaussianwithout2pi": [], "closedsobol": 57, "closedsobolwitherror": 58, "closedsobolwithrot": 59, "benchmark_gsa": [105, 106], "gpr_from_funct": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "function_vector": [90, 111, 137, 163], "ignore_except": [112, 138], "is_covari": [113, 126, 139], "is_isotrop": [114, 127, 140], "is_noise_covari": [97, 115, 128, 141, 156, 164], "is_noise_variance_random": [98, 116, 129, 142, 157, 165], "is_read": [117, 143], "k": [99, 118, 130, 144, 158, 166], "noise_magnitud": [101, 120, 132, 147, 159, 168], "n": [102, 121, 148, 169], "read": [122, 149, 170], "root": [123, 150, 160, 171], "rotat": [103, 124, 133, 151, 172], "gsa_from_funct": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "kind": [131, 145], "repo_from_csv": [153, 154, 155, 156, 157, 158, 159, 160], "add_nois": 154, "csv": 155, "repo_from_funct": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "summaris": [84, 85, 86], "conceptu": 173, "toi": [], "effectively_zero": 9, "environ": 67, "calibr": [48, 56, 57, 58, 59], "log_pdf": [], "pdf": [], "diag_det": 50, "benchmark": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "gsa_kind": 91, "is_gpr_covari": 92, "is_gpr_isotrop": 93, "is_gpr_read": 94, "benchmark_gsa2": [107, 108], "gsa_from_csv": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "run_gsa_from_funct": [134, 152], "is_gsa_error_calcul": 95, "is_gsa_error_parti": 96}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Glossary": [[0, "glossary"], [173, "glossary"]], "rom-comma User Guide": [[1, "rom-comma-user-guide"]], "Contents": [[1, "contents"]], "Indices and Tables": [[1, "indices-and-tables"]], "Module Reference": [[2, "module-romcomma"]], "Getting Started": [[173, "getting-started"]], "Installation": [[173, "installation"]], "Conceptual Hierarchy": [[173, "conceptual-hierarchy"]], "Module Hierarchy": [[173, "module-hierarchy"]], "romcomma.base": [[3, "module-romcomma.base"]], "romcomma.base.classes": [[4, "module-romcomma.base.classes"]], "romcomma.base.classes.Data": [[5, "romcomma-base-classes-data"]], "romcomma.base.classes.Frame": [[6, "romcomma-base-classes-frame"]], "romcomma.base.classes.Model": [[7, "romcomma-base-classes-model"]], "romcomma.base.definitions": [[8, "module-romcomma.base.definitions"]], "romcomma.base.definitions.EFFECTIVELY_ZERO": [[9, "romcomma-base-definitions-effectively-zero"]], "romcomma.base.definitions.FLOAT": [[10, "romcomma-base-definitions-float"]], "romcomma.base.definitions.INT": [[11, "romcomma-base-definitions-int"]], "romcomma.base.definitions.NP": [[12, "romcomma-base-definitions-np"]], "romcomma.base.definitions.TF": [[13, "romcomma-base-definitions-tf"]], "romcomma.data": [[14, "module-romcomma.data"]], "romcomma.data.storage": [[15, "module-romcomma.data.storage"]], "romcomma.data.storage.Fold": [[16, "romcomma-data-storage-fold"]], "romcomma.data.storage.Frame": [[17, "romcomma-data-storage-frame"]], "romcomma.data.storage.Normalization": [[18, "romcomma-data-storage-normalization"]], "romcomma.data.storage.Repository": [[19, "romcomma-data-storage-repository"]], "romcomma.gpf": [[20, "module-romcomma.gpf"]], "romcomma.gpf.base": [[21, "module-romcomma.gpf.base"]], "romcomma.gpf.base.Variance": [[22, "romcomma-gpf-base-variance"]], "romcomma.gpf.kernels": [[23, "module-romcomma.gpf.kernels"]], "romcomma.gpf.kernels.MOStationary": [[24, "romcomma-gpf-kernels-mostationary"]], "romcomma.gpf.kernels.RBF": [[25, "romcomma-gpf-kernels-rbf"]], "romcomma.gpf.likelihoods": [[26, "module-romcomma.gpf.likelihoods"]], "romcomma.gpf.likelihoods.MOGaussian": [[27, "romcomma-gpf-likelihoods-mogaussian"]], "romcomma.gpf.mean_functions": [[28, "module-romcomma.gpf.mean_functions"]], "romcomma.gpf.mean_functions.MOMeanFunction": [[29, "romcomma-gpf-mean-functions-momeanfunction"]], "romcomma.gpf.models": [[30, "module-romcomma.gpf.models"]], "romcomma.gpf.models.MOGPR": [[31, "romcomma-gpf-models-mogpr"]], "romcomma.gpf.tests": [[32, "module-romcomma.gpf.tests"]], "romcomma.gpf.tests.covariance": [[33, "romcomma-gpf-tests-covariance"]], "romcomma.gpf.tests.increment": [[34, "romcomma-gpf-tests-increment"]], "romcomma.gpf.tests.kernel": [[35, "romcomma-gpf-tests-kernel"]], "romcomma.gpf.tests.likelihood": [[36, "romcomma-gpf-tests-likelihood"]], "romcomma.gpf.tests.regression_data": [[37, "romcomma-gpf-tests-regression-data"]], "romcomma.gpr": [[38, "module-romcomma.gpr"]], "romcomma.gpr.kernels": [[39, "module-romcomma.gpr.kernels"]], "romcomma.gpr.kernels.Kernel": [[40, "romcomma-gpr-kernels-kernel"]], "romcomma.gpr.kernels.RBF": [[41, "romcomma-gpr-kernels-rbf"]], "romcomma.gpr.models": [[42, "module-romcomma.gpr.models"]], "romcomma.gpr.models.GPR": [[43, "romcomma-gpr-models-gpr"]], "romcomma.gpr.models.Likelihood": [[44, "romcomma-gpr-models-likelihood"]], "romcomma.gpr.models.MOGP": [[45, "romcomma-gpr-models-mogp"]], "romcomma.gsa": [[46, "module-romcomma.gsa"]], "romcomma.gsa.base": [[47, "module-romcomma.gsa.base"]], "romcomma.gsa.base.Calibrator": [[48, "romcomma-gsa-base-calibrator"]], "romcomma.gsa.base.Gaussian": [[49, "romcomma-gsa-base-gaussian"]], "romcomma.gsa.base.diag_det": [[50, "romcomma-gsa-base-diag-det"]], "romcomma.gsa.base.mean": [[51, "romcomma-gsa-base-mean"]], "romcomma.gsa.base.ms": [[52, "romcomma-gsa-base-ms"]], "romcomma.gsa.base.rms": [[53, "romcomma-gsa-base-rms"]], "romcomma.gsa.base.sos": [[54, "romcomma-gsa-base-sos"]], "romcomma.gsa.base.sym_check": [[55, "romcomma-gsa-base-sym-check"]], "romcomma.gsa.calibrators": [[56, "module-romcomma.gsa.calibrators"]], "romcomma.gsa.calibrators.ClosedSobol": [[57, "romcomma-gsa-calibrators-closedsobol"]], "romcomma.gsa.calibrators.ClosedSobolWithError": [[58, "romcomma-gsa-calibrators-closedsobolwitherror"]], "romcomma.gsa.calibrators.ClosedSobolWithRotation": [[59, "romcomma-gsa-calibrators-closedsobolwithrotation"]], "romcomma.gsa.models": [[60, "module-romcomma.gsa.models"]], "romcomma.gsa.models.GSA": [[61, "romcomma-gsa-models-gsa"]], "romcomma.gsa.models.Sobol": [[62, "romcomma-gsa-models-sobol"]], "romcomma.rom": [[63, "module-romcomma.rom"]], "romcomma.rom.old": [[64, "module-romcomma.rom.old"]], "romcomma.run": [[65, "module-romcomma.run"]], "romcomma.run.context": [[66, "module-romcomma.run.context"]], "romcomma.run.context.Environment": [[67, "romcomma-run-context-environment"]], "romcomma.run.context.Timer": [[68, "romcomma-run-context-timer"]], "romcomma.run.function": [[69, "module-romcomma.run.function"]], "romcomma.run.function.ALL": [[70, "romcomma-run-function-all"]], "romcomma.run.function.ISHIGAMI": [[71, "romcomma-run-function-ishigami"]], "romcomma.run.function.OAKLEY2004": [[72, "romcomma-run-function-oakley2004"]], "romcomma.run.function.SOBOL_G": [[73, "romcomma-run-function-sobol-g"]], "romcomma.run.function.Scalar": [[74, "romcomma-run-function-scalar"]], "romcomma.run.function.Vector": [[75, "romcomma-run-function-vector"]], "romcomma.run.function.linspace": [[76, "romcomma-run-function-linspace"]], "romcomma.run.results": [[77, "module-romcomma.run.results"]], "romcomma.run.results.Collect": [[78, "romcomma-run-results-collect"]], "romcomma.run.results.copy": [[79, "romcomma-run-results-copy"]], "romcomma.run.sample": [[80, "module-romcomma.run.sample"]], "romcomma.run.sample.DOE": [[81, "romcomma-run-sample-doe"]], "romcomma.run.sample.Function": [[82, "romcomma-run-sample-function"]], "romcomma.run.sample.GaussianNoise": [[83, "romcomma-run-sample-gaussiannoise"]], "romcomma.run.summarised": [[84, "module-romcomma.run.summarised"]], "romcomma.run.summarised.gpr": [[85, "romcomma-run-summarised-gpr"]], "romcomma.run.summarised.gsa": [[86, "romcomma-run-summarised-gsa"]], "romcomma.user": [[87, "module-romcomma.user"]], "romcomma.user.benchmark.DOE": [[89, "romcomma-user-benchmark-doe"]], "romcomma.user.benchmark_gsa": [[105, "module-romcomma.user.benchmark_gsa"]], "romcomma.user.benchmark_gsa.BASE_FOLDER": [[106, "romcomma-user-benchmark-gsa-base-folder"]], "romcomma.user.benchmark_gsa2": [[107, "module-romcomma.user.benchmark_gsa2"]], "romcomma.user.benchmark_gsa2.BASE_FOLDER": [[108, "romcomma-user-benchmark-gsa2-base-folder"]], "romcomma.user.gpr_from_function": [[109, "module-romcomma.user.gpr_from_function"]], "romcomma.user.gpr_from_function.DOE": [[110, "romcomma-user-gpr-from-function-doe"]], "romcomma.user.gpr_from_function.FUNCTION_VECTOR": [[111, "romcomma-user-gpr-from-function-function-vector"]], "romcomma.user.gpr_from_function.IGNORE_EXCEPTIONS": [[112, "romcomma-user-gpr-from-function-ignore-exceptions"]], "romcomma.user.gpr_from_function.IS_COVARIANT": [[113, "romcomma-user-gpr-from-function-is-covariant"]], "romcomma.user.gpr_from_function.IS_ISOTROPIC": [[114, "romcomma-user-gpr-from-function-is-isotropic"]], "romcomma.user.gpr_from_function.IS_NOISE_COVARIANT": [[115, "romcomma-user-gpr-from-function-is-noise-covariant"]], "romcomma.user.gpr_from_function.IS_NOISE_VARIANCE_RANDOM": [[116, "romcomma-user-gpr-from-function-is-noise-variance-random"]], "romcomma.user.gpr_from_function.IS_READ": [[117, "romcomma-user-gpr-from-function-is-read"]], "romcomma.user.gpr_from_function.K": [[118, "romcomma-user-gpr-from-function-k"]], "romcomma.user.gpr_from_function.Ms": [[119, "romcomma-user-gpr-from-function-ms"]], "romcomma.user.gpr_from_function.NOISE_MAGNITUDES": [[120, "romcomma-user-gpr-from-function-noise-magnitudes"]], "romcomma.user.gpr_from_function.Ns": [[121, "romcomma-user-gpr-from-function-ns"]], "romcomma.user.gpr_from_function.READ": [[122, "romcomma-user-gpr-from-function-read"]], "romcomma.user.gpr_from_function.ROOT": [[123, "romcomma-user-gpr-from-function-root"]], "romcomma.user.gpr_from_function.ROTATIONS": [[124, "romcomma-user-gpr-from-function-rotations"]], "romcomma.user.gsa_from_csv": [[125, "module-romcomma.user.gsa_from_csv"]], "romcomma.user.gsa_from_csv.IS_COVARIANT": [[126, "romcomma-user-gsa-from-csv-is-covariant"]], "romcomma.user.gsa_from_csv.IS_ISOTROPIC": [[127, "romcomma-user-gsa-from-csv-is-isotropic"]], "romcomma.user.gsa_from_csv.IS_NOISE_COVARIANT": [[128, "romcomma-user-gsa-from-csv-is-noise-covariant"]], "romcomma.user.gsa_from_csv.IS_NOISE_VARIANCE_RANDOM": [[129, "romcomma-user-gsa-from-csv-is-noise-variance-random"]], "romcomma.user.gsa_from_csv.K": [[130, "romcomma-user-gsa-from-csv-k"]], "romcomma.user.gsa_from_csv.KINDS": [[131, "romcomma-user-gsa-from-csv-kinds"]], "romcomma.user.gsa_from_csv.NOISE_MAGNITUDE": [[132, "romcomma-user-gsa-from-csv-noise-magnitude"]], "romcomma.user.gsa_from_csv.ROTATION": [[133, "romcomma-user-gsa-from-csv-rotation"]], "romcomma.user.gsa_from_csv.run_gsa_from_function": [[134, "romcomma-user-gsa-from-csv-run-gsa-from-function"]], "romcomma.user.gsa_from_function": [[135, "module-romcomma.user.gsa_from_function"]], "romcomma.user.gsa_from_function.DOE": [[136, "romcomma-user-gsa-from-function-doe"]], "romcomma.user.gsa_from_function.FUNCTION_VECTOR": [[137, "romcomma-user-gsa-from-function-function-vector"]], "romcomma.user.gsa_from_function.IGNORE_EXCEPTIONS": [[138, "romcomma-user-gsa-from-function-ignore-exceptions"]], "romcomma.user.gsa_from_function.IS_COVARIANT": [[139, "romcomma-user-gsa-from-function-is-covariant"]], "romcomma.user.gsa_from_function.IS_ISOTROPIC": [[140, "romcomma-user-gsa-from-function-is-isotropic"]], "romcomma.user.gsa_from_function.IS_NOISE_COVARIANT": [[141, "romcomma-user-gsa-from-function-is-noise-covariant"]], "romcomma.user.gsa_from_function.IS_NOISE_VARIANCE_RANDOM": [[142, "romcomma-user-gsa-from-function-is-noise-variance-random"]], "romcomma.user.gsa_from_function.IS_READ": [[143, "romcomma-user-gsa-from-function-is-read"]], "romcomma.user.gsa_from_function.K": [[144, "romcomma-user-gsa-from-function-k"]], "romcomma.user.gsa_from_function.KINDS": [[145, "romcomma-user-gsa-from-function-kinds"]], "romcomma.user.gsa_from_function.Ms": [[146, "romcomma-user-gsa-from-function-ms"]], "romcomma.user.gsa_from_function.NOISE_MAGNITUDES": [[147, "romcomma-user-gsa-from-function-noise-magnitudes"]], "romcomma.user.gsa_from_function.Ns": [[148, "romcomma-user-gsa-from-function-ns"]], "romcomma.user.gsa_from_function.READ": [[149, "romcomma-user-gsa-from-function-read"]], "romcomma.user.gsa_from_function.ROOT": [[150, "romcomma-user-gsa-from-function-root"]], "romcomma.user.gsa_from_function.ROTATIONS": [[151, "romcomma-user-gsa-from-function-rotations"]], "romcomma.user.gsa_from_function.run_gsa_from_function": [[152, "romcomma-user-gsa-from-function-run-gsa-from-function"]], "romcomma.user.repo_from_csv": [[153, "module-romcomma.user.repo_from_csv"]], "romcomma.user.repo_from_csv.ADD_NOISE": [[154, "romcomma-user-repo-from-csv-add-noise"]], "romcomma.user.repo_from_csv.CSV": [[155, "romcomma-user-repo-from-csv-csv"]], "romcomma.user.repo_from_csv.IS_NOISE_COVARIANT": [[156, "romcomma-user-repo-from-csv-is-noise-covariant"]], "romcomma.user.repo_from_csv.IS_NOISE_VARIANCE_RANDOM": [[157, "romcomma-user-repo-from-csv-is-noise-variance-random"]], "romcomma.user.repo_from_csv.K": [[158, "romcomma-user-repo-from-csv-k"]], "romcomma.user.repo_from_csv.NOISE_MAGNITUDES": [[159, "romcomma-user-repo-from-csv-noise-magnitudes"]], "romcomma.user.repo_from_csv.ROOT": [[160, "romcomma-user-repo-from-csv-root"]], "romcomma.user.repo_from_function": [[161, "module-romcomma.user.repo_from_function"]], "romcomma.user.repo_from_function.DOE": [[162, "romcomma-user-repo-from-function-doe"]], "romcomma.user.repo_from_function.FUNCTION_VECTOR": [[163, "romcomma-user-repo-from-function-function-vector"]], "romcomma.user.repo_from_function.IS_NOISE_COVARIANT": [[164, "romcomma-user-repo-from-function-is-noise-covariant"]], "romcomma.user.repo_from_function.IS_NOISE_VARIANCE_RANDOM": [[165, "romcomma-user-repo-from-function-is-noise-variance-random"]], "romcomma.user.repo_from_function.K": [[166, "romcomma-user-repo-from-function-k"]], "romcomma.user.repo_from_function.Ms": [[167, "romcomma-user-repo-from-function-ms"]], "romcomma.user.repo_from_function.NOISE_MAGNITUDES": [[168, "romcomma-user-repo-from-function-noise-magnitudes"]], "romcomma.user.repo_from_function.Ns": [[169, "romcomma-user-repo-from-function-ns"]], "romcomma.user.repo_from_function.READ": [[170, "romcomma-user-repo-from-function-read"]], "romcomma.user.repo_from_function.ROOT": [[171, "romcomma-user-repo-from-function-root"]], "romcomma.user.repo_from_function.ROTATIONS": [[172, "romcomma-user-repo-from-function-rotations"]], "romcomma.user.benchmark": [[88, "module-romcomma.user.benchmark"]], "romcomma.user.benchmark.FUNCTION_VECTOR": [[90, "romcomma-user-benchmark-function-vector"]], "romcomma.user.benchmark.GSA_KINDS": [[91, "romcomma-user-benchmark-gsa-kinds"]], "romcomma.user.benchmark.IS_GPR_COVARIANT": [[92, "romcomma-user-benchmark-is-gpr-covariant"]], "romcomma.user.benchmark.IS_GPR_ISOTROPIC": [[93, "romcomma-user-benchmark-is-gpr-isotropic"]], "romcomma.user.benchmark.IS_GPR_READ": [[94, "romcomma-user-benchmark-is-gpr-read"]], "romcomma.user.benchmark.IS_GSA_ERROR_CALCULATED": [[95, "romcomma-user-benchmark-is-gsa-error-calculated"]], "romcomma.user.benchmark.IS_GSA_ERROR_PARTIAL": [[96, "romcomma-user-benchmark-is-gsa-error-partial"]], "romcomma.user.benchmark.IS_NOISE_COVARIANT": [[97, "romcomma-user-benchmark-is-noise-covariant"]], "romcomma.user.benchmark.IS_NOISE_VARIANCE_RANDOM": [[98, "romcomma-user-benchmark-is-noise-variance-random"]], "romcomma.user.benchmark.K": [[99, "romcomma-user-benchmark-k"]], "romcomma.user.benchmark.Ms": [[100, "romcomma-user-benchmark-ms"]], "romcomma.user.benchmark.NOISE_MAGNITUDES": [[101, "romcomma-user-benchmark-noise-magnitudes"]], "romcomma.user.benchmark.Ns": [[102, "romcomma-user-benchmark-ns"]], "romcomma.user.benchmark.ROTATIONS": [[103, "romcomma-user-benchmark-rotations"]], "romcomma.user.benchmark.benchmark": [[104, "romcomma-user-benchmark-benchmark"]]}, "indexentries": {"module": [[87, "module-romcomma.user"], [88, "module-romcomma.user.benchmark"]], "romcomma.user": [[87, "module-romcomma.user"]], "romcomma.user.benchmark": [[88, "module-romcomma.user.benchmark"]], "function_vector (in module romcomma.user.benchmark)": [[90, "romcomma.user.benchmark.FUNCTION_VECTOR"]], "gsa_kinds (in module romcomma.user.benchmark)": [[91, "romcomma.user.benchmark.GSA_KINDS"]], "is_gpr_covariant (in module romcomma.user.benchmark)": [[92, "romcomma.user.benchmark.IS_GPR_COVARIANT"]], "is_gpr_isotropic (in module romcomma.user.benchmark)": [[93, "romcomma.user.benchmark.IS_GPR_ISOTROPIC"]], "is_gpr_read (in module romcomma.user.benchmark)": [[94, "romcomma.user.benchmark.IS_GPR_READ"]], "is_gsa_error_calculated (in module romcomma.user.benchmark)": [[95, "romcomma.user.benchmark.IS_GSA_ERROR_CALCULATED"]], "is_gsa_error_partial (in module romcomma.user.benchmark)": [[96, "romcomma.user.benchmark.IS_GSA_ERROR_PARTIAL"]], "is_noise_covariant (in module romcomma.user.benchmark)": [[97, "romcomma.user.benchmark.IS_NOISE_COVARIANT"]], "is_noise_variance_random (in module romcomma.user.benchmark)": [[98, "romcomma.user.benchmark.IS_NOISE_VARIANCE_RANDOM"]], "k (in module romcomma.user.benchmark)": [[99, "romcomma.user.benchmark.K"]], "ms (in module romcomma.user.benchmark)": [[100, "romcomma.user.benchmark.Ms"]], "noise_magnitudes (in module romcomma.user.benchmark)": [[101, "romcomma.user.benchmark.NOISE_MAGNITUDES"]], "ns (in module romcomma.user.benchmark)": [[102, "romcomma.user.benchmark.Ns"]], "rotations (in module romcomma.user.benchmark)": [[103, "romcomma.user.benchmark.ROTATIONS"]], "benchmark() (in module romcomma.user.benchmark)": [[104, "romcomma.user.benchmark.benchmark"]]}})